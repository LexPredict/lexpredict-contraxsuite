---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config-{{ .Values.namespace }}
  namespace: {{ .Values.namespace}}
  labels:
    k8s-app: contrax-filebeat-{{ .Values.namespace }}
data:
  filebeat.yml: |-
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          templates:
            - condition:
                equals:
                  kubernetes.namespace: {{ .Values.namespace }}
              config:
                - type: container
                  paths:
                    /var/log/containers/*${data.kubernetes.container.id}.log
                  containers.ids:
                    - "${data.kubernetes.container.id}"
                  fields:
                    type: kubernetes_log
                    cluster: dev
                    multiline: "true"
                  multiline.pattern: '^[[:space:]]'
                  multiline.negate: false
                  multiline.match: after
                  processors:
                    - decode_json_fields:
                        when.regexp.message: '^{"'
                        fields: ["message"]
                        target: ""
                        overwrite_keys: true
    processors:
      - add_cloud_metadata:
      - add_kubernetes_metadata:
          in_cluster: true
          namespace: {{ .Values.namespace }}

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
      index: "filebeat-%{[special_log_type]:logs}-%{[agent.version]}-%{+yyyy.MM.dd}"

    setup.template.name: "filebeat"
    setup.template.pattern: "filebeat-*"
    setup.dashboards.index: "filebeat-*"
    setup.template.overwrite: true

    setup.dashboards.enabled: true

    setup.kibana.host: "contrax-kibana"
    setup.kibana.path: /kibana
    setup.kibana.protocol: "http"

    logging.metrics.enabled: false
    logging.level: info
    logging.to_files: true
    logging.to_syslog: false
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: contrax-filebeat-{{ .Values.namespace }}
  namespace: {{ .Values.namespace}}
  labels:
    k8s-app: contrax-filebeat-{{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      k8s-app: contrax-filebeat-{{ .Values.namespace }}
  template:
    metadata:
      labels:
        k8s-app: contrax-filebeat-{{ .Values.namespace }}
    spec:
      tolerations:
        - key: "kubernetes.azure.com/scalesetpriority"
          operator: "Equal"
          value: "spot"
          effect: "NoSchedule"
      serviceAccountName: filebeat-{{ .Values.namespace }}
      terminationGracePeriodSeconds: 30
      # hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: contrax-filebeat-{{ .Values.namespace }}
        image: {{ .Values.docker_filebeat_image }}
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          value: {{ .Values.docker_host_name_elasticsearch }}
        - name: ELASTICSEARCH_PORT
          value: "9200"
        # - name: ELASTICSEARCH_USERNAME
        #   value: elastic
        # - name: ELASTICSEARCH_PASSWORD
        #   value: changeme
        # - name: ELASTIC_CLOUD_ID
        #   value:
        # - name: ELASTIC_CLOUD_AUTH
        #   value:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          #privileged: true
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varlog
          mountPath: /var/log
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0640
          name: filebeat-config-{{ .Values.namespace }}
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlog
        hostPath:
          path: /var/log
      # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
      - name: data
        hostPath:
          # When filebeat runs as non-root user, this directory needs to be writable by group (g+w).
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: contrax-filebeat-{{ .Values.namespace }}
subjects:
- kind: ServiceAccount
  name: filebeat-{{ .Values.namespace }}
  namespace: {{ .Values.namespace}}
roleRef:
  kind: ClusterRole
  name: filebeat-{{ .Values.namespace }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat-{{ .Values.namespace }}
  labels:
    k8s-app: contrax-filebeat-{{ .Values.namespace }}
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat-{{ .Values.namespace }}
  namespace: {{ .Values.namespace}}
  labels:
    k8s-app: contrax-filebeat-{{ .Values.namespace }}
---