# Generated by Django 2.2.10 on 2020-05-13 18:44

from django.db import migrations, connection


trigger_name = 'document_field_value_update'


def add_trigger(_, __):
    remove_trigger(_, __)
    with connection.cursor() as cursor:
        cursor.execute("""
CREATE OR REPLACE FUNCTION mark_document_dirty() RETURNS TRIGGER AS
$BODY$
BEGIN
    UPDATE document_document SET fields_dirty = now() WHERE id = new.document_id;
    RETURN new;
END;
$BODY$
language plpgsql;""")
        cursor.execute(f"""
            CREATE TRIGGER {trigger_name} BEFORE INSERT OR UPDATE
            ON document_fieldvalue FOR EACH ROW EXECUTE FUNCTION
            mark_document_dirty();""")


def remove_trigger(_, __):
    with connection.cursor() as cursor:
        cursor.execute(f'DROP TRIGGER IF EXISTS {trigger_name} ON document_fieldvalue;')
        cursor.execute(f'DROP FUNCTION IF EXISTS mark_document_dirty;')


class Migration(migrations.Migration):

    dependencies = [
        ('document', '0226_remove_documentfield_stop_words'),
    ]

    operations = [
        migrations.RunPython(
            remove_trigger,
            reverse_code=migrations.RunPython.noop
        ),

        migrations.RemoveField(
            model_name='document',
            name='fields_dirty',
        ),
        migrations.RemoveField(
            model_name='historicaldocument',
            name='fields_dirty',
        ),
        migrations.RunPython(
            migrations.RunPython.noop,
            reverse_code=add_trigger
        ),

        migrations.RunPython(
            remove_trigger,
            reverse_code=migrations.RunPython.noop
        ),
    ]
