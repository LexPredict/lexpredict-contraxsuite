# Generated by Django 2.2.13 on 2020-12-24 15:33

import apps.common.model_utils.improved_django_json_encoder
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('document', '0221_auto_20201216_1437'),
    ]

    operations = [
        migrations.AlterField(
            model_name='documentfield',
            name='default_value',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, encoder=apps.common.model_utils.improved_django_json_encoder.ImprovedDjangoJSONEncoder, help_text='If populated, the Default Value will be displayed for this Field if no other value is found by the chosen Value Detection Strategy. Leave this form blank to have the Field Value remain empty by default. Please wrap entries with quotes, example: “landlord”. This is only applicable to Choice and Multi Choice Fields.', null=True),
        ),
        migrations.AlterField(
            model_name='documentfield',
            name='value_detection_strategy',
            field=models.CharField(choices=[('disabled', 'Field detection disabled'), ('use_regexps_only', 'No ML. Use regexp Field Detectors'), ('regexp_table', 'Use regexp pattern: value collection'), ('use_formula_only', 'No ML. Use formula only'), ('regexps_and_text_based_ml', 'Start with regexps, switch to text-based ML when possible'), ('text_based_ml_only', 'Use pre-trained text-based ML only'), ('formula_and_fields_based_ml', 'Start with formula, switch to fields-based ML when possible'), ('fields_based_ml_only', 'Use pre-trained field-based ML only'), ('fields_based_prob_ml_only', 'Use pre-trained field-based ML with "Unsure" category'), ('python_coded_field', 'Use python class for value detection'), ('field_based_regexps', 'Apply regexp Field Detectors to depends-on field values'), ('mlflow_model', 'Use pre-trained MLflow model to find matching text units')], default='use_regexps_only', max_length=50),
        ),
        migrations.AlterField(
            model_name='documentfield',
            name='value_regexp',
            field=models.TextField(blank=True, help_text='This regular expression is run on the sentence \n    found by a Field Detector and extracts a specific string value from a Text Unit. If the regular expression returns multiple matching groups, then the first matching group will be used by the Field. This is only applicable to String Fields.', null=True),
        ),
    ]
