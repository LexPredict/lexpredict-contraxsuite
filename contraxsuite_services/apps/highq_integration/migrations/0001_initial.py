# Generated by Django 2.2.10 on 2020-11-19 06:45

from django.conf import settings
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('project', '0042_auto_20200713_1518'),
        ('document', '0219_auto_20201119_0645'),
    ]

    operations = [
        migrations.CreateModel(
            name='HighQConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='A unique and descriptive name for this HighQ Integration Configuration.', max_length=128, null=True, unique=True)),
                ('enabled', models.BooleanField(default=False, help_text='Whether or not this HighQ Integration Configuration is active.')),
                ('update_existing_isheet_items', models.BooleanField(default=False, help_text='Whether or not changes to document field values in ContraxSuite should update iSheet rows in HighQ.', verbose_name='Update Existing iSheet Items')),
                ('api_client_id', models.PositiveIntegerField(verbose_name='API Client ID')),
                ('api_secret_key', models.CharField(max_length=32, verbose_name='API Secret Key')),
                ('api_instance_url', models.URLField(verbose_name='API Instance URL')),
                ('highq_site_id', models.PositiveIntegerField(verbose_name='HighQ Site ID')),
                ('highq_folder_id', models.PositiveIntegerField(help_text='ContraxSuite will pull documents from this source.', verbose_name='HighQ Folder ID')),
                ('highq_isheet_id', models.PositiveIntegerField(help_text='ContraxSuite will send information to this destination.', verbose_name='HighQ iSheet ID')),
                ('refresh_token', models.CharField(blank=True, max_length=1024, null=True)),
                ('access_token', models.CharField(blank=True, max_length=1024, null=True)),
                ('access_token_expiration', models.DateTimeField(blank=True, null=True)),
                ('sync_frequency_minutes', models.PositiveIntegerField(default=10, help_text='ContraxSuite will attempt synchronization at fixed intervals of this many minutes.', verbose_name='Synchronization Frequency (minutes)')),
                ('last_sync_start', models.DateTimeField(blank=True, null=True)),
                ('assignee', models.ForeignKey(blank=True, help_text='ContraxSuite will assign HighQ Documents to this user.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'HighQ Integration Configuration',
                'verbose_name_plural': 'HighQ Integration Configurations',
            },
        ),
        migrations.CreateModel(
            name='HighQiSheetColumnIDMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('isheet_id', models.PositiveIntegerField(help_text='The iSheet ID must match the one defined in the HighQ Integration Configuration. Save to apply.', verbose_name=' iSheet ID')),
                ('contraxsuite_documenttype', models.ForeignKey(help_text='The ContraxSuite DocumentType must match the one defined in the HighQ Integration Configuration. Save to apply.', on_delete=django.db.models.deletion.CASCADE, to='document.DocumentType', verbose_name='ContraxSuite DocumentType')),
            ],
            options={
                'verbose_name': ' iSheet Column : ContraxSuite Field Mapping',
                'verbose_name_plural': ' iSheet Column : ContraxSuite Field Mappings',
            },
        ),
        migrations.CreateModel(
            name='HighQiSheetColumnChoiceMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('isheet_column_id', models.PositiveIntegerField(verbose_name=' iSheet Column ID')),
                ('choice_mapping', django.contrib.postgres.fields.hstore.HStoreField()),
                ('contraxsuite_documentfield', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.DocumentField', verbose_name='ContraxSuite DocumentField')),
            ],
            options={
                'verbose_name': ' iSheet Column Choice : ContraxSuite Field Choice Mapping',
                'verbose_name_plural': ' iSheet Column Choice : ContraxSuite Field Choice Mappings',
            },
        ),
        migrations.CreateModel(
            name='HighQiSheetColumnAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contraxsuite_field_code', models.CharField(max_length=62, verbose_name='ContraxSuite Field Code')),
                ('highq_isheet_column_id', models.PositiveIntegerField(verbose_name='HighQ iSheet Column ID')),
                ('highq_isheet_column_choice_mapping', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='highq_integration.HighQiSheetColumnChoiceMapping', verbose_name='HighQ iSheet Column Choice Mapping')),
                ('highq_isheet_column_id_mapping', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='highq_integration.HighQiSheetColumnIDMapping', verbose_name='HighQ iSheet Column ID Mapping')),
            ],
            options={
                'verbose_name': 'HighQ iSheet Column Association',
                'verbose_name_plural': 'HighQ iSheet Column Associations',
            },
        ),
        migrations.CreateModel(
            name='HighQDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('highq_file_id', models.PositiveIntegerField(verbose_name='HighQ File ID')),
                ('highq_isheet_item_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='HighQ iSheet Item ("Record") ID')),
                ('in_highq_folder', models.BooleanField(default=True, help_text='Is the corresponding HighQ file still in its HighQ source directory?', verbose_name='In HighQ folder?')),
                ('recorded_in_isheet', models.BooleanField(default=False, help_text='Does the corresponding HighQ file have an iSheet record?', verbose_name='Recorded in iSheet?')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.Document', verbose_name='ContraxSuite Document')),
                ('highq_configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='highq_integration.HighQConfiguration', verbose_name='HighQ Configuration')),
            ],
            options={
                'verbose_name': 'HighQ Document',
                'verbose_name_plural': 'HighQ Documents',
            },
        ),
        migrations.AddField(
            model_name='highqconfiguration',
            name='isheet_column_mapping',
            field=models.ForeignKey(blank=True, help_text='Map ContraxSuite fields to iSheet columns. Save this HighQ Integration Configuration before adding Column Associations.', null=True, on_delete=django.db.models.deletion.CASCADE, to='highq_integration.HighQiSheetColumnIDMapping', verbose_name=' iSheet Column Mapping'),
        ),
        migrations.AddField(
            model_name='highqconfiguration',
            name='project',
            field=models.ForeignKey(help_text='ContraxSuite will send HighQ files to this project.', on_delete=django.db.models.deletion.CASCADE, to='project.Project', verbose_name='ContraxSuite Project'),
        ),
        migrations.AddConstraint(
            model_name='highqdocument',
            constraint=models.UniqueConstraint(fields=('highq_configuration', 'highq_file_id'), name='HighQConfiguration_HighQFileID'),
        ),
    ]
