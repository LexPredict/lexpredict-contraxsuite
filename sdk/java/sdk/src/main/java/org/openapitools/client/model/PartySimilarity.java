/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.openapitools.client.model.DocumentSimilarityRun;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PartySimilarity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class PartySimilarity {
  public static final String SERIALIZED_NAME_PK = "pk";
  @SerializedName(SERIALIZED_NAME_PK)
  private Integer pk;

  public static final String SERIALIZED_NAME_PARTY_A_NAME = "party_a__name";
  @SerializedName(SERIALIZED_NAME_PARTY_A_NAME)
  private String partyAName;

  public static final String SERIALIZED_NAME_PARTY_A_DESCRIPTION = "party_a__description";
  @SerializedName(SERIALIZED_NAME_PARTY_A_DESCRIPTION)
  private String partyADescription;

  public static final String SERIALIZED_NAME_PARTY_A_PK = "party_a__pk";
  @SerializedName(SERIALIZED_NAME_PARTY_A_PK)
  private String partyAPk;

  public static final String SERIALIZED_NAME_PARTY_A_TYPE_ABBR = "party_a__type_abbr";
  @SerializedName(SERIALIZED_NAME_PARTY_A_TYPE_ABBR)
  private String partyATypeAbbr;

  public static final String SERIALIZED_NAME_PARTY_B_NAME = "party_b__name";
  @SerializedName(SERIALIZED_NAME_PARTY_B_NAME)
  private String partyBName;

  public static final String SERIALIZED_NAME_PARTY_B_PK = "party_b__pk";
  @SerializedName(SERIALIZED_NAME_PARTY_B_PK)
  private String partyBPk;

  public static final String SERIALIZED_NAME_PARTY_B_TYPE_ABBR = "party_b__type_abbr";
  @SerializedName(SERIALIZED_NAME_PARTY_B_TYPE_ABBR)
  private String partyBTypeAbbr;

  public static final String SERIALIZED_NAME_SIMILARITY = "similarity";
  @SerializedName(SERIALIZED_NAME_SIMILARITY)
  private BigDecimal similarity;

  public static final String SERIALIZED_NAME_RUN = "run";
  @SerializedName(SERIALIZED_NAME_RUN)
  private DocumentSimilarityRun run;

  public PartySimilarity() { 
  }

  
  public PartySimilarity(
     Integer pk, 
     String partyAName, 
     String partyADescription, 
     String partyAPk, 
     String partyATypeAbbr, 
     String partyBName, 
     String partyBPk, 
     String partyBTypeAbbr
  ) {
    this();
    this.pk = pk;
    this.partyAName = partyAName;
    this.partyADescription = partyADescription;
    this.partyAPk = partyAPk;
    this.partyATypeAbbr = partyATypeAbbr;
    this.partyBName = partyBName;
    this.partyBPk = partyBPk;
    this.partyBTypeAbbr = partyBTypeAbbr;
  }

   /**
   * Get pk
   * @return pk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPk() {
    return pk;
  }




   /**
   * Get partyAName
   * @return partyAName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartyAName() {
    return partyAName;
  }




   /**
   * Get partyADescription
   * @return partyADescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartyADescription() {
    return partyADescription;
  }




   /**
   * Get partyAPk
   * @return partyAPk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartyAPk() {
    return partyAPk;
  }




   /**
   * Get partyATypeAbbr
   * @return partyATypeAbbr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartyATypeAbbr() {
    return partyATypeAbbr;
  }




   /**
   * Get partyBName
   * @return partyBName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartyBName() {
    return partyBName;
  }




   /**
   * Get partyBPk
   * @return partyBPk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartyBPk() {
    return partyBPk;
  }




   /**
   * Get partyBTypeAbbr
   * @return partyBTypeAbbr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartyBTypeAbbr() {
    return partyBTypeAbbr;
  }




  public PartySimilarity similarity(BigDecimal similarity) {
    
    this.similarity = similarity;
    return this;
  }

   /**
   * Get similarity
   * @return similarity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getSimilarity() {
    return similarity;
  }


  public void setSimilarity(BigDecimal similarity) {
    this.similarity = similarity;
  }


  public PartySimilarity run(DocumentSimilarityRun run) {
    
    this.run = run;
    return this;
  }

   /**
   * Get run
   * @return run
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DocumentSimilarityRun getRun() {
    return run;
  }


  public void setRun(DocumentSimilarityRun run) {
    this.run = run;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartySimilarity partySimilarity = (PartySimilarity) o;
    return Objects.equals(this.pk, partySimilarity.pk) &&
        Objects.equals(this.partyAName, partySimilarity.partyAName) &&
        Objects.equals(this.partyADescription, partySimilarity.partyADescription) &&
        Objects.equals(this.partyAPk, partySimilarity.partyAPk) &&
        Objects.equals(this.partyATypeAbbr, partySimilarity.partyATypeAbbr) &&
        Objects.equals(this.partyBName, partySimilarity.partyBName) &&
        Objects.equals(this.partyBPk, partySimilarity.partyBPk) &&
        Objects.equals(this.partyBTypeAbbr, partySimilarity.partyBTypeAbbr) &&
        Objects.equals(this.similarity, partySimilarity.similarity) &&
        Objects.equals(this.run, partySimilarity.run);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pk, partyAName, partyADescription, partyAPk, partyATypeAbbr, partyBName, partyBPk, partyBTypeAbbr, similarity, run);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartySimilarity {\n");
    sb.append("    pk: ").append(toIndentedString(pk)).append("\n");
    sb.append("    partyAName: ").append(toIndentedString(partyAName)).append("\n");
    sb.append("    partyADescription: ").append(toIndentedString(partyADescription)).append("\n");
    sb.append("    partyAPk: ").append(toIndentedString(partyAPk)).append("\n");
    sb.append("    partyATypeAbbr: ").append(toIndentedString(partyATypeAbbr)).append("\n");
    sb.append("    partyBName: ").append(toIndentedString(partyBName)).append("\n");
    sb.append("    partyBPk: ").append(toIndentedString(partyBPk)).append("\n");
    sb.append("    partyBTypeAbbr: ").append(toIndentedString(partyBTypeAbbr)).append("\n");
    sb.append("    similarity: ").append(toIndentedString(similarity)).append("\n");
    sb.append("    run: ").append(toIndentedString(run)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pk");
    openapiFields.add("party_a__name");
    openapiFields.add("party_a__description");
    openapiFields.add("party_a__pk");
    openapiFields.add("party_a__type_abbr");
    openapiFields.add("party_b__name");
    openapiFields.add("party_b__pk");
    openapiFields.add("party_b__type_abbr");
    openapiFields.add("similarity");
    openapiFields.add("run");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("similarity");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PartySimilarity
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (PartySimilarity.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in PartySimilarity is not found in the empty JSON string", PartySimilarity.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PartySimilarity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PartySimilarity` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PartySimilarity.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("party_a__name") != null && !jsonObj.get("party_a__name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `party_a__name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("party_a__name").toString()));
      }
      if (jsonObj.get("party_a__description") != null && !jsonObj.get("party_a__description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `party_a__description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("party_a__description").toString()));
      }
      if (jsonObj.get("party_a__pk") != null && !jsonObj.get("party_a__pk").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `party_a__pk` to be a primitive type in the JSON string but got `%s`", jsonObj.get("party_a__pk").toString()));
      }
      if (jsonObj.get("party_a__type_abbr") != null && !jsonObj.get("party_a__type_abbr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `party_a__type_abbr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("party_a__type_abbr").toString()));
      }
      if (jsonObj.get("party_b__name") != null && !jsonObj.get("party_b__name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `party_b__name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("party_b__name").toString()));
      }
      if (jsonObj.get("party_b__pk") != null && !jsonObj.get("party_b__pk").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `party_b__pk` to be a primitive type in the JSON string but got `%s`", jsonObj.get("party_b__pk").toString()));
      }
      if (jsonObj.get("party_b__type_abbr") != null && !jsonObj.get("party_b__type_abbr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `party_b__type_abbr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("party_b__type_abbr").toString()));
      }
      if (jsonObj.get("similarity") != null && !jsonObj.get("similarity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `similarity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("similarity").toString()));
      }
      // validate the optional field `run`
      if (jsonObj.getAsJsonObject("run") != null) {
        DocumentSimilarityRun.validateJsonObject(jsonObj.getAsJsonObject("run"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PartySimilarity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PartySimilarity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PartySimilarity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PartySimilarity.class));

       return (TypeAdapter<T>) new TypeAdapter<PartySimilarity>() {
           @Override
           public void write(JsonWriter out, PartySimilarity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PartySimilarity read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PartySimilarity given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PartySimilarity
  * @throws IOException if the JSON string is invalid with respect to PartySimilarity
  */
  public static PartySimilarity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PartySimilarity.class);
  }

 /**
  * Convert an instance of PartySimilarity to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

