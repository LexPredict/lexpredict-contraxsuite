/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ProjectListStatusData;
import org.openapitools.client.model.ProjectListTypeData;

/**
 * ProjectList
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-21T17:23:12.379447+03:00[Europe/Moscow]")
public class ProjectList {
  public static final String SERIALIZED_NAME_PK = "pk";
  @SerializedName(SERIALIZED_NAME_PK)
  private Integer pk;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_STATUS_DATA = "status_data";
  @SerializedName(SERIALIZED_NAME_STATUS_DATA)
  private ProjectListStatusData statusData;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_TYPE_DATA = "type_data";
  @SerializedName(SERIALIZED_NAME_TYPE_DATA)
  private ProjectListTypeData typeData;

  public static final String SERIALIZED_NAME_COUNT_OF_DOCUMENTS = "count_of_documents";
  @SerializedName(SERIALIZED_NAME_COUNT_OF_DOCUMENTS)
  private Integer countOfDocuments;


   /**
   * Get pk
   * @return pk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPk() {
    return pk;
  }




  public ProjectList name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ProjectList status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    this.status = status;
  }


  public ProjectList statusData(ProjectListStatusData statusData) {
    
    this.statusData = statusData;
    return this;
  }

   /**
   * Get statusData
   * @return statusData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProjectListStatusData getStatusData() {
    return statusData;
  }


  public void setStatusData(ProjectListStatusData statusData) {
    this.statusData = statusData;
  }


  public ProjectList type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public ProjectList typeData(ProjectListTypeData typeData) {
    
    this.typeData = typeData;
    return this;
  }

   /**
   * Get typeData
   * @return typeData
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ProjectListTypeData getTypeData() {
    return typeData;
  }


  public void setTypeData(ProjectListTypeData typeData) {
    this.typeData = typeData;
  }


  public ProjectList countOfDocuments(Integer countOfDocuments) {
    
    this.countOfDocuments = countOfDocuments;
    return this;
  }

   /**
   * Get countOfDocuments
   * @return countOfDocuments
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCountOfDocuments() {
    return countOfDocuments;
  }


  public void setCountOfDocuments(Integer countOfDocuments) {
    this.countOfDocuments = countOfDocuments;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectList projectList = (ProjectList) o;
    return Objects.equals(this.pk, projectList.pk) &&
        Objects.equals(this.name, projectList.name) &&
        Objects.equals(this.status, projectList.status) &&
        Objects.equals(this.statusData, projectList.statusData) &&
        Objects.equals(this.type, projectList.type) &&
        Objects.equals(this.typeData, projectList.typeData) &&
        Objects.equals(this.countOfDocuments, projectList.countOfDocuments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pk, name, status, statusData, type, typeData, countOfDocuments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectList {\n");
    sb.append("    pk: ").append(toIndentedString(pk)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusData: ").append(toIndentedString(statusData)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeData: ").append(toIndentedString(typeData)).append("\n");
    sb.append("    countOfDocuments: ").append(toIndentedString(countOfDocuments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

