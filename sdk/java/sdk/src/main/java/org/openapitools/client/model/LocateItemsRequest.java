/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.1.188
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LocateItemsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-19T15:46:46.101102+03:00[Europe/Moscow]")
public class LocateItemsRequest {
  public static final String SERIALIZED_NAME_ITEMS_TO_LOCATE = "items_to_locate";
  @SerializedName(SERIALIZED_NAME_ITEMS_TO_LOCATE)
  private List<String> itemsToLocate = new ArrayList<String>();

  public static final String SERIALIZED_NAME_PROJECT_ID = "project_id";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private Integer projectId;

  public static final String SERIALIZED_NAME_DELETE_EXISTING = "delete_existing";
  @SerializedName(SERIALIZED_NAME_DELETE_EXISTING)
  private Boolean deleteExisting;

  public static final String SERIALIZED_NAME_SEARCH_IN = "search_in";
  @SerializedName(SERIALIZED_NAME_SEARCH_IN)
  private List<String> searchIn = null;

  public static final String SERIALIZED_NAME_SELECTED_TAGS = "selected_tags";
  @SerializedName(SERIALIZED_NAME_SELECTED_TAGS)
  private List<String> selectedTags = null;

  public LocateItemsRequest() { 
  }

  public LocateItemsRequest itemsToLocate(List<String> itemsToLocate) {
    
    this.itemsToLocate = itemsToLocate;
    return this;
  }

  public LocateItemsRequest addItemsToLocateItem(String itemsToLocateItem) {
    this.itemsToLocate.add(itemsToLocateItem);
    return this;
  }

   /**
   * Get itemsToLocate
   * @return itemsToLocate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getItemsToLocate() {
    return itemsToLocate;
  }


  public void setItemsToLocate(List<String> itemsToLocate) {
    this.itemsToLocate = itemsToLocate;
  }


  public LocateItemsRequest projectId(Integer projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getProjectId() {
    return projectId;
  }


  public void setProjectId(Integer projectId) {
    this.projectId = projectId;
  }


  public LocateItemsRequest deleteExisting(Boolean deleteExisting) {
    
    this.deleteExisting = deleteExisting;
    return this;
  }

   /**
   * Get deleteExisting
   * @return deleteExisting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDeleteExisting() {
    return deleteExisting;
  }


  public void setDeleteExisting(Boolean deleteExisting) {
    this.deleteExisting = deleteExisting;
  }


  public LocateItemsRequest searchIn(List<String> searchIn) {
    
    this.searchIn = searchIn;
    return this;
  }

  public LocateItemsRequest addSearchInItem(String searchInItem) {
    if (this.searchIn == null) {
      this.searchIn = new ArrayList<String>();
    }
    this.searchIn.add(searchInItem);
    return this;
  }

   /**
   * Get searchIn
   * @return searchIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getSearchIn() {
    return searchIn;
  }


  public void setSearchIn(List<String> searchIn) {
    this.searchIn = searchIn;
  }


  public LocateItemsRequest selectedTags(List<String> selectedTags) {
    
    this.selectedTags = selectedTags;
    return this;
  }

  public LocateItemsRequest addSelectedTagsItem(String selectedTagsItem) {
    if (this.selectedTags == null) {
      this.selectedTags = new ArrayList<String>();
    }
    this.selectedTags.add(selectedTagsItem);
    return this;
  }

   /**
   * Get selectedTags
   * @return selectedTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getSelectedTags() {
    return selectedTags;
  }


  public void setSelectedTags(List<String> selectedTags) {
    this.selectedTags = selectedTags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocateItemsRequest locateItemsRequest = (LocateItemsRequest) o;
    return Objects.equals(this.itemsToLocate, locateItemsRequest.itemsToLocate) &&
        Objects.equals(this.projectId, locateItemsRequest.projectId) &&
        Objects.equals(this.deleteExisting, locateItemsRequest.deleteExisting) &&
        Objects.equals(this.searchIn, locateItemsRequest.searchIn) &&
        Objects.equals(this.selectedTags, locateItemsRequest.selectedTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemsToLocate, projectId, deleteExisting, searchIn, selectedTags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocateItemsRequest {\n");
    sb.append("    itemsToLocate: ").append(toIndentedString(itemsToLocate)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    deleteExisting: ").append(toIndentedString(deleteExisting)).append("\n");
    sb.append("    searchIn: ").append(toIndentedString(searchIn)).append("\n");
    sb.append("    selectedTags: ").append(toIndentedString(selectedTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

