/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.1.188
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * DocumentFieldValue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-19T15:46:46.101102+03:00[Europe/Moscow]")
public class DocumentFieldValue {
  public static final String SERIALIZED_NAME_PK = "pk";
  @SerializedName(SERIALIZED_NAME_PK)
  private Integer pk;

  public static final String SERIALIZED_NAME_PROJECT_ID = "project_id";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private Integer projectId;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public static final String SERIALIZED_NAME_DOCUMENT_ID = "document_id";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_ID)
  private String documentId;

  public static final String SERIALIZED_NAME_DOCUMENT_NAME = "document_name";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_NAME)
  private String documentName;

  public static final String SERIALIZED_NAME_DOCUMENT_STATUS = "document_status";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_STATUS)
  private String documentStatus;

  public static final String SERIALIZED_NAME_FIELD_ID = "field_id";
  @SerializedName(SERIALIZED_NAME_FIELD_ID)
  private String fieldId;

  public static final String SERIALIZED_NAME_FIELD_NAME = "field_name";
  @SerializedName(SERIALIZED_NAME_FIELD_NAME)
  private String fieldName;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Object value;

  public static final String SERIALIZED_NAME_PYTHON_VALUE = "python_value";
  @SerializedName(SERIALIZED_NAME_PYTHON_VALUE)
  private String pythonValue;

  public static final String SERIALIZED_NAME_LOCATION_TEXT = "location_text";
  @SerializedName(SERIALIZED_NAME_LOCATION_TEXT)
  private String locationText;

  public static final String SERIALIZED_NAME_MODIFIED_BY_USERNAME = "modified_by_username";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_USERNAME)
  private String modifiedByUsername;

  public static final String SERIALIZED_NAME_MODIFIED_BY_ID = "modified_by_id";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_ID)
  private String modifiedById;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modified_date";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public DocumentFieldValue() { 
  }

  
  public DocumentFieldValue(
     Integer pk, 
     Integer projectId, 
     String project, 
     String documentId, 
     String documentName, 
     String documentStatus, 
     String fieldId, 
     String fieldName, 
     String pythonValue, 
     String locationText, 
     String modifiedByUsername, 
     String modifiedById, 
     OffsetDateTime modifiedDate
  ) {
    this();
    this.pk = pk;
    this.projectId = projectId;
    this.project = project;
    this.documentId = documentId;
    this.documentName = documentName;
    this.documentStatus = documentStatus;
    this.fieldId = fieldId;
    this.fieldName = fieldName;
    this.pythonValue = pythonValue;
    this.locationText = locationText;
    this.modifiedByUsername = modifiedByUsername;
    this.modifiedById = modifiedById;
    this.modifiedDate = modifiedDate;
  }

   /**
   * Get pk
   * @return pk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPk() {
    return pk;
  }




   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProjectId() {
    return projectId;
  }




   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProject() {
    return project;
  }




   /**
   * Get documentId
   * @return documentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentId() {
    return documentId;
  }




   /**
   * Get documentName
   * @return documentName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentName() {
    return documentName;
  }




   /**
   * Get documentStatus
   * @return documentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentStatus() {
    return documentStatus;
  }




   /**
   * Get fieldId
   * @return fieldId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFieldId() {
    return fieldId;
  }




   /**
   * Get fieldName
   * @return fieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFieldName() {
    return fieldName;
  }




  public DocumentFieldValue value(Object value) {
    
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getValue() {
    return value;
  }


  public void setValue(Object value) {
    this.value = value;
  }


   /**
   * Get pythonValue
   * @return pythonValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPythonValue() {
    return pythonValue;
  }




   /**
   * Get locationText
   * @return locationText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocationText() {
    return locationText;
  }




   /**
   * Get modifiedByUsername
   * @return modifiedByUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModifiedByUsername() {
    return modifiedByUsername;
  }




   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModifiedById() {
    return modifiedById;
  }




   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentFieldValue documentFieldValue = (DocumentFieldValue) o;
    return Objects.equals(this.pk, documentFieldValue.pk) &&
        Objects.equals(this.projectId, documentFieldValue.projectId) &&
        Objects.equals(this.project, documentFieldValue.project) &&
        Objects.equals(this.documentId, documentFieldValue.documentId) &&
        Objects.equals(this.documentName, documentFieldValue.documentName) &&
        Objects.equals(this.documentStatus, documentFieldValue.documentStatus) &&
        Objects.equals(this.fieldId, documentFieldValue.fieldId) &&
        Objects.equals(this.fieldName, documentFieldValue.fieldName) &&
        Objects.equals(this.value, documentFieldValue.value) &&
        Objects.equals(this.pythonValue, documentFieldValue.pythonValue) &&
        Objects.equals(this.locationText, documentFieldValue.locationText) &&
        Objects.equals(this.modifiedByUsername, documentFieldValue.modifiedByUsername) &&
        Objects.equals(this.modifiedById, documentFieldValue.modifiedById) &&
        Objects.equals(this.modifiedDate, documentFieldValue.modifiedDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(pk, projectId, project, documentId, documentName, documentStatus, fieldId, fieldName, value, pythonValue, locationText, modifiedByUsername, modifiedById, modifiedDate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentFieldValue {\n");
    sb.append("    pk: ").append(toIndentedString(pk)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    documentName: ").append(toIndentedString(documentName)).append("\n");
    sb.append("    documentStatus: ").append(toIndentedString(documentStatus)).append("\n");
    sb.append("    fieldId: ").append(toIndentedString(fieldId)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    pythonValue: ").append(toIndentedString(pythonValue)).append("\n");
    sb.append("    locationText: ").append(toIndentedString(locationText)).append("\n");
    sb.append("    modifiedByUsername: ").append(toIndentedString(modifiedByUsername)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

