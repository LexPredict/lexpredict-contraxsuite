/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.1.188
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.DocumentTypeDetailCategories;
import org.openapitools.client.model.DocumentTypeDetailFieldsData;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * DocumentTypeDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-19T15:46:46.101102+03:00[Europe/Moscow]")
public class DocumentTypeDetail {
  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private UUID uid;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_FIELDS_DATA = "fields_data";
  @SerializedName(SERIALIZED_NAME_FIELDS_DATA)
  private List<DocumentTypeDetailFieldsData> fieldsData = null;

  public static final String SERIALIZED_NAME_SEARCH_FIELDS = "search_fields";
  @SerializedName(SERIALIZED_NAME_SEARCH_FIELDS)
  private List<String> searchFields = null;

  /**
   * Gets or Sets editorType
   */
  @JsonAdapter(EditorTypeEnum.Adapter.class)
  public enum EditorTypeEnum {
    BY_FIELD("save_by_field"),
    
    ALL_FIELDS_AT_ONCE("save_all_fields_at_once");

    private String value;

    EditorTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EditorTypeEnum fromValue(String value) {
      for (EditorTypeEnum b : EditorTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EditorTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EditorTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EditorTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EditorTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_EDITOR_TYPE = "editor_type";
  @SerializedName(SERIALIZED_NAME_EDITOR_TYPE)
  private EditorTypeEnum editorType;

  public static final String SERIALIZED_NAME_CREATED_BY_NAME = "created_by__name";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_NAME)
  private String createdByName;

  public static final String SERIALIZED_NAME_CREATED_DATE = "created_date";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_MODIFIED_BY_NAME = "modified_by__name";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_NAME)
  private String modifiedByName;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modified_date";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata;

  public static final String SERIALIZED_NAME_FIELDS_NUMBER = "fields_number";
  @SerializedName(SERIALIZED_NAME_FIELDS_NUMBER)
  private Integer fieldsNumber;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<DocumentTypeDetailCategories> categories = null;

  public static final String SERIALIZED_NAME_MANAGERS = "managers";
  @SerializedName(SERIALIZED_NAME_MANAGERS)
  private List<Integer> managers = null;

  public DocumentTypeDetail() { 
  }

  
  public DocumentTypeDetail(
     UUID uid, 
     List<DocumentTypeDetailFieldsData> fieldsData, 
     String createdByName, 
     OffsetDateTime createdDate, 
     String modifiedByName, 
     OffsetDateTime modifiedDate, 
     List<DocumentTypeDetailCategories> categories
  ) {
    this();
    this.uid = uid;
    this.fieldsData = fieldsData;
    this.createdByName = createdByName;
    this.createdDate = createdDate;
    this.modifiedByName = modifiedByName;
    this.modifiedDate = modifiedDate;
    this.categories = categories;
  }

   /**
   * Get uid
   * @return uid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getUid() {
    return uid;
  }




  public DocumentTypeDetail title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public DocumentTypeDetail code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Field codes must be lowercase, should start with a Latin letter, and contain  only Latin letters, digits, and underscores.
   * @return code
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Field codes must be lowercase, should start with a Latin letter, and contain  only Latin letters, digits, and underscores.")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


   /**
   * Get fieldsData
   * @return fieldsData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DocumentTypeDetailFieldsData> getFieldsData() {
    return fieldsData;
  }




  public DocumentTypeDetail searchFields(List<String> searchFields) {
    
    this.searchFields = searchFields;
    return this;
  }

  public DocumentTypeDetail addSearchFieldsItem(String searchFieldsItem) {
    if (this.searchFields == null) {
      this.searchFields = new ArrayList<String>();
    }
    this.searchFields.add(searchFieldsItem);
    return this;
  }

   /**
   * Get searchFields
   * @return searchFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getSearchFields() {
    return searchFields;
  }


  public void setSearchFields(List<String> searchFields) {
    this.searchFields = searchFields;
  }


  public DocumentTypeDetail editorType(EditorTypeEnum editorType) {
    
    this.editorType = editorType;
    return this;
  }

   /**
   * Get editorType
   * @return editorType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EditorTypeEnum getEditorType() {
    return editorType;
  }


  public void setEditorType(EditorTypeEnum editorType) {
    this.editorType = editorType;
  }


   /**
   * Get createdByName
   * @return createdByName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedByName() {
    return createdByName;
  }




   /**
   * Get createdDate
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }




   /**
   * Get modifiedByName
   * @return modifiedByName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModifiedByName() {
    return modifiedByName;
  }




   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }




  public DocumentTypeDetail metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getMetadata() {
    return metadata;
  }


  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public DocumentTypeDetail fieldsNumber(Integer fieldsNumber) {
    
    this.fieldsNumber = fieldsNumber;
    return this;
  }

   /**
   * Get fieldsNumber
   * @return fieldsNumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getFieldsNumber() {
    return fieldsNumber;
  }


  public void setFieldsNumber(Integer fieldsNumber) {
    this.fieldsNumber = fieldsNumber;
  }


   /**
   * Get categories
   * @return categories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DocumentTypeDetailCategories> getCategories() {
    return categories;
  }




  public DocumentTypeDetail managers(List<Integer> managers) {
    
    this.managers = managers;
    return this;
  }

  public DocumentTypeDetail addManagersItem(Integer managersItem) {
    if (this.managers == null) {
      this.managers = new ArrayList<Integer>();
    }
    this.managers.add(managersItem);
    return this;
  }

   /**
   * Choose which users can modify this Document Type. Users chosen as Managers can be of any System-Level Permission.
   * @return managers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Choose which users can modify this Document Type. Users chosen as Managers can be of any System-Level Permission.")

  public List<Integer> getManagers() {
    return managers;
  }


  public void setManagers(List<Integer> managers) {
    this.managers = managers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentTypeDetail documentTypeDetail = (DocumentTypeDetail) o;
    return Objects.equals(this.uid, documentTypeDetail.uid) &&
        Objects.equals(this.title, documentTypeDetail.title) &&
        Objects.equals(this.code, documentTypeDetail.code) &&
        Objects.equals(this.fieldsData, documentTypeDetail.fieldsData) &&
        Objects.equals(this.searchFields, documentTypeDetail.searchFields) &&
        Objects.equals(this.editorType, documentTypeDetail.editorType) &&
        Objects.equals(this.createdByName, documentTypeDetail.createdByName) &&
        Objects.equals(this.createdDate, documentTypeDetail.createdDate) &&
        Objects.equals(this.modifiedByName, documentTypeDetail.modifiedByName) &&
        Objects.equals(this.modifiedDate, documentTypeDetail.modifiedDate) &&
        Objects.equals(this.metadata, documentTypeDetail.metadata) &&
        Objects.equals(this.fieldsNumber, documentTypeDetail.fieldsNumber) &&
        Objects.equals(this.categories, documentTypeDetail.categories) &&
        Objects.equals(this.managers, documentTypeDetail.managers);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(uid, title, code, fieldsData, searchFields, editorType, createdByName, createdDate, modifiedByName, modifiedDate, metadata, fieldsNumber, categories, managers);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentTypeDetail {\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    fieldsData: ").append(toIndentedString(fieldsData)).append("\n");
    sb.append("    searchFields: ").append(toIndentedString(searchFields)).append("\n");
    sb.append("    editorType: ").append(toIndentedString(editorType)).append("\n");
    sb.append("    createdByName: ").append(toIndentedString(createdByName)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedByName: ").append(toIndentedString(modifiedByName)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    fieldsNumber: ").append(toIndentedString(fieldsNumber)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    managers: ").append(toIndentedString(managers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

