/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * ProjectActiveTasksTasks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-07T11:20:07.445799+03:00[Europe/Moscow]")
public class ProjectActiveTasksTasks {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_VERBOSE_NAME = "verbose_name";
  @SerializedName(SERIALIZED_NAME_VERBOSE_NAME)
  private String verboseName;

  public static final String SERIALIZED_NAME_USER_NAME = "user__name";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_WORKER = "worker";
  @SerializedName(SERIALIZED_NAME_WORKER)
  private String worker;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    FAILURE("FAILURE"),
    
    PENDING("PENDING"),
    
    RECEIVED("RECEIVED"),
    
    RETRY("RETRY"),
    
    REVOKED("REVOKED"),
    
    STARTED("STARTED"),
    
    SUCCESS("SUCCESS");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_PROGRESS = "progress";
  @SerializedName(SERIALIZED_NAME_PROGRESS)
  private Integer progress;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DATE_START = "date_start";
  @SerializedName(SERIALIZED_NAME_DATE_START)
  private OffsetDateTime dateStart;

  public static final String SERIALIZED_NAME_DATE_WORK_START = "date_work_start";
  @SerializedName(SERIALIZED_NAME_DATE_WORK_START)
  private OffsetDateTime dateWorkStart;

  public static final String SERIALIZED_NAME_DATE_DONE = "date_done";
  @SerializedName(SERIALIZED_NAME_DATE_DONE)
  private OffsetDateTime dateDone;

  public static final String SERIALIZED_NAME_TOTAL_TIME = "total_time";
  @SerializedName(SERIALIZED_NAME_TOTAL_TIME)
  private String totalTime;

  public static final String SERIALIZED_NAME_WORK_TIME = "work_time";
  @SerializedName(SERIALIZED_NAME_WORK_TIME)
  private String workTime;


  public ProjectActiveTasksTasks id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ProjectActiveTasksTasks name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ProjectActiveTasksTasks verboseName(String verboseName) {
    
    this.verboseName = verboseName;
    return this;
  }

   /**
   * Get verboseName
   * @return verboseName
  **/
  @ApiModelProperty(required = true, value = "")

  public String getVerboseName() {
    return verboseName;
  }


  public void setVerboseName(String verboseName) {
    this.verboseName = verboseName;
  }


   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserName() {
    return userName;
  }




  public ProjectActiveTasksTasks worker(String worker) {
    
    this.worker = worker;
    return this;
  }

   /**
   * Get worker
   * @return worker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorker() {
    return worker;
  }


  public void setWorker(String worker) {
    this.worker = worker;
  }


  public ProjectActiveTasksTasks status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ProjectActiveTasksTasks progress(Integer progress) {
    
    this.progress = progress;
    return this;
  }

   /**
   * Get progress
   * minimum: 0
   * maximum: 2147483647
   * @return progress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProgress() {
    return progress;
  }


  public void setProgress(Integer progress) {
    this.progress = progress;
  }


   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }




  public ProjectActiveTasksTasks dateStart(OffsetDateTime dateStart) {
    
    this.dateStart = dateStart;
    return this;
  }

   /**
   * Get dateStart
   * @return dateStart
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getDateStart() {
    return dateStart;
  }


  public void setDateStart(OffsetDateTime dateStart) {
    this.dateStart = dateStart;
  }


  public ProjectActiveTasksTasks dateWorkStart(OffsetDateTime dateWorkStart) {
    
    this.dateWorkStart = dateWorkStart;
    return this;
  }

   /**
   * Get dateWorkStart
   * @return dateWorkStart
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getDateWorkStart() {
    return dateWorkStart;
  }


  public void setDateWorkStart(OffsetDateTime dateWorkStart) {
    this.dateWorkStart = dateWorkStart;
  }


  public ProjectActiveTasksTasks dateDone(OffsetDateTime dateDone) {
    
    this.dateDone = dateDone;
    return this;
  }

   /**
   * Get dateDone
   * @return dateDone
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getDateDone() {
    return dateDone;
  }


  public void setDateDone(OffsetDateTime dateDone) {
    this.dateDone = dateDone;
  }


  public ProjectActiveTasksTasks totalTime(String totalTime) {
    
    this.totalTime = totalTime;
    return this;
  }

   /**
   * Get totalTime
   * @return totalTime
  **/
  @ApiModelProperty(required = true, value = "")

  public String getTotalTime() {
    return totalTime;
  }


  public void setTotalTime(String totalTime) {
    this.totalTime = totalTime;
  }


  public ProjectActiveTasksTasks workTime(String workTime) {
    
    this.workTime = workTime;
    return this;
  }

   /**
   * Get workTime
   * @return workTime
  **/
  @ApiModelProperty(required = true, value = "")

  public String getWorkTime() {
    return workTime;
  }


  public void setWorkTime(String workTime) {
    this.workTime = workTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectActiveTasksTasks projectActiveTasksTasks = (ProjectActiveTasksTasks) o;
    return Objects.equals(this.id, projectActiveTasksTasks.id) &&
        Objects.equals(this.name, projectActiveTasksTasks.name) &&
        Objects.equals(this.verboseName, projectActiveTasksTasks.verboseName) &&
        Objects.equals(this.userName, projectActiveTasksTasks.userName) &&
        Objects.equals(this.worker, projectActiveTasksTasks.worker) &&
        Objects.equals(this.status, projectActiveTasksTasks.status) &&
        Objects.equals(this.progress, projectActiveTasksTasks.progress) &&
        Objects.equals(this.description, projectActiveTasksTasks.description) &&
        Objects.equals(this.dateStart, projectActiveTasksTasks.dateStart) &&
        Objects.equals(this.dateWorkStart, projectActiveTasksTasks.dateWorkStart) &&
        Objects.equals(this.dateDone, projectActiveTasksTasks.dateDone) &&
        Objects.equals(this.totalTime, projectActiveTasksTasks.totalTime) &&
        Objects.equals(this.workTime, projectActiveTasksTasks.workTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, verboseName, userName, worker, status, progress, description, dateStart, dateWorkStart, dateDone, totalTime, workTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectActiveTasksTasks {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    verboseName: ").append(toIndentedString(verboseName)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    worker: ").append(toIndentedString(worker)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dateStart: ").append(toIndentedString(dateStart)).append("\n");
    sb.append("    dateWorkStart: ").append(toIndentedString(dateWorkStart)).append("\n");
    sb.append("    dateDone: ").append(toIndentedString(dateDone)).append("\n");
    sb.append("    totalTime: ").append(toIndentedString(totalTime)).append("\n");
    sb.append("    workTime: ").append(toIndentedString(workTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

