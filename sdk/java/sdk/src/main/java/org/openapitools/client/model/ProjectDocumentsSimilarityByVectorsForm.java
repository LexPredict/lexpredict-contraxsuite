/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProjectDocumentsSimilarityByVectorsForm
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class ProjectDocumentsSimilarityByVectorsForm {
  public static final String SERIALIZED_NAME_RUN_NAME = "run_name";
  @SerializedName(SERIALIZED_NAME_RUN_NAME)
  private String runName;

  public static final String SERIALIZED_NAME_SIMILARITY_THRESHOLD = "similarity_threshold";
  @SerializedName(SERIALIZED_NAME_SIMILARITY_THRESHOLD)
  private Integer similarityThreshold = 75;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private Integer project;

  public static final String SERIALIZED_NAME_FEATURE_SOURCE = "feature_source";
  @SerializedName(SERIALIZED_NAME_FEATURE_SOURCE)
  private String featureSource = "vector";

  /**
   * Gets or Sets distanceType
   */
  @JsonAdapter(DistanceTypeEnum.Adapter.class)
  public enum DistanceTypeEnum {
    BRAYCURTIS("braycurtis"),
    
    CANBERRA("canberra"),
    
    CHEBYSHEV("chebyshev"),
    
    CITYBLOCK("cityblock"),
    
    CORRELATION("correlation"),
    
    COSINE("cosine"),
    
    DICE("dice"),
    
    EUCLIDEAN("euclidean"),
    
    HAMMING("hamming"),
    
    JACCARD("jaccard"),
    
    JENSENSHANNON("jensenshannon"),
    
    KULSINSKI("kulsinski"),
    
    KULCZYNSKI1("kulczynski1"),
    
    MAHALANOBIS("mahalanobis"),
    
    MINKOWSKI("minkowski"),
    
    ROGERSTANIMOTO("rogerstanimoto"),
    
    RUSSELLRAO("russellrao"),
    
    SEUCLIDEAN("seuclidean"),
    
    SOKALMICHENER("sokalmichener"),
    
    SOKALSNEATH("sokalsneath"),
    
    SQEUCLIDEAN("sqeuclidean"),
    
    YULE("yule");

    private String value;

    DistanceTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DistanceTypeEnum fromValue(String value) {
      for (DistanceTypeEnum b : DistanceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DistanceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DistanceTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DistanceTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DistanceTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DISTANCE_TYPE = "distance_type";
  @SerializedName(SERIALIZED_NAME_DISTANCE_TYPE)
  private DistanceTypeEnum distanceType = DistanceTypeEnum.COSINE;

  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private Integer itemId;

  public static final String SERIALIZED_NAME_CREATE_REVERSE_RELATIONS = "create_reverse_relations";
  @SerializedName(SERIALIZED_NAME_CREATE_REVERSE_RELATIONS)
  private Boolean createReverseRelations;

  public static final String SERIALIZED_NAME_USE_TFIDF = "use_tfidf";
  @SerializedName(SERIALIZED_NAME_USE_TFIDF)
  private Boolean useTfidf;

  public static final String SERIALIZED_NAME_DELETE = "delete";
  @SerializedName(SERIALIZED_NAME_DELETE)
  private Boolean delete;

  public ProjectDocumentsSimilarityByVectorsForm() { 
  }

  public ProjectDocumentsSimilarityByVectorsForm runName(String runName) {
    
    this.runName = runName;
    return this;
  }

   /**
   * Get runName
   * @return runName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getRunName() {
    return runName;
  }


  public void setRunName(String runName) {
    this.runName = runName;
  }


  public ProjectDocumentsSimilarityByVectorsForm similarityThreshold(Integer similarityThreshold) {
    
    this.similarityThreshold = similarityThreshold;
    return this;
  }

   /**
   * Get similarityThreshold
   * @return similarityThreshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSimilarityThreshold() {
    return similarityThreshold;
  }


  public void setSimilarityThreshold(Integer similarityThreshold) {
    this.similarityThreshold = similarityThreshold;
  }


  public ProjectDocumentsSimilarityByVectorsForm project(Integer project) {
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getProject() {
    return project;
  }


  public void setProject(Integer project) {
    this.project = project;
  }


  public ProjectDocumentsSimilarityByVectorsForm featureSource(String featureSource) {
    
    this.featureSource = featureSource;
    return this;
  }

   /**
   * Get featureSource
   * @return featureSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFeatureSource() {
    return featureSource;
  }


  public void setFeatureSource(String featureSource) {
    this.featureSource = featureSource;
  }


  public ProjectDocumentsSimilarityByVectorsForm distanceType(DistanceTypeEnum distanceType) {
    
    this.distanceType = distanceType;
    return this;
  }

   /**
   * Get distanceType
   * @return distanceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DistanceTypeEnum getDistanceType() {
    return distanceType;
  }


  public void setDistanceType(DistanceTypeEnum distanceType) {
    this.distanceType = distanceType;
  }


  public ProjectDocumentsSimilarityByVectorsForm itemId(Integer itemId) {
    
    this.itemId = itemId;
    return this;
  }

   /**
   * Get itemId
   * @return itemId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getItemId() {
    return itemId;
  }


  public void setItemId(Integer itemId) {
    this.itemId = itemId;
  }


  public ProjectDocumentsSimilarityByVectorsForm createReverseRelations(Boolean createReverseRelations) {
    
    this.createReverseRelations = createReverseRelations;
    return this;
  }

   /**
   * Get createReverseRelations
   * @return createReverseRelations
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCreateReverseRelations() {
    return createReverseRelations;
  }


  public void setCreateReverseRelations(Boolean createReverseRelations) {
    this.createReverseRelations = createReverseRelations;
  }


  public ProjectDocumentsSimilarityByVectorsForm useTfidf(Boolean useTfidf) {
    
    this.useTfidf = useTfidf;
    return this;
  }

   /**
   * Get useTfidf
   * @return useTfidf
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getUseTfidf() {
    return useTfidf;
  }


  public void setUseTfidf(Boolean useTfidf) {
    this.useTfidf = useTfidf;
  }


  public ProjectDocumentsSimilarityByVectorsForm delete(Boolean delete) {
    
    this.delete = delete;
    return this;
  }

   /**
   * Get delete
   * @return delete
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getDelete() {
    return delete;
  }


  public void setDelete(Boolean delete) {
    this.delete = delete;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectDocumentsSimilarityByVectorsForm projectDocumentsSimilarityByVectorsForm = (ProjectDocumentsSimilarityByVectorsForm) o;
    return Objects.equals(this.runName, projectDocumentsSimilarityByVectorsForm.runName) &&
        Objects.equals(this.similarityThreshold, projectDocumentsSimilarityByVectorsForm.similarityThreshold) &&
        Objects.equals(this.project, projectDocumentsSimilarityByVectorsForm.project) &&
        Objects.equals(this.featureSource, projectDocumentsSimilarityByVectorsForm.featureSource) &&
        Objects.equals(this.distanceType, projectDocumentsSimilarityByVectorsForm.distanceType) &&
        Objects.equals(this.itemId, projectDocumentsSimilarityByVectorsForm.itemId) &&
        Objects.equals(this.createReverseRelations, projectDocumentsSimilarityByVectorsForm.createReverseRelations) &&
        Objects.equals(this.useTfidf, projectDocumentsSimilarityByVectorsForm.useTfidf) &&
        Objects.equals(this.delete, projectDocumentsSimilarityByVectorsForm.delete);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(runName, similarityThreshold, project, featureSource, distanceType, itemId, createReverseRelations, useTfidf, delete);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectDocumentsSimilarityByVectorsForm {\n");
    sb.append("    runName: ").append(toIndentedString(runName)).append("\n");
    sb.append("    similarityThreshold: ").append(toIndentedString(similarityThreshold)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    featureSource: ").append(toIndentedString(featureSource)).append("\n");
    sb.append("    distanceType: ").append(toIndentedString(distanceType)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    createReverseRelations: ").append(toIndentedString(createReverseRelations)).append("\n");
    sb.append("    useTfidf: ").append(toIndentedString(useTfidf)).append("\n");
    sb.append("    delete: ").append(toIndentedString(delete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("run_name");
    openapiFields.add("similarity_threshold");
    openapiFields.add("project");
    openapiFields.add("feature_source");
    openapiFields.add("distance_type");
    openapiFields.add("item_id");
    openapiFields.add("create_reverse_relations");
    openapiFields.add("use_tfidf");
    openapiFields.add("delete");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("run_name");
    openapiRequiredFields.add("project");
    openapiRequiredFields.add("item_id");
    openapiRequiredFields.add("create_reverse_relations");
    openapiRequiredFields.add("use_tfidf");
    openapiRequiredFields.add("delete");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProjectDocumentsSimilarityByVectorsForm
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ProjectDocumentsSimilarityByVectorsForm.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProjectDocumentsSimilarityByVectorsForm is not found in the empty JSON string", ProjectDocumentsSimilarityByVectorsForm.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ProjectDocumentsSimilarityByVectorsForm.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProjectDocumentsSimilarityByVectorsForm` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ProjectDocumentsSimilarityByVectorsForm.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("run_name") != null && !jsonObj.get("run_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `run_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("run_name").toString()));
      }
      if (jsonObj.get("feature_source") != null && !jsonObj.get("feature_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feature_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feature_source").toString()));
      }
      if (jsonObj.get("distance_type") != null && !jsonObj.get("distance_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distance_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distance_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProjectDocumentsSimilarityByVectorsForm.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProjectDocumentsSimilarityByVectorsForm' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProjectDocumentsSimilarityByVectorsForm> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProjectDocumentsSimilarityByVectorsForm.class));

       return (TypeAdapter<T>) new TypeAdapter<ProjectDocumentsSimilarityByVectorsForm>() {
           @Override
           public void write(JsonWriter out, ProjectDocumentsSimilarityByVectorsForm value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProjectDocumentsSimilarityByVectorsForm read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProjectDocumentsSimilarityByVectorsForm given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProjectDocumentsSimilarityByVectorsForm
  * @throws IOException if the JSON string is invalid with respect to ProjectDocumentsSimilarityByVectorsForm
  */
  public static ProjectDocumentsSimilarityByVectorsForm fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProjectDocumentsSimilarityByVectorsForm.class);
  }

 /**
  * Convert an instance of ProjectDocumentsSimilarityByVectorsForm to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

