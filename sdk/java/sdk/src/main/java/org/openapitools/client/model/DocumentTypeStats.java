/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.1.188
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.DocumentTypeStatsData;

/**
 * DocumentTypeStats
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-19T15:46:46.101102+03:00[Europe/Moscow]")
public class DocumentTypeStats {
  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private DocumentTypeStatsData data;

  public static final String SERIALIZED_NAME_COUNT_OF_ITEMS = "count_of_items";
  @SerializedName(SERIALIZED_NAME_COUNT_OF_ITEMS)
  private Integer countOfItems;

  public static final String SERIALIZED_NAME_COUNT_OF_FILTERED_ITEMS = "count_of_filtered_items";
  @SerializedName(SERIALIZED_NAME_COUNT_OF_FILTERED_ITEMS)
  private Integer countOfFilteredItems;

  public DocumentTypeStats() { 
  }

  public DocumentTypeStats data(DocumentTypeStatsData data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public DocumentTypeStatsData getData() {
    return data;
  }


  public void setData(DocumentTypeStatsData data) {
    this.data = data;
  }


  public DocumentTypeStats countOfItems(Integer countOfItems) {
    
    this.countOfItems = countOfItems;
    return this;
  }

   /**
   * Get countOfItems
   * @return countOfItems
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCountOfItems() {
    return countOfItems;
  }


  public void setCountOfItems(Integer countOfItems) {
    this.countOfItems = countOfItems;
  }


  public DocumentTypeStats countOfFilteredItems(Integer countOfFilteredItems) {
    
    this.countOfFilteredItems = countOfFilteredItems;
    return this;
  }

   /**
   * Get countOfFilteredItems
   * @return countOfFilteredItems
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCountOfFilteredItems() {
    return countOfFilteredItems;
  }


  public void setCountOfFilteredItems(Integer countOfFilteredItems) {
    this.countOfFilteredItems = countOfFilteredItems;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentTypeStats documentTypeStats = (DocumentTypeStats) o;
    return Objects.equals(this.data, documentTypeStats.data) &&
        Objects.equals(this.countOfItems, documentTypeStats.countOfItems) &&
        Objects.equals(this.countOfFilteredItems, documentTypeStats.countOfFilteredItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, countOfItems, countOfFilteredItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentTypeStats {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    countOfItems: ").append(toIndentedString(countOfItems)).append("\n");
    sb.append("    countOfFilteredItems: ").append(toIndentedString(countOfFilteredItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

