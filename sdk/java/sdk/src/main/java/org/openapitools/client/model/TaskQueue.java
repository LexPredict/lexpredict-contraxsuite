/*
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.TaskQueueDocumentsData;
import org.openapitools.client.model.TaskQueueReviewersData;

/**
 * TaskQueue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-11T16:57:55.511+03:00[Europe/Moscow]")
public class TaskQueue {
  public static final String SERIALIZED_NAME_PK = "pk";
  @SerializedName(SERIALIZED_NAME_PK)
  private Integer pk;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DOCUMENTS = "documents";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS)
  private List<Integer> documents = null;

  public static final String SERIALIZED_NAME_DOCUMENTS_DATA = "documents_data";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_DATA)
  private List<TaskQueueDocumentsData> documentsData = null;

  public static final String SERIALIZED_NAME_COMPLETED_DOCUMENTS = "completed_documents";
  @SerializedName(SERIALIZED_NAME_COMPLETED_DOCUMENTS)
  private List<Integer> completedDocuments = null;

  public static final String SERIALIZED_NAME_COMPLETED_DOCUMENTS_DATA = "completed_documents_data";
  @SerializedName(SERIALIZED_NAME_COMPLETED_DOCUMENTS_DATA)
  private List<TaskQueueDocumentsData> completedDocumentsData = null;

  public static final String SERIALIZED_NAME_REVIEWERS = "reviewers";
  @SerializedName(SERIALIZED_NAME_REVIEWERS)
  private List<Integer> reviewers = null;

  public static final String SERIALIZED_NAME_REVIEWERS_DATA = "reviewers_data";
  @SerializedName(SERIALIZED_NAME_REVIEWERS_DATA)
  private List<TaskQueueReviewersData> reviewersData = null;

  public static final String SERIALIZED_NAME_PROGRESS = "progress";
  @SerializedName(SERIALIZED_NAME_PROGRESS)
  private String progress;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private String data;


   /**
   * Get pk
   * @return pk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPk() {
    return pk;
  }




  public TaskQueue description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public TaskQueue documents(List<Integer> documents) {
    
    this.documents = documents;
    return this;
  }

  public TaskQueue addDocumentsItem(Integer documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<Integer>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * Get documents
   * @return documents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getDocuments() {
    return documents;
  }


  public void setDocuments(List<Integer> documents) {
    this.documents = documents;
  }


   /**
   * Get documentsData
   * @return documentsData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TaskQueueDocumentsData> getDocumentsData() {
    return documentsData;
  }




  public TaskQueue completedDocuments(List<Integer> completedDocuments) {
    
    this.completedDocuments = completedDocuments;
    return this;
  }

  public TaskQueue addCompletedDocumentsItem(Integer completedDocumentsItem) {
    if (this.completedDocuments == null) {
      this.completedDocuments = new ArrayList<Integer>();
    }
    this.completedDocuments.add(completedDocumentsItem);
    return this;
  }

   /**
   * Get completedDocuments
   * @return completedDocuments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getCompletedDocuments() {
    return completedDocuments;
  }


  public void setCompletedDocuments(List<Integer> completedDocuments) {
    this.completedDocuments = completedDocuments;
  }


   /**
   * Get completedDocumentsData
   * @return completedDocumentsData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TaskQueueDocumentsData> getCompletedDocumentsData() {
    return completedDocumentsData;
  }




  public TaskQueue reviewers(List<Integer> reviewers) {
    
    this.reviewers = reviewers;
    return this;
  }

  public TaskQueue addReviewersItem(Integer reviewersItem) {
    if (this.reviewers == null) {
      this.reviewers = new ArrayList<Integer>();
    }
    this.reviewers.add(reviewersItem);
    return this;
  }

   /**
   * Get reviewers
   * @return reviewers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getReviewers() {
    return reviewers;
  }


  public void setReviewers(List<Integer> reviewers) {
    this.reviewers = reviewers;
  }


   /**
   * Get reviewersData
   * @return reviewersData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TaskQueueReviewersData> getReviewersData() {
    return reviewersData;
  }




   /**
   * Get progress
   * @return progress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProgress() {
    return progress;
  }




   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getData() {
    return data;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskQueue taskQueue = (TaskQueue) o;
    return Objects.equals(this.pk, taskQueue.pk) &&
        Objects.equals(this.description, taskQueue.description) &&
        Objects.equals(this.documents, taskQueue.documents) &&
        Objects.equals(this.documentsData, taskQueue.documentsData) &&
        Objects.equals(this.completedDocuments, taskQueue.completedDocuments) &&
        Objects.equals(this.completedDocumentsData, taskQueue.completedDocumentsData) &&
        Objects.equals(this.reviewers, taskQueue.reviewers) &&
        Objects.equals(this.reviewersData, taskQueue.reviewersData) &&
        Objects.equals(this.progress, taskQueue.progress) &&
        Objects.equals(this.data, taskQueue.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pk, description, documents, documentsData, completedDocuments, completedDocumentsData, reviewers, reviewersData, progress, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskQueue {\n");
    sb.append("    pk: ").append(toIndentedString(pk)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    documentsData: ").append(toIndentedString(documentsData)).append("\n");
    sb.append("    completedDocuments: ").append(toIndentedString(completedDocuments)).append("\n");
    sb.append("    completedDocumentsData: ").append(toIndentedString(completedDocumentsData)).append("\n");
    sb.append("    reviewers: ").append(toIndentedString(reviewers)).append("\n");
    sb.append("    reviewersData: ").append(toIndentedString(reviewersData)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

