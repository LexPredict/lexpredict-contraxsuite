/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.DocumentDetailAssigneeData;
import org.openapitools.client.model.DocumentDetailAvailableAssigneesDataInner;
import org.openapitools.client.model.DocumentDetailStatusData;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DocumentDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class DocumentDetail {
  public static final String SERIALIZED_NAME_PK = "pk";
  @SerializedName(SERIALIZED_NAME_PK)
  private Integer pk;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DOCUMENT_TYPE = "document_type";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_TYPE)
  private String documentType;

  public static final String SERIALIZED_NAME_FILE_SIZE = "file_size";
  @SerializedName(SERIALIZED_NAME_FILE_SIZE)
  private Integer fileSize;

  public static final String SERIALIZED_NAME_FOLDER = "folder";
  @SerializedName(SERIALIZED_NAME_FOLDER)
  private String folder;

  public static final String SERIALIZED_NAME_CREATED_DATE = "created_date";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modified_date";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_MODIFIED_BY_NAME = "modified_by_name";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_NAME)
  private String modifiedByName;

  public static final String SERIALIZED_NAME_CREATED_BY_NAME = "created_by_name";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_NAME)
  private String createdByName;

  public static final String SERIALIZED_NAME_CREATED_BY_INITIALS = "created_by_initials";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_INITIALS)
  private String createdByInitials;

  public static final String SERIALIZED_NAME_CREATED_BY_PHOTO = "created_by_photo";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_PHOTO)
  private String createdByPhoto;

  public static final String SERIALIZED_NAME_MODIFIED_BY_INITIALS = "modified_by_initials";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_INITIALS)
  private String modifiedByInitials;

  public static final String SERIALIZED_NAME_MODIFIED_BY_PHOTO = "modified_by_photo";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_PHOTO)
  private String modifiedByPhoto;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_STATUS_DATA = "status_data";
  @SerializedName(SERIALIZED_NAME_STATUS_DATA)
  private DocumentDetailStatusData statusData;

  public static final String SERIALIZED_NAME_AVAILABLE_STATUSES_DATA = "available_statuses_data";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_STATUSES_DATA)
  private List<Object> availableStatusesData = null;

  public static final String SERIALIZED_NAME_ASSIGNEE = "assignee";
  @SerializedName(SERIALIZED_NAME_ASSIGNEE)
  private Integer assignee;

  public static final String SERIALIZED_NAME_ASSIGN_DATE = "assign_date";
  @SerializedName(SERIALIZED_NAME_ASSIGN_DATE)
  private OffsetDateTime assignDate;

  public static final String SERIALIZED_NAME_ASSIGNEE_DATA = "assignee_data";
  @SerializedName(SERIALIZED_NAME_ASSIGNEE_DATA)
  private DocumentDetailAssigneeData assigneeData;

  public static final String SERIALIZED_NAME_AVAILABLE_ASSIGNEES_DATA = "available_assignees_data";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_ASSIGNEES_DATA)
  private List<DocumentDetailAvailableAssigneesDataInner> availableAssigneesData = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_INITIAL_ANNOTATION_ID = "initial_annotation_id";
  @SerializedName(SERIALIZED_NAME_INITIAL_ANNOTATION_ID)
  private String initialAnnotationId;

  public static final String SERIALIZED_NAME_PAGE_LOCATIONS = "page_locations";
  @SerializedName(SERIALIZED_NAME_PAGE_LOCATIONS)
  private List<List<Integer>> pageLocations = null;

  public static final String SERIALIZED_NAME_PAGE_BOUNDS = "page_bounds";
  @SerializedName(SERIALIZED_NAME_PAGE_BOUNDS)
  private List<List<BigDecimal>> pageBounds = null;

  public static final String SERIALIZED_NAME_FIELD_VALUES = "field_values";
  @SerializedName(SERIALIZED_NAME_FIELD_VALUES)
  private Object fieldValues;

  public static final String SERIALIZED_NAME_FIELD_VALUE_OBJECTS = "field_value_objects";
  @SerializedName(SERIALIZED_NAME_FIELD_VALUE_OBJECTS)
  private Object fieldValueObjects;

  public static final String SERIALIZED_NAME_PREV_ID = "prev_id";
  @SerializedName(SERIALIZED_NAME_PREV_ID)
  private Integer prevId;

  public static final String SERIALIZED_NAME_NEXT_ID = "next_id";
  @SerializedName(SERIALIZED_NAME_NEXT_ID)
  private Integer nextId;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_DOCUMENTS_COUNT = "documents_count";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_COUNT)
  private String documentsCount;

  public static final String SERIALIZED_NAME_SECTIONS = "sections";
  @SerializedName(SERIALIZED_NAME_SECTIONS)
  private List<Object> sections = null;

  public static final String SERIALIZED_NAME_CLUSTER_ID = "cluster_id";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ID)
  private String clusterId;

  public static final String SERIALIZED_NAME_WAS_OPENED_IN_ANNOTATOR = "was_opened_in_annotator";
  @SerializedName(SERIALIZED_NAME_WAS_OPENED_IN_ANNOTATOR)
  private Boolean wasOpenedInAnnotator;

  public static final String SERIALIZED_NAME_USER_PERMISSIONS = "user_permissions";
  @SerializedName(SERIALIZED_NAME_USER_PERMISSIONS)
  private Object userPermissions;

  public DocumentDetail() { 
  }

  
  public DocumentDetail(
     Integer pk, 
     List<Object> availableStatusesData, 
     String initialAnnotationId, 
     List<List<Integer>> pageLocations, 
     List<List<BigDecimal>> pageBounds, 
     Object fieldValues, 
     Object fieldValueObjects, 
     Integer prevId, 
     Integer nextId, 
     String position, 
     String documentsCount, 
     List<Object> sections, 
     String clusterId, 
     Boolean wasOpenedInAnnotator, 
     Object userPermissions
  ) {
    this();
    this.pk = pk;
    this.availableStatusesData = availableStatusesData;
    this.initialAnnotationId = initialAnnotationId;
    this.pageLocations = pageLocations;
    this.pageBounds = pageBounds;
    this.fieldValues = fieldValues;
    this.fieldValueObjects = fieldValueObjects;
    this.prevId = prevId;
    this.nextId = nextId;
    this.position = position;
    this.documentsCount = documentsCount;
    this.sections = sections;
    this.clusterId = clusterId;
    this.wasOpenedInAnnotator = wasOpenedInAnnotator;
    this.userPermissions = userPermissions;
  }

   /**
   * Get pk
   * @return pk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPk() {
    return pk;
  }




  public DocumentDetail name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DocumentDetail documentType(String documentType) {
    
    this.documentType = documentType;
    return this;
  }

   /**
   * Get documentType
   * @return documentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentType() {
    return documentType;
  }


  public void setDocumentType(String documentType) {
    this.documentType = documentType;
  }


  public DocumentDetail fileSize(Integer fileSize) {
    
    this.fileSize = fileSize;
    return this;
  }

   /**
   * Get fileSize
   * minimum: 0
   * maximum: 2147483647
   * @return fileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFileSize() {
    return fileSize;
  }


  public void setFileSize(Integer fileSize) {
    this.fileSize = fileSize;
  }


  public DocumentDetail folder(String folder) {
    
    this.folder = folder;
    return this;
  }

   /**
   * Get folder
   * @return folder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFolder() {
    return folder;
  }


  public void setFolder(String folder) {
    this.folder = folder;
  }


  public DocumentDetail createdDate(OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public DocumentDetail modifiedDate(OffsetDateTime modifiedDate) {
    
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }


  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public DocumentDetail modifiedByName(String modifiedByName) {
    
    this.modifiedByName = modifiedByName;
    return this;
  }

   /**
   * Get modifiedByName
   * @return modifiedByName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getModifiedByName() {
    return modifiedByName;
  }


  public void setModifiedByName(String modifiedByName) {
    this.modifiedByName = modifiedByName;
  }


  public DocumentDetail createdByName(String createdByName) {
    
    this.createdByName = createdByName;
    return this;
  }

   /**
   * Get createdByName
   * @return createdByName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCreatedByName() {
    return createdByName;
  }


  public void setCreatedByName(String createdByName) {
    this.createdByName = createdByName;
  }


  public DocumentDetail createdByInitials(String createdByInitials) {
    
    this.createdByInitials = createdByInitials;
    return this;
  }

   /**
   * Get createdByInitials
   * @return createdByInitials
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCreatedByInitials() {
    return createdByInitials;
  }


  public void setCreatedByInitials(String createdByInitials) {
    this.createdByInitials = createdByInitials;
  }


  public DocumentDetail createdByPhoto(String createdByPhoto) {
    
    this.createdByPhoto = createdByPhoto;
    return this;
  }

   /**
   * Get createdByPhoto
   * @return createdByPhoto
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCreatedByPhoto() {
    return createdByPhoto;
  }


  public void setCreatedByPhoto(String createdByPhoto) {
    this.createdByPhoto = createdByPhoto;
  }


  public DocumentDetail modifiedByInitials(String modifiedByInitials) {
    
    this.modifiedByInitials = modifiedByInitials;
    return this;
  }

   /**
   * Get modifiedByInitials
   * @return modifiedByInitials
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getModifiedByInitials() {
    return modifiedByInitials;
  }


  public void setModifiedByInitials(String modifiedByInitials) {
    this.modifiedByInitials = modifiedByInitials;
  }


  public DocumentDetail modifiedByPhoto(String modifiedByPhoto) {
    
    this.modifiedByPhoto = modifiedByPhoto;
    return this;
  }

   /**
   * Get modifiedByPhoto
   * @return modifiedByPhoto
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getModifiedByPhoto() {
    return modifiedByPhoto;
  }


  public void setModifiedByPhoto(String modifiedByPhoto) {
    this.modifiedByPhoto = modifiedByPhoto;
  }


  public DocumentDetail status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    this.status = status;
  }


  public DocumentDetail statusData(DocumentDetailStatusData statusData) {
    
    this.statusData = statusData;
    return this;
  }

   /**
   * Get statusData
   * @return statusData
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public DocumentDetailStatusData getStatusData() {
    return statusData;
  }


  public void setStatusData(DocumentDetailStatusData statusData) {
    this.statusData = statusData;
  }


   /**
   * Get availableStatusesData
   * @return availableStatusesData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getAvailableStatusesData() {
    return availableStatusesData;
  }




  public DocumentDetail assignee(Integer assignee) {
    
    this.assignee = assignee;
    return this;
  }

   /**
   * Get assignee
   * @return assignee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAssignee() {
    return assignee;
  }


  public void setAssignee(Integer assignee) {
    this.assignee = assignee;
  }


  public DocumentDetail assignDate(OffsetDateTime assignDate) {
    
    this.assignDate = assignDate;
    return this;
  }

   /**
   * Get assignDate
   * @return assignDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getAssignDate() {
    return assignDate;
  }


  public void setAssignDate(OffsetDateTime assignDate) {
    this.assignDate = assignDate;
  }


  public DocumentDetail assigneeData(DocumentDetailAssigneeData assigneeData) {
    
    this.assigneeData = assigneeData;
    return this;
  }

   /**
   * Get assigneeData
   * @return assigneeData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public DocumentDetailAssigneeData getAssigneeData() {
    return assigneeData;
  }


  public void setAssigneeData(DocumentDetailAssigneeData assigneeData) {
    this.assigneeData = assigneeData;
  }


  public DocumentDetail availableAssigneesData(List<DocumentDetailAvailableAssigneesDataInner> availableAssigneesData) {
    
    this.availableAssigneesData = availableAssigneesData;
    return this;
  }

  public DocumentDetail addAvailableAssigneesDataItem(DocumentDetailAvailableAssigneesDataInner availableAssigneesDataItem) {
    this.availableAssigneesData.add(availableAssigneesDataItem);
    return this;
  }

   /**
   * Get availableAssigneesData
   * @return availableAssigneesData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public List<DocumentDetailAvailableAssigneesDataInner> getAvailableAssigneesData() {
    return availableAssigneesData;
  }


  public void setAvailableAssigneesData(List<DocumentDetailAvailableAssigneesDataInner> availableAssigneesData) {
    this.availableAssigneesData = availableAssigneesData;
  }


  public DocumentDetail description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public DocumentDetail title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


   /**
   * Get initialAnnotationId
   * @return initialAnnotationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInitialAnnotationId() {
    return initialAnnotationId;
  }




   /**
   * Get pageLocations
   * @return pageLocations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<List<Integer>> getPageLocations() {
    return pageLocations;
  }




   /**
   * Get pageBounds
   * @return pageBounds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<List<BigDecimal>> getPageBounds() {
    return pageBounds;
  }




   /**
   * Get fieldValues
   * @return fieldValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getFieldValues() {
    return fieldValues;
  }




   /**
   * Get fieldValueObjects
   * @return fieldValueObjects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getFieldValueObjects() {
    return fieldValueObjects;
  }




   /**
   * Get prevId
   * @return prevId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPrevId() {
    return prevId;
  }




   /**
   * Get nextId
   * @return nextId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNextId() {
    return nextId;
  }




   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPosition() {
    return position;
  }




   /**
   * Get documentsCount
   * @return documentsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentsCount() {
    return documentsCount;
  }




   /**
   * Get sections
   * @return sections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getSections() {
    return sections;
  }




   /**
   * Get clusterId
   * @return clusterId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getClusterId() {
    return clusterId;
  }




   /**
   * Get wasOpenedInAnnotator
   * @return wasOpenedInAnnotator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getWasOpenedInAnnotator() {
    return wasOpenedInAnnotator;
  }




   /**
   * Get userPermissions
   * @return userPermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getUserPermissions() {
    return userPermissions;
  }





  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentDetail documentDetail = (DocumentDetail) o;
    return Objects.equals(this.pk, documentDetail.pk) &&
        Objects.equals(this.name, documentDetail.name) &&
        Objects.equals(this.documentType, documentDetail.documentType) &&
        Objects.equals(this.fileSize, documentDetail.fileSize) &&
        Objects.equals(this.folder, documentDetail.folder) &&
        Objects.equals(this.createdDate, documentDetail.createdDate) &&
        Objects.equals(this.modifiedDate, documentDetail.modifiedDate) &&
        Objects.equals(this.modifiedByName, documentDetail.modifiedByName) &&
        Objects.equals(this.createdByName, documentDetail.createdByName) &&
        Objects.equals(this.createdByInitials, documentDetail.createdByInitials) &&
        Objects.equals(this.createdByPhoto, documentDetail.createdByPhoto) &&
        Objects.equals(this.modifiedByInitials, documentDetail.modifiedByInitials) &&
        Objects.equals(this.modifiedByPhoto, documentDetail.modifiedByPhoto) &&
        Objects.equals(this.status, documentDetail.status) &&
        Objects.equals(this.statusData, documentDetail.statusData) &&
        Objects.equals(this.availableStatusesData, documentDetail.availableStatusesData) &&
        Objects.equals(this.assignee, documentDetail.assignee) &&
        Objects.equals(this.assignDate, documentDetail.assignDate) &&
        Objects.equals(this.assigneeData, documentDetail.assigneeData) &&
        Objects.equals(this.availableAssigneesData, documentDetail.availableAssigneesData) &&
        Objects.equals(this.description, documentDetail.description) &&
        Objects.equals(this.title, documentDetail.title) &&
        Objects.equals(this.initialAnnotationId, documentDetail.initialAnnotationId) &&
        Objects.equals(this.pageLocations, documentDetail.pageLocations) &&
        Objects.equals(this.pageBounds, documentDetail.pageBounds) &&
        Objects.equals(this.fieldValues, documentDetail.fieldValues) &&
        Objects.equals(this.fieldValueObjects, documentDetail.fieldValueObjects) &&
        Objects.equals(this.prevId, documentDetail.prevId) &&
        Objects.equals(this.nextId, documentDetail.nextId) &&
        Objects.equals(this.position, documentDetail.position) &&
        Objects.equals(this.documentsCount, documentDetail.documentsCount) &&
        Objects.equals(this.sections, documentDetail.sections) &&
        Objects.equals(this.clusterId, documentDetail.clusterId) &&
        Objects.equals(this.wasOpenedInAnnotator, documentDetail.wasOpenedInAnnotator) &&
        Objects.equals(this.userPermissions, documentDetail.userPermissions);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(pk, name, documentType, fileSize, folder, createdDate, modifiedDate, modifiedByName, createdByName, createdByInitials, createdByPhoto, modifiedByInitials, modifiedByPhoto, status, statusData, availableStatusesData, assignee, assignDate, assigneeData, availableAssigneesData, description, title, initialAnnotationId, pageLocations, pageBounds, fieldValues, fieldValueObjects, prevId, nextId, position, documentsCount, sections, clusterId, wasOpenedInAnnotator, userPermissions);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentDetail {\n");
    sb.append("    pk: ").append(toIndentedString(pk)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedByName: ").append(toIndentedString(modifiedByName)).append("\n");
    sb.append("    createdByName: ").append(toIndentedString(createdByName)).append("\n");
    sb.append("    createdByInitials: ").append(toIndentedString(createdByInitials)).append("\n");
    sb.append("    createdByPhoto: ").append(toIndentedString(createdByPhoto)).append("\n");
    sb.append("    modifiedByInitials: ").append(toIndentedString(modifiedByInitials)).append("\n");
    sb.append("    modifiedByPhoto: ").append(toIndentedString(modifiedByPhoto)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusData: ").append(toIndentedString(statusData)).append("\n");
    sb.append("    availableStatusesData: ").append(toIndentedString(availableStatusesData)).append("\n");
    sb.append("    assignee: ").append(toIndentedString(assignee)).append("\n");
    sb.append("    assignDate: ").append(toIndentedString(assignDate)).append("\n");
    sb.append("    assigneeData: ").append(toIndentedString(assigneeData)).append("\n");
    sb.append("    availableAssigneesData: ").append(toIndentedString(availableAssigneesData)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    initialAnnotationId: ").append(toIndentedString(initialAnnotationId)).append("\n");
    sb.append("    pageLocations: ").append(toIndentedString(pageLocations)).append("\n");
    sb.append("    pageBounds: ").append(toIndentedString(pageBounds)).append("\n");
    sb.append("    fieldValues: ").append(toIndentedString(fieldValues)).append("\n");
    sb.append("    fieldValueObjects: ").append(toIndentedString(fieldValueObjects)).append("\n");
    sb.append("    prevId: ").append(toIndentedString(prevId)).append("\n");
    sb.append("    nextId: ").append(toIndentedString(nextId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    documentsCount: ").append(toIndentedString(documentsCount)).append("\n");
    sb.append("    sections: ").append(toIndentedString(sections)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    wasOpenedInAnnotator: ").append(toIndentedString(wasOpenedInAnnotator)).append("\n");
    sb.append("    userPermissions: ").append(toIndentedString(userPermissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pk");
    openapiFields.add("name");
    openapiFields.add("document_type");
    openapiFields.add("file_size");
    openapiFields.add("folder");
    openapiFields.add("created_date");
    openapiFields.add("modified_date");
    openapiFields.add("modified_by_name");
    openapiFields.add("created_by_name");
    openapiFields.add("created_by_initials");
    openapiFields.add("created_by_photo");
    openapiFields.add("modified_by_initials");
    openapiFields.add("modified_by_photo");
    openapiFields.add("status");
    openapiFields.add("status_data");
    openapiFields.add("available_statuses_data");
    openapiFields.add("assignee");
    openapiFields.add("assign_date");
    openapiFields.add("assignee_data");
    openapiFields.add("available_assignees_data");
    openapiFields.add("description");
    openapiFields.add("title");
    openapiFields.add("initial_annotation_id");
    openapiFields.add("page_locations");
    openapiFields.add("page_bounds");
    openapiFields.add("field_values");
    openapiFields.add("field_value_objects");
    openapiFields.add("prev_id");
    openapiFields.add("next_id");
    openapiFields.add("position");
    openapiFields.add("documents_count");
    openapiFields.add("sections");
    openapiFields.add("cluster_id");
    openapiFields.add("was_opened_in_annotator");
    openapiFields.add("user_permissions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("modified_by_name");
    openapiRequiredFields.add("created_by_name");
    openapiRequiredFields.add("created_by_initials");
    openapiRequiredFields.add("created_by_photo");
    openapiRequiredFields.add("modified_by_initials");
    openapiRequiredFields.add("modified_by_photo");
    openapiRequiredFields.add("status_data");
    openapiRequiredFields.add("assignee_data");
    openapiRequiredFields.add("available_assignees_data");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DocumentDetail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (DocumentDetail.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in DocumentDetail is not found in the empty JSON string", DocumentDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!DocumentDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DocumentDetail` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DocumentDetail.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("document_type") != null && !jsonObj.get("document_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document_type").toString()));
      }
      if (jsonObj.get("folder") != null && !jsonObj.get("folder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `folder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("folder").toString()));
      }
      if (jsonObj.get("modified_by_name") != null && !jsonObj.get("modified_by_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modified_by_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modified_by_name").toString()));
      }
      if (jsonObj.get("created_by_name") != null && !jsonObj.get("created_by_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_by_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_by_name").toString()));
      }
      if (jsonObj.get("created_by_initials") != null && !jsonObj.get("created_by_initials").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_by_initials` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_by_initials").toString()));
      }
      if (jsonObj.get("created_by_photo") != null && !jsonObj.get("created_by_photo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_by_photo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_by_photo").toString()));
      }
      if (jsonObj.get("modified_by_initials") != null && !jsonObj.get("modified_by_initials").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modified_by_initials` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modified_by_initials").toString()));
      }
      if (jsonObj.get("modified_by_photo") != null && !jsonObj.get("modified_by_photo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modified_by_photo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modified_by_photo").toString()));
      }
      // validate the optional field `status_data`
      if (jsonObj.getAsJsonObject("status_data") != null) {
        DocumentDetailStatusData.validateJsonObject(jsonObj.getAsJsonObject("status_data"));
      }
      // ensure the json data is an array
      if (jsonObj.get("available_statuses_data") != null && !jsonObj.get("available_statuses_data").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `available_statuses_data` to be an array in the JSON string but got `%s`", jsonObj.get("available_statuses_data").toString()));
      }
      // validate the optional field `assignee_data`
      if (jsonObj.getAsJsonObject("assignee_data") != null) {
        DocumentDetailAssigneeData.validateJsonObject(jsonObj.getAsJsonObject("assignee_data"));
      }
      JsonArray jsonArrayavailableAssigneesData = jsonObj.getAsJsonArray("available_assignees_data");
      if (jsonArrayavailableAssigneesData != null) {
        // ensure the json data is an array
        if (!jsonObj.get("available_assignees_data").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `available_assignees_data` to be an array in the JSON string but got `%s`", jsonObj.get("available_assignees_data").toString()));
        }

        // validate the optional field `available_assignees_data` (array)
        for (int i = 0; i < jsonArrayavailableAssigneesData.size(); i++) {
          DocumentDetailAvailableAssigneesDataInner.validateJsonObject(jsonArrayavailableAssigneesData.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("title") != null && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (jsonObj.get("initial_annotation_id") != null && !jsonObj.get("initial_annotation_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `initial_annotation_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("initial_annotation_id").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("page_locations") != null && !jsonObj.get("page_locations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `page_locations` to be an array in the JSON string but got `%s`", jsonObj.get("page_locations").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("page_bounds") != null && !jsonObj.get("page_bounds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `page_bounds` to be an array in the JSON string but got `%s`", jsonObj.get("page_bounds").toString()));
      }
      if (jsonObj.get("position") != null && !jsonObj.get("position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
      }
      if (jsonObj.get("documents_count") != null && !jsonObj.get("documents_count").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `documents_count` to be a primitive type in the JSON string but got `%s`", jsonObj.get("documents_count").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("sections") != null && !jsonObj.get("sections").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sections` to be an array in the JSON string but got `%s`", jsonObj.get("sections").toString()));
      }
      if (jsonObj.get("cluster_id") != null && !jsonObj.get("cluster_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cluster_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cluster_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DocumentDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DocumentDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DocumentDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DocumentDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<DocumentDetail>() {
           @Override
           public void write(JsonWriter out, DocumentDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DocumentDetail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DocumentDetail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DocumentDetail
  * @throws IOException if the JSON string is invalid with respect to DocumentDetail
  */
  public static DocumentDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DocumentDetail.class);
  }

 /**
  * Convert an instance of DocumentDetail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

