/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SimilarProjectTextUnitsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class SimilarProjectTextUnitsRequest {
  public static final String SERIALIZED_NAME_TEXT_MAX_LENGTH = "text_max_length";
  @SerializedName(SERIALIZED_NAME_TEXT_MAX_LENGTH)
  private Integer textMaxLength;

  public static final String SERIALIZED_NAME_RUN_ID = "run_id";
  @SerializedName(SERIALIZED_NAME_RUN_ID)
  private Integer runId;

  public static final String SERIALIZED_NAME_LAST_RUN = "last_run";
  @SerializedName(SERIALIZED_NAME_LAST_RUN)
  private Boolean lastRun;

  public static final String SERIALIZED_NAME_TEXT_UNIT_ID = "text_unit_id";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_ID)
  private Integer textUnitId;

  public static final String SERIALIZED_NAME_DOCUMENT_ID = "document_id";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_ID)
  private Integer documentId;

  public static final String SERIALIZED_NAME_LOCATION_START = "location_start";
  @SerializedName(SERIALIZED_NAME_LOCATION_START)
  private Integer locationStart;

  public static final String SERIALIZED_NAME_LOCATION_END = "location_end";
  @SerializedName(SERIALIZED_NAME_LOCATION_END)
  private Integer locationEnd;

  public static final String SERIALIZED_NAME_SELECTION = "selection";
  @SerializedName(SERIALIZED_NAME_SELECTION)
  private List<Object> selection = null;

  public SimilarProjectTextUnitsRequest() { 
  }

  public SimilarProjectTextUnitsRequest textMaxLength(Integer textMaxLength) {
    
    this.textMaxLength = textMaxLength;
    return this;
  }

   /**
   * text unit b text max length, 0 to get all text
   * @return textMaxLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "text unit b text max length, 0 to get all text")

  public Integer getTextMaxLength() {
    return textMaxLength;
  }


  public void setTextMaxLength(Integer textMaxLength) {
    this.textMaxLength = textMaxLength;
  }


  public SimilarProjectTextUnitsRequest runId(Integer runId) {
    
    this.runId = runId;
    return this;
  }

   /**
   * run id or text unit id required
   * @return runId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "run id or text unit id required")

  public Integer getRunId() {
    return runId;
  }


  public void setRunId(Integer runId) {
    this.runId = runId;
  }


  public SimilarProjectTextUnitsRequest lastRun(Boolean lastRun) {
    
    this.lastRun = lastRun;
    return this;
  }

   /**
   * run id or last_run or text unit id required
   * @return lastRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "run id or last_run or text unit id required")

  public Boolean getLastRun() {
    return lastRun;
  }


  public void setLastRun(Boolean lastRun) {
    this.lastRun = lastRun;
  }


  public SimilarProjectTextUnitsRequest textUnitId(Integer textUnitId) {
    
    this.textUnitId = textUnitId;
    return this;
  }

   /**
   * run id or text unit id required
   * @return textUnitId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "run id or text unit id required")

  public Integer getTextUnitId() {
    return textUnitId;
  }


  public void setTextUnitId(Integer textUnitId) {
    this.textUnitId = textUnitId;
  }


  public SimilarProjectTextUnitsRequest documentId(Integer documentId) {
    
    this.documentId = documentId;
    return this;
  }

   /**
   * document ID
   * @return documentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "document ID")

  public Integer getDocumentId() {
    return documentId;
  }


  public void setDocumentId(Integer documentId) {
    this.documentId = documentId;
  }


  public SimilarProjectTextUnitsRequest locationStart(Integer locationStart) {
    
    this.locationStart = locationStart;
    return this;
  }

   /**
   * start of chosen text block in a Document
   * @return locationStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "start of chosen text block in a Document")

  public Integer getLocationStart() {
    return locationStart;
  }


  public void setLocationStart(Integer locationStart) {
    this.locationStart = locationStart;
  }


  public SimilarProjectTextUnitsRequest locationEnd(Integer locationEnd) {
    
    this.locationEnd = locationEnd;
    return this;
  }

   /**
   * end of chosen text block in a Document
   * @return locationEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "end of chosen text block in a Document")

  public Integer getLocationEnd() {
    return locationEnd;
  }


  public void setLocationEnd(Integer locationEnd) {
    this.locationEnd = locationEnd;
  }


  public SimilarProjectTextUnitsRequest selection(List<Object> selection) {
    
    this.selection = selection;
    return this;
  }

  public SimilarProjectTextUnitsRequest addSelectionItem(Object selectionItem) {
    if (this.selection == null) {
      this.selection = new ArrayList<>();
    }
    this.selection.add(selectionItem);
    return this;
  }

   /**
   * selection coordinates
   * @return selection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "selection coordinates")

  public List<Object> getSelection() {
    return selection;
  }


  public void setSelection(List<Object> selection) {
    this.selection = selection;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimilarProjectTextUnitsRequest similarProjectTextUnitsRequest = (SimilarProjectTextUnitsRequest) o;
    return Objects.equals(this.textMaxLength, similarProjectTextUnitsRequest.textMaxLength) &&
        Objects.equals(this.runId, similarProjectTextUnitsRequest.runId) &&
        Objects.equals(this.lastRun, similarProjectTextUnitsRequest.lastRun) &&
        Objects.equals(this.textUnitId, similarProjectTextUnitsRequest.textUnitId) &&
        Objects.equals(this.documentId, similarProjectTextUnitsRequest.documentId) &&
        Objects.equals(this.locationStart, similarProjectTextUnitsRequest.locationStart) &&
        Objects.equals(this.locationEnd, similarProjectTextUnitsRequest.locationEnd) &&
        Objects.equals(this.selection, similarProjectTextUnitsRequest.selection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(textMaxLength, runId, lastRun, textUnitId, documentId, locationStart, locationEnd, selection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimilarProjectTextUnitsRequest {\n");
    sb.append("    textMaxLength: ").append(toIndentedString(textMaxLength)).append("\n");
    sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
    sb.append("    lastRun: ").append(toIndentedString(lastRun)).append("\n");
    sb.append("    textUnitId: ").append(toIndentedString(textUnitId)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    locationStart: ").append(toIndentedString(locationStart)).append("\n");
    sb.append("    locationEnd: ").append(toIndentedString(locationEnd)).append("\n");
    sb.append("    selection: ").append(toIndentedString(selection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("text_max_length");
    openapiFields.add("run_id");
    openapiFields.add("last_run");
    openapiFields.add("text_unit_id");
    openapiFields.add("document_id");
    openapiFields.add("location_start");
    openapiFields.add("location_end");
    openapiFields.add("selection");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SimilarProjectTextUnitsRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SimilarProjectTextUnitsRequest.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SimilarProjectTextUnitsRequest is not found in the empty JSON string", SimilarProjectTextUnitsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SimilarProjectTextUnitsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SimilarProjectTextUnitsRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("selection") != null && !jsonObj.get("selection").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `selection` to be an array in the JSON string but got `%s`", jsonObj.get("selection").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SimilarProjectTextUnitsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SimilarProjectTextUnitsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SimilarProjectTextUnitsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SimilarProjectTextUnitsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SimilarProjectTextUnitsRequest>() {
           @Override
           public void write(JsonWriter out, SimilarProjectTextUnitsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SimilarProjectTextUnitsRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SimilarProjectTextUnitsRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SimilarProjectTextUnitsRequest
  * @throws IOException if the JSON string is invalid with respect to SimilarProjectTextUnitsRequest
  */
  public static SimilarProjectTextUnitsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SimilarProjectTextUnitsRequest.class);
  }

 /**
  * Convert an instance of SimilarProjectTextUnitsRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

