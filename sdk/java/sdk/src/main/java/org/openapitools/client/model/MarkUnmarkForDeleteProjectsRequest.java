/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * MarkUnmarkForDeleteProjectsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-07T11:20:07.445799+03:00[Europe/Moscow]")
public class MarkUnmarkForDeleteProjectsRequest {
  public static final String SERIALIZED_NAME_ALL = "all";
  @SerializedName(SERIALIZED_NAME_ALL)
  private Boolean all;

  public static final String SERIALIZED_NAME_REMOVE_ALL = "remove_all";
  @SerializedName(SERIALIZED_NAME_REMOVE_ALL)
  private Boolean removeAll;

  public static final String SERIALIZED_NAME_EXCLUDE_DOCUMENT_IDS = "exclude_document_ids";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_DOCUMENT_IDS)
  private List<Integer> excludeDocumentIds = null;


  public MarkUnmarkForDeleteProjectsRequest all(Boolean all) {
    
    this.all = all;
    return this;
  }

   /**
   * Get all
   * @return all
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAll() {
    return all;
  }


  public void setAll(Boolean all) {
    this.all = all;
  }


  public MarkUnmarkForDeleteProjectsRequest removeAll(Boolean removeAll) {
    
    this.removeAll = removeAll;
    return this;
  }

   /**
   * Get removeAll
   * @return removeAll
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRemoveAll() {
    return removeAll;
  }


  public void setRemoveAll(Boolean removeAll) {
    this.removeAll = removeAll;
  }


  public MarkUnmarkForDeleteProjectsRequest excludeDocumentIds(List<Integer> excludeDocumentIds) {
    
    this.excludeDocumentIds = excludeDocumentIds;
    return this;
  }

  public MarkUnmarkForDeleteProjectsRequest addExcludeDocumentIdsItem(Integer excludeDocumentIdsItem) {
    if (this.excludeDocumentIds == null) {
      this.excludeDocumentIds = new ArrayList<Integer>();
    }
    this.excludeDocumentIds.add(excludeDocumentIdsItem);
    return this;
  }

   /**
   * Get excludeDocumentIds
   * @return excludeDocumentIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getExcludeDocumentIds() {
    return excludeDocumentIds;
  }


  public void setExcludeDocumentIds(List<Integer> excludeDocumentIds) {
    this.excludeDocumentIds = excludeDocumentIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarkUnmarkForDeleteProjectsRequest markUnmarkForDeleteProjectsRequest = (MarkUnmarkForDeleteProjectsRequest) o;
    return Objects.equals(this.all, markUnmarkForDeleteProjectsRequest.all) &&
        Objects.equals(this.removeAll, markUnmarkForDeleteProjectsRequest.removeAll) &&
        Objects.equals(this.excludeDocumentIds, markUnmarkForDeleteProjectsRequest.excludeDocumentIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(all, removeAll, excludeDocumentIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarkUnmarkForDeleteProjectsRequest {\n");
    sb.append("    all: ").append(toIndentedString(all)).append("\n");
    sb.append("    removeAll: ").append(toIndentedString(removeAll)).append("\n");
    sb.append("    excludeDocumentIds: ").append(toIndentedString(excludeDocumentIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

