/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.1.188
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * ProjectDocumentSimilarityResponseData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-19T15:46:46.101102+03:00[Europe/Moscow]")
public class ProjectDocumentSimilarityResponseData {
  public static final String SERIALIZED_NAME_DOCUMENT_A_NAME = "document_a_name";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_A_NAME)
  private String documentAName;

  public static final String SERIALIZED_NAME_DOCUMENT_A_ID = "document_a_id";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_A_ID)
  private String documentAId;

  public static final String SERIALIZED_NAME_DOCUMENT_B_NAME = "document_b_name";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_B_NAME)
  private String documentBName;

  public static final String SERIALIZED_NAME_DOCUMENT_B_ID = "document_b_id";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_B_ID)
  private String documentBId;

  public static final String SERIALIZED_NAME_DOCUMENT_B_TEXT = "document_b_text";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_B_TEXT)
  private String documentBText;

  public static final String SERIALIZED_NAME_SIMILARITY = "similarity";
  @SerializedName(SERIALIZED_NAME_SIMILARITY)
  private BigDecimal similarity;

  public static final String SERIALIZED_NAME_RUN_ID = "run_id";
  @SerializedName(SERIALIZED_NAME_RUN_ID)
  private String runId;

  public ProjectDocumentSimilarityResponseData() { 
  }

  
  public ProjectDocumentSimilarityResponseData(
     String documentAId, 
     String documentBId, 
     String runId
  ) {
    this();
    this.documentAId = documentAId;
    this.documentBId = documentBId;
    this.runId = runId;
  }

  public ProjectDocumentSimilarityResponseData documentAName(String documentAName) {
    
    this.documentAName = documentAName;
    return this;
  }

   /**
   * Get documentAName
   * @return documentAName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDocumentAName() {
    return documentAName;
  }


  public void setDocumentAName(String documentAName) {
    this.documentAName = documentAName;
  }


   /**
   * Get documentAId
   * @return documentAId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentAId() {
    return documentAId;
  }




  public ProjectDocumentSimilarityResponseData documentBName(String documentBName) {
    
    this.documentBName = documentBName;
    return this;
  }

   /**
   * Get documentBName
   * @return documentBName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDocumentBName() {
    return documentBName;
  }


  public void setDocumentBName(String documentBName) {
    this.documentBName = documentBName;
  }


   /**
   * Get documentBId
   * @return documentBId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentBId() {
    return documentBId;
  }




  public ProjectDocumentSimilarityResponseData documentBText(String documentBText) {
    
    this.documentBText = documentBText;
    return this;
  }

   /**
   * Get documentBText
   * @return documentBText
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDocumentBText() {
    return documentBText;
  }


  public void setDocumentBText(String documentBText) {
    this.documentBText = documentBText;
  }


  public ProjectDocumentSimilarityResponseData similarity(BigDecimal similarity) {
    
    this.similarity = similarity;
    return this;
  }

   /**
   * Get similarity
   * @return similarity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getSimilarity() {
    return similarity;
  }


  public void setSimilarity(BigDecimal similarity) {
    this.similarity = similarity;
  }


   /**
   * Get runId
   * @return runId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRunId() {
    return runId;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectDocumentSimilarityResponseData projectDocumentSimilarityResponseData = (ProjectDocumentSimilarityResponseData) o;
    return Objects.equals(this.documentAName, projectDocumentSimilarityResponseData.documentAName) &&
        Objects.equals(this.documentAId, projectDocumentSimilarityResponseData.documentAId) &&
        Objects.equals(this.documentBName, projectDocumentSimilarityResponseData.documentBName) &&
        Objects.equals(this.documentBId, projectDocumentSimilarityResponseData.documentBId) &&
        Objects.equals(this.documentBText, projectDocumentSimilarityResponseData.documentBText) &&
        Objects.equals(this.similarity, projectDocumentSimilarityResponseData.similarity) &&
        Objects.equals(this.runId, projectDocumentSimilarityResponseData.runId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentAName, documentAId, documentBName, documentBId, documentBText, similarity, runId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectDocumentSimilarityResponseData {\n");
    sb.append("    documentAName: ").append(toIndentedString(documentAName)).append("\n");
    sb.append("    documentAId: ").append(toIndentedString(documentAId)).append("\n");
    sb.append("    documentBName: ").append(toIndentedString(documentBName)).append("\n");
    sb.append("    documentBId: ").append(toIndentedString(documentBId)).append("\n");
    sb.append("    documentBText: ").append(toIndentedString(documentBText)).append("\n");
    sb.append("    similarity: ").append(toIndentedString(similarity)).append("\n");
    sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

