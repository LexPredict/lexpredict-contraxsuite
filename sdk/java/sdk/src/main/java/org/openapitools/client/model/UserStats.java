/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserStats
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class UserStats {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_USER_NAME = "user_name";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_GROUP_NAME = "group_name";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  private String groupName;

  public static final String SERIALIZED_NAME_TOTAL_PROJECTS = "total_projects";
  @SerializedName(SERIALIZED_NAME_TOTAL_PROJECTS)
  private Integer totalProjects;

  public static final String SERIALIZED_NAME_DOCUMENTS_ASSIGNED = "documents_assigned";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_ASSIGNED)
  private Integer documentsAssigned;

  public static final String SERIALIZED_NAME_DOCUMENTS_COMPLETED = "documents_completed";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_COMPLETED)
  private Integer documentsCompleted;

  public static final String SERIALIZED_NAME_DOCUMENTS_TODO = "documents_todo";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_TODO)
  private Integer documentsTodo;

  public static final String SERIALIZED_NAME_DOCUMENTS_COMPLETED_PCNT = "documents_completed_pcnt";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_COMPLETED_PCNT)
  private BigDecimal documentsCompletedPcnt;

  public static final String SERIALIZED_NAME_DOCUMENTS_TODO_PCNT = "documents_todo_pcnt";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_TODO_PCNT)
  private BigDecimal documentsTodoPcnt;

  public static final String SERIALIZED_NAME_CLAUSES_ASSIGNED = "clauses_assigned";
  @SerializedName(SERIALIZED_NAME_CLAUSES_ASSIGNED)
  private Integer clausesAssigned;

  public static final String SERIALIZED_NAME_CLAUSES_COMPLETED = "clauses_completed";
  @SerializedName(SERIALIZED_NAME_CLAUSES_COMPLETED)
  private Integer clausesCompleted;

  public static final String SERIALIZED_NAME_CLAUSES_TODO = "clauses_todo";
  @SerializedName(SERIALIZED_NAME_CLAUSES_TODO)
  private Integer clausesTodo;

  public static final String SERIALIZED_NAME_CLAUSES_COMPLETED_PCNT = "clauses_completed_pcnt";
  @SerializedName(SERIALIZED_NAME_CLAUSES_COMPLETED_PCNT)
  private BigDecimal clausesCompletedPcnt;

  public static final String SERIALIZED_NAME_CLAUSES_TODO_PCNT = "clauses_todo_pcnt";
  @SerializedName(SERIALIZED_NAME_CLAUSES_TODO_PCNT)
  private BigDecimal clausesTodoPcnt;

  public UserStats() { 
  }

  public UserStats id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public UserStats userName(String userName) {
    
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    this.userName = userName;
  }


  public UserStats groupName(String groupName) {
    
    this.groupName = groupName;
    return this;
  }

   /**
   * Get groupName
   * @return groupName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getGroupName() {
    return groupName;
  }


  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }


  public UserStats totalProjects(Integer totalProjects) {
    
    this.totalProjects = totalProjects;
    return this;
  }

   /**
   * Get totalProjects
   * @return totalProjects
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTotalProjects() {
    return totalProjects;
  }


  public void setTotalProjects(Integer totalProjects) {
    this.totalProjects = totalProjects;
  }


  public UserStats documentsAssigned(Integer documentsAssigned) {
    
    this.documentsAssigned = documentsAssigned;
    return this;
  }

   /**
   * Get documentsAssigned
   * @return documentsAssigned
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getDocumentsAssigned() {
    return documentsAssigned;
  }


  public void setDocumentsAssigned(Integer documentsAssigned) {
    this.documentsAssigned = documentsAssigned;
  }


  public UserStats documentsCompleted(Integer documentsCompleted) {
    
    this.documentsCompleted = documentsCompleted;
    return this;
  }

   /**
   * Get documentsCompleted
   * @return documentsCompleted
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getDocumentsCompleted() {
    return documentsCompleted;
  }


  public void setDocumentsCompleted(Integer documentsCompleted) {
    this.documentsCompleted = documentsCompleted;
  }


  public UserStats documentsTodo(Integer documentsTodo) {
    
    this.documentsTodo = documentsTodo;
    return this;
  }

   /**
   * Get documentsTodo
   * @return documentsTodo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getDocumentsTodo() {
    return documentsTodo;
  }


  public void setDocumentsTodo(Integer documentsTodo) {
    this.documentsTodo = documentsTodo;
  }


  public UserStats documentsCompletedPcnt(BigDecimal documentsCompletedPcnt) {
    
    this.documentsCompletedPcnt = documentsCompletedPcnt;
    return this;
  }

   /**
   * Get documentsCompletedPcnt
   * @return documentsCompletedPcnt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getDocumentsCompletedPcnt() {
    return documentsCompletedPcnt;
  }


  public void setDocumentsCompletedPcnt(BigDecimal documentsCompletedPcnt) {
    this.documentsCompletedPcnt = documentsCompletedPcnt;
  }


  public UserStats documentsTodoPcnt(BigDecimal documentsTodoPcnt) {
    
    this.documentsTodoPcnt = documentsTodoPcnt;
    return this;
  }

   /**
   * Get documentsTodoPcnt
   * @return documentsTodoPcnt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getDocumentsTodoPcnt() {
    return documentsTodoPcnt;
  }


  public void setDocumentsTodoPcnt(BigDecimal documentsTodoPcnt) {
    this.documentsTodoPcnt = documentsTodoPcnt;
  }


  public UserStats clausesAssigned(Integer clausesAssigned) {
    
    this.clausesAssigned = clausesAssigned;
    return this;
  }

   /**
   * Get clausesAssigned
   * @return clausesAssigned
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getClausesAssigned() {
    return clausesAssigned;
  }


  public void setClausesAssigned(Integer clausesAssigned) {
    this.clausesAssigned = clausesAssigned;
  }


  public UserStats clausesCompleted(Integer clausesCompleted) {
    
    this.clausesCompleted = clausesCompleted;
    return this;
  }

   /**
   * Get clausesCompleted
   * @return clausesCompleted
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getClausesCompleted() {
    return clausesCompleted;
  }


  public void setClausesCompleted(Integer clausesCompleted) {
    this.clausesCompleted = clausesCompleted;
  }


  public UserStats clausesTodo(Integer clausesTodo) {
    
    this.clausesTodo = clausesTodo;
    return this;
  }

   /**
   * Get clausesTodo
   * @return clausesTodo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getClausesTodo() {
    return clausesTodo;
  }


  public void setClausesTodo(Integer clausesTodo) {
    this.clausesTodo = clausesTodo;
  }


  public UserStats clausesCompletedPcnt(BigDecimal clausesCompletedPcnt) {
    
    this.clausesCompletedPcnt = clausesCompletedPcnt;
    return this;
  }

   /**
   * Get clausesCompletedPcnt
   * @return clausesCompletedPcnt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getClausesCompletedPcnt() {
    return clausesCompletedPcnt;
  }


  public void setClausesCompletedPcnt(BigDecimal clausesCompletedPcnt) {
    this.clausesCompletedPcnt = clausesCompletedPcnt;
  }


  public UserStats clausesTodoPcnt(BigDecimal clausesTodoPcnt) {
    
    this.clausesTodoPcnt = clausesTodoPcnt;
    return this;
  }

   /**
   * Get clausesTodoPcnt
   * @return clausesTodoPcnt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getClausesTodoPcnt() {
    return clausesTodoPcnt;
  }


  public void setClausesTodoPcnt(BigDecimal clausesTodoPcnt) {
    this.clausesTodoPcnt = clausesTodoPcnt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserStats userStats = (UserStats) o;
    return Objects.equals(this.id, userStats.id) &&
        Objects.equals(this.userName, userStats.userName) &&
        Objects.equals(this.groupName, userStats.groupName) &&
        Objects.equals(this.totalProjects, userStats.totalProjects) &&
        Objects.equals(this.documentsAssigned, userStats.documentsAssigned) &&
        Objects.equals(this.documentsCompleted, userStats.documentsCompleted) &&
        Objects.equals(this.documentsTodo, userStats.documentsTodo) &&
        Objects.equals(this.documentsCompletedPcnt, userStats.documentsCompletedPcnt) &&
        Objects.equals(this.documentsTodoPcnt, userStats.documentsTodoPcnt) &&
        Objects.equals(this.clausesAssigned, userStats.clausesAssigned) &&
        Objects.equals(this.clausesCompleted, userStats.clausesCompleted) &&
        Objects.equals(this.clausesTodo, userStats.clausesTodo) &&
        Objects.equals(this.clausesCompletedPcnt, userStats.clausesCompletedPcnt) &&
        Objects.equals(this.clausesTodoPcnt, userStats.clausesTodoPcnt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userName, groupName, totalProjects, documentsAssigned, documentsCompleted, documentsTodo, documentsCompletedPcnt, documentsTodoPcnt, clausesAssigned, clausesCompleted, clausesTodo, clausesCompletedPcnt, clausesTodoPcnt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserStats {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    totalProjects: ").append(toIndentedString(totalProjects)).append("\n");
    sb.append("    documentsAssigned: ").append(toIndentedString(documentsAssigned)).append("\n");
    sb.append("    documentsCompleted: ").append(toIndentedString(documentsCompleted)).append("\n");
    sb.append("    documentsTodo: ").append(toIndentedString(documentsTodo)).append("\n");
    sb.append("    documentsCompletedPcnt: ").append(toIndentedString(documentsCompletedPcnt)).append("\n");
    sb.append("    documentsTodoPcnt: ").append(toIndentedString(documentsTodoPcnt)).append("\n");
    sb.append("    clausesAssigned: ").append(toIndentedString(clausesAssigned)).append("\n");
    sb.append("    clausesCompleted: ").append(toIndentedString(clausesCompleted)).append("\n");
    sb.append("    clausesTodo: ").append(toIndentedString(clausesTodo)).append("\n");
    sb.append("    clausesCompletedPcnt: ").append(toIndentedString(clausesCompletedPcnt)).append("\n");
    sb.append("    clausesTodoPcnt: ").append(toIndentedString(clausesTodoPcnt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("user_name");
    openapiFields.add("group_name");
    openapiFields.add("total_projects");
    openapiFields.add("documents_assigned");
    openapiFields.add("documents_completed");
    openapiFields.add("documents_todo");
    openapiFields.add("documents_completed_pcnt");
    openapiFields.add("documents_todo_pcnt");
    openapiFields.add("clauses_assigned");
    openapiFields.add("clauses_completed");
    openapiFields.add("clauses_todo");
    openapiFields.add("clauses_completed_pcnt");
    openapiFields.add("clauses_todo_pcnt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("user_name");
    openapiRequiredFields.add("group_name");
    openapiRequiredFields.add("total_projects");
    openapiRequiredFields.add("documents_assigned");
    openapiRequiredFields.add("documents_completed");
    openapiRequiredFields.add("documents_todo");
    openapiRequiredFields.add("documents_completed_pcnt");
    openapiRequiredFields.add("documents_todo_pcnt");
    openapiRequiredFields.add("clauses_assigned");
    openapiRequiredFields.add("clauses_completed");
    openapiRequiredFields.add("clauses_todo");
    openapiRequiredFields.add("clauses_completed_pcnt");
    openapiRequiredFields.add("clauses_todo_pcnt");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UserStats
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (UserStats.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserStats is not found in the empty JSON string", UserStats.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!UserStats.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserStats` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UserStats.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("user_name") != null && !jsonObj.get("user_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_name").toString()));
      }
      if (jsonObj.get("group_name") != null && !jsonObj.get("group_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("group_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserStats.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserStats' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserStats> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserStats.class));

       return (TypeAdapter<T>) new TypeAdapter<UserStats>() {
           @Override
           public void write(JsonWriter out, UserStats value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserStats read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserStats given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserStats
  * @throws IOException if the JSON string is invalid with respect to UserStats
  */
  public static UserStats fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserStats.class);
  }

 /**
  * Convert an instance of UserStats to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

