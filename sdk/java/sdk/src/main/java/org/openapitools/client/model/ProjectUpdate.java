/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProjectUpdate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class ProjectUpdate {
  public static final String SERIALIZED_NAME_PK = "pk";
  @SerializedName(SERIALIZED_NAME_PK)
  private Integer pk;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_SEND_EMAIL_NOTIFICATION = "send_email_notification";
  @SerializedName(SERIALIZED_NAME_SEND_EMAIL_NOTIFICATION)
  private Boolean sendEmailNotification;

  public static final String SERIALIZED_NAME_OWNERS = "owners";
  @SerializedName(SERIALIZED_NAME_OWNERS)
  private List<Integer> owners = null;

  public static final String SERIALIZED_NAME_REVIEWERS = "reviewers";
  @SerializedName(SERIALIZED_NAME_REVIEWERS)
  private List<Integer> reviewers = null;

  public static final String SERIALIZED_NAME_SUPER_REVIEWERS = "super_reviewers";
  @SerializedName(SERIALIZED_NAME_SUPER_REVIEWERS)
  private List<Integer> superReviewers = null;

  public static final String SERIALIZED_NAME_JUNIOR_REVIEWERS = "junior_reviewers";
  @SerializedName(SERIALIZED_NAME_JUNIOR_REVIEWERS)
  private List<Integer> juniorReviewers = null;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_HIDE_CLAUSE_REVIEW = "hide_clause_review";
  @SerializedName(SERIALIZED_NAME_HIDE_CLAUSE_REVIEW)
  private Boolean hideClauseReview;

  public static final String SERIALIZED_NAME_TERM_TAGS = "term_tags";
  @SerializedName(SERIALIZED_NAME_TERM_TAGS)
  private List<Integer> termTags = null;

  public static final String SERIALIZED_NAME_COMPANYTYPE_TAGS = "companytype_tags";
  @SerializedName(SERIALIZED_NAME_COMPANYTYPE_TAGS)
  private List<Integer> companytypeTags = null;

  public static final String SERIALIZED_NAME_DOCUMENT_TRANSFORMER = "document_transformer";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_TRANSFORMER)
  private Integer documentTransformer;

  public static final String SERIALIZED_NAME_TEXT_UNIT_TRANSFORMER = "text_unit_transformer";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_TRANSFORMER)
  private Integer textUnitTransformer;

  public ProjectUpdate() { 
  }

  
  public ProjectUpdate(
     Integer pk
  ) {
    this();
    this.pk = pk;
  }

   /**
   * Get pk
   * @return pk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPk() {
    return pk;
  }




  public ProjectUpdate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ProjectUpdate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ProjectUpdate status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    this.status = status;
  }


  public ProjectUpdate sendEmailNotification(Boolean sendEmailNotification) {
    
    this.sendEmailNotification = sendEmailNotification;
    return this;
  }

   /**
   * Get sendEmailNotification
   * @return sendEmailNotification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSendEmailNotification() {
    return sendEmailNotification;
  }


  public void setSendEmailNotification(Boolean sendEmailNotification) {
    this.sendEmailNotification = sendEmailNotification;
  }


  public ProjectUpdate owners(List<Integer> owners) {
    
    this.owners = owners;
    return this;
  }

  public ProjectUpdate addOwnersItem(Integer ownersItem) {
    if (this.owners == null) {
      this.owners = new ArrayList<>();
    }
    this.owners.add(ownersItem);
    return this;
  }

   /**
   * Get owners
   * @return owners
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getOwners() {
    return owners;
  }


  public void setOwners(List<Integer> owners) {
    this.owners = owners;
  }


  public ProjectUpdate reviewers(List<Integer> reviewers) {
    
    this.reviewers = reviewers;
    return this;
  }

  public ProjectUpdate addReviewersItem(Integer reviewersItem) {
    if (this.reviewers == null) {
      this.reviewers = new ArrayList<>();
    }
    this.reviewers.add(reviewersItem);
    return this;
  }

   /**
   * Get reviewers
   * @return reviewers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getReviewers() {
    return reviewers;
  }


  public void setReviewers(List<Integer> reviewers) {
    this.reviewers = reviewers;
  }


  public ProjectUpdate superReviewers(List<Integer> superReviewers) {
    
    this.superReviewers = superReviewers;
    return this;
  }

  public ProjectUpdate addSuperReviewersItem(Integer superReviewersItem) {
    if (this.superReviewers == null) {
      this.superReviewers = new ArrayList<>();
    }
    this.superReviewers.add(superReviewersItem);
    return this;
  }

   /**
   * Get superReviewers
   * @return superReviewers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getSuperReviewers() {
    return superReviewers;
  }


  public void setSuperReviewers(List<Integer> superReviewers) {
    this.superReviewers = superReviewers;
  }


  public ProjectUpdate juniorReviewers(List<Integer> juniorReviewers) {
    
    this.juniorReviewers = juniorReviewers;
    return this;
  }

  public ProjectUpdate addJuniorReviewersItem(Integer juniorReviewersItem) {
    if (this.juniorReviewers == null) {
      this.juniorReviewers = new ArrayList<>();
    }
    this.juniorReviewers.add(juniorReviewersItem);
    return this;
  }

   /**
   * Get juniorReviewers
   * @return juniorReviewers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getJuniorReviewers() {
    return juniorReviewers;
  }


  public void setJuniorReviewers(List<Integer> juniorReviewers) {
    this.juniorReviewers = juniorReviewers;
  }


  public ProjectUpdate type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public ProjectUpdate hideClauseReview(Boolean hideClauseReview) {
    
    this.hideClauseReview = hideClauseReview;
    return this;
  }

   /**
   * Get hideClauseReview
   * @return hideClauseReview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHideClauseReview() {
    return hideClauseReview;
  }


  public void setHideClauseReview(Boolean hideClauseReview) {
    this.hideClauseReview = hideClauseReview;
  }


  public ProjectUpdate termTags(List<Integer> termTags) {
    
    this.termTags = termTags;
    return this;
  }

  public ProjectUpdate addTermTagsItem(Integer termTagsItem) {
    if (this.termTags == null) {
      this.termTags = new ArrayList<>();
    }
    this.termTags.add(termTagsItem);
    return this;
  }

   /**
   * Get termTags
   * @return termTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getTermTags() {
    return termTags;
  }


  public void setTermTags(List<Integer> termTags) {
    this.termTags = termTags;
  }


  public ProjectUpdate companytypeTags(List<Integer> companytypeTags) {
    
    this.companytypeTags = companytypeTags;
    return this;
  }

  public ProjectUpdate addCompanytypeTagsItem(Integer companytypeTagsItem) {
    if (this.companytypeTags == null) {
      this.companytypeTags = new ArrayList<>();
    }
    this.companytypeTags.add(companytypeTagsItem);
    return this;
  }

   /**
   * Get companytypeTags
   * @return companytypeTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getCompanytypeTags() {
    return companytypeTags;
  }


  public void setCompanytypeTags(List<Integer> companytypeTags) {
    this.companytypeTags = companytypeTags;
  }


  public ProjectUpdate documentTransformer(Integer documentTransformer) {
    
    this.documentTransformer = documentTransformer;
    return this;
  }

   /**
   * Get documentTransformer
   * @return documentTransformer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDocumentTransformer() {
    return documentTransformer;
  }


  public void setDocumentTransformer(Integer documentTransformer) {
    this.documentTransformer = documentTransformer;
  }


  public ProjectUpdate textUnitTransformer(Integer textUnitTransformer) {
    
    this.textUnitTransformer = textUnitTransformer;
    return this;
  }

   /**
   * Get textUnitTransformer
   * @return textUnitTransformer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTextUnitTransformer() {
    return textUnitTransformer;
  }


  public void setTextUnitTransformer(Integer textUnitTransformer) {
    this.textUnitTransformer = textUnitTransformer;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectUpdate projectUpdate = (ProjectUpdate) o;
    return Objects.equals(this.pk, projectUpdate.pk) &&
        Objects.equals(this.name, projectUpdate.name) &&
        Objects.equals(this.description, projectUpdate.description) &&
        Objects.equals(this.status, projectUpdate.status) &&
        Objects.equals(this.sendEmailNotification, projectUpdate.sendEmailNotification) &&
        Objects.equals(this.owners, projectUpdate.owners) &&
        Objects.equals(this.reviewers, projectUpdate.reviewers) &&
        Objects.equals(this.superReviewers, projectUpdate.superReviewers) &&
        Objects.equals(this.juniorReviewers, projectUpdate.juniorReviewers) &&
        Objects.equals(this.type, projectUpdate.type) &&
        Objects.equals(this.hideClauseReview, projectUpdate.hideClauseReview) &&
        Objects.equals(this.termTags, projectUpdate.termTags) &&
        Objects.equals(this.companytypeTags, projectUpdate.companytypeTags) &&
        Objects.equals(this.documentTransformer, projectUpdate.documentTransformer) &&
        Objects.equals(this.textUnitTransformer, projectUpdate.textUnitTransformer);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(pk, name, description, status, sendEmailNotification, owners, reviewers, superReviewers, juniorReviewers, type, hideClauseReview, termTags, companytypeTags, documentTransformer, textUnitTransformer);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectUpdate {\n");
    sb.append("    pk: ").append(toIndentedString(pk)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sendEmailNotification: ").append(toIndentedString(sendEmailNotification)).append("\n");
    sb.append("    owners: ").append(toIndentedString(owners)).append("\n");
    sb.append("    reviewers: ").append(toIndentedString(reviewers)).append("\n");
    sb.append("    superReviewers: ").append(toIndentedString(superReviewers)).append("\n");
    sb.append("    juniorReviewers: ").append(toIndentedString(juniorReviewers)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    hideClauseReview: ").append(toIndentedString(hideClauseReview)).append("\n");
    sb.append("    termTags: ").append(toIndentedString(termTags)).append("\n");
    sb.append("    companytypeTags: ").append(toIndentedString(companytypeTags)).append("\n");
    sb.append("    documentTransformer: ").append(toIndentedString(documentTransformer)).append("\n");
    sb.append("    textUnitTransformer: ").append(toIndentedString(textUnitTransformer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pk");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("status");
    openapiFields.add("send_email_notification");
    openapiFields.add("owners");
    openapiFields.add("reviewers");
    openapiFields.add("super_reviewers");
    openapiFields.add("junior_reviewers");
    openapiFields.add("type");
    openapiFields.add("hide_clause_review");
    openapiFields.add("term_tags");
    openapiFields.add("companytype_tags");
    openapiFields.add("document_transformer");
    openapiFields.add("text_unit_transformer");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProjectUpdate
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ProjectUpdate.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProjectUpdate is not found in the empty JSON string", ProjectUpdate.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ProjectUpdate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProjectUpdate` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ProjectUpdate.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("owners") != null && !jsonObj.get("owners").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `owners` to be an array in the JSON string but got `%s`", jsonObj.get("owners").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("reviewers") != null && !jsonObj.get("reviewers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `reviewers` to be an array in the JSON string but got `%s`", jsonObj.get("reviewers").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("super_reviewers") != null && !jsonObj.get("super_reviewers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `super_reviewers` to be an array in the JSON string but got `%s`", jsonObj.get("super_reviewers").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("junior_reviewers") != null && !jsonObj.get("junior_reviewers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `junior_reviewers` to be an array in the JSON string but got `%s`", jsonObj.get("junior_reviewers").toString()));
      }
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("term_tags") != null && !jsonObj.get("term_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `term_tags` to be an array in the JSON string but got `%s`", jsonObj.get("term_tags").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("companytype_tags") != null && !jsonObj.get("companytype_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `companytype_tags` to be an array in the JSON string but got `%s`", jsonObj.get("companytype_tags").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProjectUpdate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProjectUpdate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProjectUpdate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProjectUpdate.class));

       return (TypeAdapter<T>) new TypeAdapter<ProjectUpdate>() {
           @Override
           public void write(JsonWriter out, ProjectUpdate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProjectUpdate read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProjectUpdate given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProjectUpdate
  * @throws IOException if the JSON string is invalid with respect to ProjectUpdate
  */
  public static ProjectUpdate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProjectUpdate.class);
  }

 /**
  * Convert an instance of ProjectUpdate to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

