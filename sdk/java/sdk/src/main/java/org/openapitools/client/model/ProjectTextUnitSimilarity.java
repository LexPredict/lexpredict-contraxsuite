/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProjectTextUnitSimilarity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class ProjectTextUnitSimilarity {
  public static final String SERIALIZED_NAME_DOCUMENT_A_NAME = "document_a_name";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_A_NAME)
  private String documentAName;

  public static final String SERIALIZED_NAME_DOCUMENT_A_ID = "document_a_id";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_A_ID)
  private String documentAId;

  public static final String SERIALIZED_NAME_TEXT_UNIT_A_ID = "text_unit_a_id";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_A_ID)
  private String textUnitAId;

  public static final String SERIALIZED_NAME_TEXT_UNIT_A_TEXT = "text_unit_a_text";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_A_TEXT)
  private String textUnitAText;

  public static final String SERIALIZED_NAME_TEXT_UNIT_A_UNIT_TYPE = "text_unit_a__unit_type";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_A_UNIT_TYPE)
  private String textUnitAUnitType;

  public static final String SERIALIZED_NAME_TEXT_UNIT_A_LOCATION_START = "text_unit_a__location_start";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_A_LOCATION_START)
  private String textUnitALocationStart;

  public static final String SERIALIZED_NAME_TEXT_UNIT_A_LOCATION_END = "text_unit_a__location_end";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_A_LOCATION_END)
  private String textUnitALocationEnd;

  public static final String SERIALIZED_NAME_DOCUMENT_B_NAME = "document_b_name";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_B_NAME)
  private String documentBName;

  public static final String SERIALIZED_NAME_DOCUMENT_B_ID = "document_b_id";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_B_ID)
  private String documentBId;

  public static final String SERIALIZED_NAME_TEXT_UNIT_B_ID = "text_unit_b_id";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_B_ID)
  private String textUnitBId;

  public static final String SERIALIZED_NAME_TEXT_UNIT_B_TEXT = "text_unit_b_text";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_B_TEXT)
  private String textUnitBText;

  public static final String SERIALIZED_NAME_TEXT_UNIT_B_LOCATION_START = "text_unit_b__location_start";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_B_LOCATION_START)
  private String textUnitBLocationStart;

  public static final String SERIALIZED_NAME_TEXT_UNIT_B_LOCATION_END = "text_unit_b__location_end";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_B_LOCATION_END)
  private String textUnitBLocationEnd;

  public static final String SERIALIZED_NAME_SIMILARITY = "similarity";
  @SerializedName(SERIALIZED_NAME_SIMILARITY)
  private BigDecimal similarity;

  public static final String SERIALIZED_NAME_RUN_ID = "run_id";
  @SerializedName(SERIALIZED_NAME_RUN_ID)
  private String runId;

  public ProjectTextUnitSimilarity() { 
  }

  
  public ProjectTextUnitSimilarity(
     String documentAId, 
     String textUnitAId, 
     String textUnitAUnitType, 
     String textUnitALocationStart, 
     String textUnitALocationEnd, 
     String documentBId, 
     String textUnitBId, 
     String textUnitBLocationStart, 
     String textUnitBLocationEnd, 
     String runId
  ) {
    this();
    this.documentAId = documentAId;
    this.textUnitAId = textUnitAId;
    this.textUnitAUnitType = textUnitAUnitType;
    this.textUnitALocationStart = textUnitALocationStart;
    this.textUnitALocationEnd = textUnitALocationEnd;
    this.documentBId = documentBId;
    this.textUnitBId = textUnitBId;
    this.textUnitBLocationStart = textUnitBLocationStart;
    this.textUnitBLocationEnd = textUnitBLocationEnd;
    this.runId = runId;
  }

  public ProjectTextUnitSimilarity documentAName(String documentAName) {
    
    this.documentAName = documentAName;
    return this;
  }

   /**
   * Get documentAName
   * @return documentAName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDocumentAName() {
    return documentAName;
  }


  public void setDocumentAName(String documentAName) {
    this.documentAName = documentAName;
  }


   /**
   * Get documentAId
   * @return documentAId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentAId() {
    return documentAId;
  }




   /**
   * Get textUnitAId
   * @return textUnitAId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTextUnitAId() {
    return textUnitAId;
  }




  public ProjectTextUnitSimilarity textUnitAText(String textUnitAText) {
    
    this.textUnitAText = textUnitAText;
    return this;
  }

   /**
   * Get textUnitAText
   * @return textUnitAText
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTextUnitAText() {
    return textUnitAText;
  }


  public void setTextUnitAText(String textUnitAText) {
    this.textUnitAText = textUnitAText;
  }


   /**
   * Get textUnitAUnitType
   * @return textUnitAUnitType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTextUnitAUnitType() {
    return textUnitAUnitType;
  }




   /**
   * Get textUnitALocationStart
   * @return textUnitALocationStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTextUnitALocationStart() {
    return textUnitALocationStart;
  }




   /**
   * Get textUnitALocationEnd
   * @return textUnitALocationEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTextUnitALocationEnd() {
    return textUnitALocationEnd;
  }




  public ProjectTextUnitSimilarity documentBName(String documentBName) {
    
    this.documentBName = documentBName;
    return this;
  }

   /**
   * Get documentBName
   * @return documentBName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDocumentBName() {
    return documentBName;
  }


  public void setDocumentBName(String documentBName) {
    this.documentBName = documentBName;
  }


   /**
   * Get documentBId
   * @return documentBId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentBId() {
    return documentBId;
  }




   /**
   * Get textUnitBId
   * @return textUnitBId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTextUnitBId() {
    return textUnitBId;
  }




  public ProjectTextUnitSimilarity textUnitBText(String textUnitBText) {
    
    this.textUnitBText = textUnitBText;
    return this;
  }

   /**
   * Get textUnitBText
   * @return textUnitBText
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTextUnitBText() {
    return textUnitBText;
  }


  public void setTextUnitBText(String textUnitBText) {
    this.textUnitBText = textUnitBText;
  }


   /**
   * Get textUnitBLocationStart
   * @return textUnitBLocationStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTextUnitBLocationStart() {
    return textUnitBLocationStart;
  }




   /**
   * Get textUnitBLocationEnd
   * @return textUnitBLocationEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTextUnitBLocationEnd() {
    return textUnitBLocationEnd;
  }




  public ProjectTextUnitSimilarity similarity(BigDecimal similarity) {
    
    this.similarity = similarity;
    return this;
  }

   /**
   * Get similarity
   * @return similarity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getSimilarity() {
    return similarity;
  }


  public void setSimilarity(BigDecimal similarity) {
    this.similarity = similarity;
  }


   /**
   * Get runId
   * @return runId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRunId() {
    return runId;
  }





  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectTextUnitSimilarity projectTextUnitSimilarity = (ProjectTextUnitSimilarity) o;
    return Objects.equals(this.documentAName, projectTextUnitSimilarity.documentAName) &&
        Objects.equals(this.documentAId, projectTextUnitSimilarity.documentAId) &&
        Objects.equals(this.textUnitAId, projectTextUnitSimilarity.textUnitAId) &&
        Objects.equals(this.textUnitAText, projectTextUnitSimilarity.textUnitAText) &&
        Objects.equals(this.textUnitAUnitType, projectTextUnitSimilarity.textUnitAUnitType) &&
        Objects.equals(this.textUnitALocationStart, projectTextUnitSimilarity.textUnitALocationStart) &&
        Objects.equals(this.textUnitALocationEnd, projectTextUnitSimilarity.textUnitALocationEnd) &&
        Objects.equals(this.documentBName, projectTextUnitSimilarity.documentBName) &&
        Objects.equals(this.documentBId, projectTextUnitSimilarity.documentBId) &&
        Objects.equals(this.textUnitBId, projectTextUnitSimilarity.textUnitBId) &&
        Objects.equals(this.textUnitBText, projectTextUnitSimilarity.textUnitBText) &&
        Objects.equals(this.textUnitBLocationStart, projectTextUnitSimilarity.textUnitBLocationStart) &&
        Objects.equals(this.textUnitBLocationEnd, projectTextUnitSimilarity.textUnitBLocationEnd) &&
        Objects.equals(this.similarity, projectTextUnitSimilarity.similarity) &&
        Objects.equals(this.runId, projectTextUnitSimilarity.runId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentAName, documentAId, textUnitAId, textUnitAText, textUnitAUnitType, textUnitALocationStart, textUnitALocationEnd, documentBName, documentBId, textUnitBId, textUnitBText, textUnitBLocationStart, textUnitBLocationEnd, similarity, runId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectTextUnitSimilarity {\n");
    sb.append("    documentAName: ").append(toIndentedString(documentAName)).append("\n");
    sb.append("    documentAId: ").append(toIndentedString(documentAId)).append("\n");
    sb.append("    textUnitAId: ").append(toIndentedString(textUnitAId)).append("\n");
    sb.append("    textUnitAText: ").append(toIndentedString(textUnitAText)).append("\n");
    sb.append("    textUnitAUnitType: ").append(toIndentedString(textUnitAUnitType)).append("\n");
    sb.append("    textUnitALocationStart: ").append(toIndentedString(textUnitALocationStart)).append("\n");
    sb.append("    textUnitALocationEnd: ").append(toIndentedString(textUnitALocationEnd)).append("\n");
    sb.append("    documentBName: ").append(toIndentedString(documentBName)).append("\n");
    sb.append("    documentBId: ").append(toIndentedString(documentBId)).append("\n");
    sb.append("    textUnitBId: ").append(toIndentedString(textUnitBId)).append("\n");
    sb.append("    textUnitBText: ").append(toIndentedString(textUnitBText)).append("\n");
    sb.append("    textUnitBLocationStart: ").append(toIndentedString(textUnitBLocationStart)).append("\n");
    sb.append("    textUnitBLocationEnd: ").append(toIndentedString(textUnitBLocationEnd)).append("\n");
    sb.append("    similarity: ").append(toIndentedString(similarity)).append("\n");
    sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("document_a_name");
    openapiFields.add("document_a_id");
    openapiFields.add("text_unit_a_id");
    openapiFields.add("text_unit_a_text");
    openapiFields.add("text_unit_a__unit_type");
    openapiFields.add("text_unit_a__location_start");
    openapiFields.add("text_unit_a__location_end");
    openapiFields.add("document_b_name");
    openapiFields.add("document_b_id");
    openapiFields.add("text_unit_b_id");
    openapiFields.add("text_unit_b_text");
    openapiFields.add("text_unit_b__location_start");
    openapiFields.add("text_unit_b__location_end");
    openapiFields.add("similarity");
    openapiFields.add("run_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("document_a_name");
    openapiRequiredFields.add("text_unit_a_text");
    openapiRequiredFields.add("document_b_name");
    openapiRequiredFields.add("text_unit_b_text");
    openapiRequiredFields.add("similarity");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProjectTextUnitSimilarity
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ProjectTextUnitSimilarity.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProjectTextUnitSimilarity is not found in the empty JSON string", ProjectTextUnitSimilarity.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ProjectTextUnitSimilarity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProjectTextUnitSimilarity` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ProjectTextUnitSimilarity.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("document_a_name") != null && !jsonObj.get("document_a_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document_a_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document_a_name").toString()));
      }
      if (jsonObj.get("document_a_id") != null && !jsonObj.get("document_a_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document_a_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document_a_id").toString()));
      }
      if (jsonObj.get("text_unit_a_id") != null && !jsonObj.get("text_unit_a_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_unit_a_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_unit_a_id").toString()));
      }
      if (jsonObj.get("text_unit_a_text") != null && !jsonObj.get("text_unit_a_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_unit_a_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_unit_a_text").toString()));
      }
      if (jsonObj.get("text_unit_a__unit_type") != null && !jsonObj.get("text_unit_a__unit_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_unit_a__unit_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_unit_a__unit_type").toString()));
      }
      if (jsonObj.get("text_unit_a__location_start") != null && !jsonObj.get("text_unit_a__location_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_unit_a__location_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_unit_a__location_start").toString()));
      }
      if (jsonObj.get("text_unit_a__location_end") != null && !jsonObj.get("text_unit_a__location_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_unit_a__location_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_unit_a__location_end").toString()));
      }
      if (jsonObj.get("document_b_name") != null && !jsonObj.get("document_b_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document_b_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document_b_name").toString()));
      }
      if (jsonObj.get("document_b_id") != null && !jsonObj.get("document_b_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document_b_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document_b_id").toString()));
      }
      if (jsonObj.get("text_unit_b_id") != null && !jsonObj.get("text_unit_b_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_unit_b_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_unit_b_id").toString()));
      }
      if (jsonObj.get("text_unit_b_text") != null && !jsonObj.get("text_unit_b_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_unit_b_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_unit_b_text").toString()));
      }
      if (jsonObj.get("text_unit_b__location_start") != null && !jsonObj.get("text_unit_b__location_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_unit_b__location_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_unit_b__location_start").toString()));
      }
      if (jsonObj.get("text_unit_b__location_end") != null && !jsonObj.get("text_unit_b__location_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_unit_b__location_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_unit_b__location_end").toString()));
      }
      if (jsonObj.get("similarity") != null && !jsonObj.get("similarity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `similarity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("similarity").toString()));
      }
      if (jsonObj.get("run_id") != null && !jsonObj.get("run_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `run_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("run_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProjectTextUnitSimilarity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProjectTextUnitSimilarity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProjectTextUnitSimilarity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProjectTextUnitSimilarity.class));

       return (TypeAdapter<T>) new TypeAdapter<ProjectTextUnitSimilarity>() {
           @Override
           public void write(JsonWriter out, ProjectTextUnitSimilarity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProjectTextUnitSimilarity read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProjectTextUnitSimilarity given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProjectTextUnitSimilarity
  * @throws IOException if the JSON string is invalid with respect to ProjectTextUnitSimilarity
  */
  public static ProjectTextUnitSimilarity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProjectTextUnitSimilarity.class);
  }

 /**
  * Convert an instance of ProjectTextUnitSimilarity to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

