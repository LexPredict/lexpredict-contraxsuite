/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.1.188
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DetectProjectFieldValuesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-19T15:46:46.101102+03:00[Europe/Moscow]")
public class DetectProjectFieldValuesRequest {
  public static final String SERIALIZED_NAME_DO_NOT_UPDATE_MODIFIED = "do_not_update_modified";
  @SerializedName(SERIALIZED_NAME_DO_NOT_UPDATE_MODIFIED)
  private Boolean doNotUpdateModified;

  public static final String SERIALIZED_NAME_DO_NOT_WRITE = "do_not_write";
  @SerializedName(SERIALIZED_NAME_DO_NOT_WRITE)
  private Boolean doNotWrite;

  public static final String SERIALIZED_NAME_DOCUMENT_IDS = "document_ids";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_IDS)
  private List<Integer> documentIds = null;

  public DetectProjectFieldValuesRequest() { 
  }

  public DetectProjectFieldValuesRequest doNotUpdateModified(Boolean doNotUpdateModified) {
    
    this.doNotUpdateModified = doNotUpdateModified;
    return this;
  }

   /**
   * Get doNotUpdateModified
   * @return doNotUpdateModified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDoNotUpdateModified() {
    return doNotUpdateModified;
  }


  public void setDoNotUpdateModified(Boolean doNotUpdateModified) {
    this.doNotUpdateModified = doNotUpdateModified;
  }


  public DetectProjectFieldValuesRequest doNotWrite(Boolean doNotWrite) {
    
    this.doNotWrite = doNotWrite;
    return this;
  }

   /**
   * Get doNotWrite
   * @return doNotWrite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDoNotWrite() {
    return doNotWrite;
  }


  public void setDoNotWrite(Boolean doNotWrite) {
    this.doNotWrite = doNotWrite;
  }


  public DetectProjectFieldValuesRequest documentIds(List<Integer> documentIds) {
    
    this.documentIds = documentIds;
    return this;
  }

  public DetectProjectFieldValuesRequest addDocumentIdsItem(Integer documentIdsItem) {
    if (this.documentIds == null) {
      this.documentIds = new ArrayList<Integer>();
    }
    this.documentIds.add(documentIdsItem);
    return this;
  }

   /**
   * Get documentIds
   * @return documentIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getDocumentIds() {
    return documentIds;
  }


  public void setDocumentIds(List<Integer> documentIds) {
    this.documentIds = documentIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetectProjectFieldValuesRequest detectProjectFieldValuesRequest = (DetectProjectFieldValuesRequest) o;
    return Objects.equals(this.doNotUpdateModified, detectProjectFieldValuesRequest.doNotUpdateModified) &&
        Objects.equals(this.doNotWrite, detectProjectFieldValuesRequest.doNotWrite) &&
        Objects.equals(this.documentIds, detectProjectFieldValuesRequest.documentIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(doNotUpdateModified, doNotWrite, documentIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetectProjectFieldValuesRequest {\n");
    sb.append("    doNotUpdateModified: ").append(toIndentedString(doNotUpdateModified)).append("\n");
    sb.append("    doNotWrite: ").append(toIndentedString(doNotWrite)).append("\n");
    sb.append("    documentIds: ").append(toIndentedString(documentIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

