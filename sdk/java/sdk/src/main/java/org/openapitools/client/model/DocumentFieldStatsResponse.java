/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DocumentFieldStatsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class DocumentFieldStatsResponse {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;

  public static final String SERIALIZED_NAME_TODO = "todo";
  @SerializedName(SERIALIZED_NAME_TODO)
  private Integer todo;

  public static final String SERIALIZED_NAME_SYS_GENERATED_CONFIRM_CORRECT = "sys_generated_confirm_correct";
  @SerializedName(SERIALIZED_NAME_SYS_GENERATED_CONFIRM_CORRECT)
  private Integer sysGeneratedConfirmCorrect;

  public static final String SERIALIZED_NAME_REJECTED = "rejected";
  @SerializedName(SERIALIZED_NAME_REJECTED)
  private Integer rejected;

  public static final String SERIALIZED_NAME_USER_GENERATED = "user_generated";
  @SerializedName(SERIALIZED_NAME_USER_GENERATED)
  private Integer userGenerated;

  public static final String SERIALIZED_NAME_DEPS_ON_FIELDS = "deps_on_fields";
  @SerializedName(SERIALIZED_NAME_DEPS_ON_FIELDS)
  private List<String> depsOnFields = new ArrayList<>();

  public DocumentFieldStatsResponse() { 
  }

  public DocumentFieldStatsResponse code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public DocumentFieldStatsResponse title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public DocumentFieldStatsResponse total(Integer total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTotal() {
    return total;
  }


  public void setTotal(Integer total) {
    this.total = total;
  }


  public DocumentFieldStatsResponse todo(Integer todo) {
    
    this.todo = todo;
    return this;
  }

   /**
   * Get todo
   * @return todo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTodo() {
    return todo;
  }


  public void setTodo(Integer todo) {
    this.todo = todo;
  }


  public DocumentFieldStatsResponse sysGeneratedConfirmCorrect(Integer sysGeneratedConfirmCorrect) {
    
    this.sysGeneratedConfirmCorrect = sysGeneratedConfirmCorrect;
    return this;
  }

   /**
   * Get sysGeneratedConfirmCorrect
   * @return sysGeneratedConfirmCorrect
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getSysGeneratedConfirmCorrect() {
    return sysGeneratedConfirmCorrect;
  }


  public void setSysGeneratedConfirmCorrect(Integer sysGeneratedConfirmCorrect) {
    this.sysGeneratedConfirmCorrect = sysGeneratedConfirmCorrect;
  }


  public DocumentFieldStatsResponse rejected(Integer rejected) {
    
    this.rejected = rejected;
    return this;
  }

   /**
   * Get rejected
   * @return rejected
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getRejected() {
    return rejected;
  }


  public void setRejected(Integer rejected) {
    this.rejected = rejected;
  }


  public DocumentFieldStatsResponse userGenerated(Integer userGenerated) {
    
    this.userGenerated = userGenerated;
    return this;
  }

   /**
   * Get userGenerated
   * @return userGenerated
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUserGenerated() {
    return userGenerated;
  }


  public void setUserGenerated(Integer userGenerated) {
    this.userGenerated = userGenerated;
  }


  public DocumentFieldStatsResponse depsOnFields(List<String> depsOnFields) {
    
    this.depsOnFields = depsOnFields;
    return this;
  }

  public DocumentFieldStatsResponse addDepsOnFieldsItem(String depsOnFieldsItem) {
    this.depsOnFields.add(depsOnFieldsItem);
    return this;
  }

   /**
   * Get depsOnFields
   * @return depsOnFields
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getDepsOnFields() {
    return depsOnFields;
  }


  public void setDepsOnFields(List<String> depsOnFields) {
    this.depsOnFields = depsOnFields;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentFieldStatsResponse documentFieldStatsResponse = (DocumentFieldStatsResponse) o;
    return Objects.equals(this.code, documentFieldStatsResponse.code) &&
        Objects.equals(this.title, documentFieldStatsResponse.title) &&
        Objects.equals(this.total, documentFieldStatsResponse.total) &&
        Objects.equals(this.todo, documentFieldStatsResponse.todo) &&
        Objects.equals(this.sysGeneratedConfirmCorrect, documentFieldStatsResponse.sysGeneratedConfirmCorrect) &&
        Objects.equals(this.rejected, documentFieldStatsResponse.rejected) &&
        Objects.equals(this.userGenerated, documentFieldStatsResponse.userGenerated) &&
        Objects.equals(this.depsOnFields, documentFieldStatsResponse.depsOnFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, title, total, todo, sysGeneratedConfirmCorrect, rejected, userGenerated, depsOnFields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentFieldStatsResponse {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    todo: ").append(toIndentedString(todo)).append("\n");
    sb.append("    sysGeneratedConfirmCorrect: ").append(toIndentedString(sysGeneratedConfirmCorrect)).append("\n");
    sb.append("    rejected: ").append(toIndentedString(rejected)).append("\n");
    sb.append("    userGenerated: ").append(toIndentedString(userGenerated)).append("\n");
    sb.append("    depsOnFields: ").append(toIndentedString(depsOnFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("code");
    openapiFields.add("title");
    openapiFields.add("total");
    openapiFields.add("todo");
    openapiFields.add("sys_generated_confirm_correct");
    openapiFields.add("rejected");
    openapiFields.add("user_generated");
    openapiFields.add("deps_on_fields");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("code");
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("total");
    openapiRequiredFields.add("todo");
    openapiRequiredFields.add("sys_generated_confirm_correct");
    openapiRequiredFields.add("rejected");
    openapiRequiredFields.add("user_generated");
    openapiRequiredFields.add("deps_on_fields");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DocumentFieldStatsResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (DocumentFieldStatsResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in DocumentFieldStatsResponse is not found in the empty JSON string", DocumentFieldStatsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!DocumentFieldStatsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DocumentFieldStatsResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DocumentFieldStatsResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("code") != null && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if (jsonObj.get("title") != null && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("deps_on_fields") != null && !jsonObj.get("deps_on_fields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `deps_on_fields` to be an array in the JSON string but got `%s`", jsonObj.get("deps_on_fields").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DocumentFieldStatsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DocumentFieldStatsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DocumentFieldStatsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DocumentFieldStatsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DocumentFieldStatsResponse>() {
           @Override
           public void write(JsonWriter out, DocumentFieldStatsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DocumentFieldStatsResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DocumentFieldStatsResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DocumentFieldStatsResponse
  * @throws IOException if the JSON string is invalid with respect to DocumentFieldStatsResponse
  */
  public static DocumentFieldStatsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DocumentFieldStatsResponse.class);
  }

 /**
  * Convert an instance of DocumentFieldStatsResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

