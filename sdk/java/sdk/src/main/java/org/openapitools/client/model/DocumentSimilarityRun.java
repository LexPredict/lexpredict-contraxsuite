/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DocumentSimilarityRun
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class DocumentSimilarityRun {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_PROJECT_ID = "project_id";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_FEATURE_SOURCE = "feature_source";
  @SerializedName(SERIALIZED_NAME_FEATURE_SOURCE)
  private String featureSource;

  public static final String SERIALIZED_NAME_UNIT_SOURCE = "unit_source";
  @SerializedName(SERIALIZED_NAME_UNIT_SOURCE)
  private String unitSource;

  public static final String SERIALIZED_NAME_UNIT_TYPE = "unit_type";
  @SerializedName(SERIALIZED_NAME_UNIT_TYPE)
  private String unitType;

  public static final String SERIALIZED_NAME_UNIT_ID = "unit_id";
  @SerializedName(SERIALIZED_NAME_UNIT_ID)
  private Integer unitId;

  public static final String SERIALIZED_NAME_ITEMS_COUNT = "items_count";
  @SerializedName(SERIALIZED_NAME_ITEMS_COUNT)
  private Integer itemsCount;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private Integer createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE = "created_date";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public DocumentSimilarityRun() { 
  }

  
  public DocumentSimilarityRun(
     Integer id, 
     String projectId
  ) {
    this();
    this.id = id;
    this.projectId = projectId;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }




   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProjectId() {
    return projectId;
  }




  public DocumentSimilarityRun featureSource(String featureSource) {
    
    this.featureSource = featureSource;
    return this;
  }

   /**
   * Get featureSource
   * @return featureSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFeatureSource() {
    return featureSource;
  }


  public void setFeatureSource(String featureSource) {
    this.featureSource = featureSource;
  }


  public DocumentSimilarityRun unitSource(String unitSource) {
    
    this.unitSource = unitSource;
    return this;
  }

   /**
   * Get unitSource
   * @return unitSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitSource() {
    return unitSource;
  }


  public void setUnitSource(String unitSource) {
    this.unitSource = unitSource;
  }


  public DocumentSimilarityRun unitType(String unitType) {
    
    this.unitType = unitType;
    return this;
  }

   /**
   * Get unitType
   * @return unitType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitType() {
    return unitType;
  }


  public void setUnitType(String unitType) {
    this.unitType = unitType;
  }


  public DocumentSimilarityRun unitId(Integer unitId) {
    
    this.unitId = unitId;
    return this;
  }

   /**
   * Get unitId
   * minimum: -2147483648
   * maximum: 2147483647
   * @return unitId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUnitId() {
    return unitId;
  }


  public void setUnitId(Integer unitId) {
    this.unitId = unitId;
  }


  public DocumentSimilarityRun itemsCount(Integer itemsCount) {
    
    this.itemsCount = itemsCount;
    return this;
  }

   /**
   * Get itemsCount
   * @return itemsCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getItemsCount() {
    return itemsCount;
  }


  public void setItemsCount(Integer itemsCount) {
    this.itemsCount = itemsCount;
  }


  public DocumentSimilarityRun createdBy(Integer createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(Integer createdBy) {
    this.createdBy = createdBy;
  }


  public DocumentSimilarityRun createdDate(OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentSimilarityRun documentSimilarityRun = (DocumentSimilarityRun) o;
    return Objects.equals(this.id, documentSimilarityRun.id) &&
        Objects.equals(this.projectId, documentSimilarityRun.projectId) &&
        Objects.equals(this.featureSource, documentSimilarityRun.featureSource) &&
        Objects.equals(this.unitSource, documentSimilarityRun.unitSource) &&
        Objects.equals(this.unitType, documentSimilarityRun.unitType) &&
        Objects.equals(this.unitId, documentSimilarityRun.unitId) &&
        Objects.equals(this.itemsCount, documentSimilarityRun.itemsCount) &&
        Objects.equals(this.createdBy, documentSimilarityRun.createdBy) &&
        Objects.equals(this.createdDate, documentSimilarityRun.createdDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, projectId, featureSource, unitSource, unitType, unitId, itemsCount, createdBy, createdDate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentSimilarityRun {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    featureSource: ").append(toIndentedString(featureSource)).append("\n");
    sb.append("    unitSource: ").append(toIndentedString(unitSource)).append("\n");
    sb.append("    unitType: ").append(toIndentedString(unitType)).append("\n");
    sb.append("    unitId: ").append(toIndentedString(unitId)).append("\n");
    sb.append("    itemsCount: ").append(toIndentedString(itemsCount)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("project_id");
    openapiFields.add("feature_source");
    openapiFields.add("unit_source");
    openapiFields.add("unit_type");
    openapiFields.add("unit_id");
    openapiFields.add("items_count");
    openapiFields.add("created_by");
    openapiFields.add("created_date");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("items_count");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DocumentSimilarityRun
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (DocumentSimilarityRun.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in DocumentSimilarityRun is not found in the empty JSON string", DocumentSimilarityRun.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!DocumentSimilarityRun.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DocumentSimilarityRun` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DocumentSimilarityRun.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("project_id") != null && !jsonObj.get("project_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `project_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("project_id").toString()));
      }
      if (jsonObj.get("feature_source") != null && !jsonObj.get("feature_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feature_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feature_source").toString()));
      }
      if (jsonObj.get("unit_source") != null && !jsonObj.get("unit_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unit_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unit_source").toString()));
      }
      if (jsonObj.get("unit_type") != null && !jsonObj.get("unit_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unit_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unit_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DocumentSimilarityRun.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DocumentSimilarityRun' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DocumentSimilarityRun> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DocumentSimilarityRun.class));

       return (TypeAdapter<T>) new TypeAdapter<DocumentSimilarityRun>() {
           @Override
           public void write(JsonWriter out, DocumentSimilarityRun value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DocumentSimilarityRun read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DocumentSimilarityRun given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DocumentSimilarityRun
  * @throws IOException if the JSON string is invalid with respect to DocumentSimilarityRun
  */
  public static DocumentSimilarityRun fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DocumentSimilarityRun.class);
  }

 /**
  * Convert an instance of DocumentSimilarityRun to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

