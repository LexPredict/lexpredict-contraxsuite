/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PartySimilarityForm
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class PartySimilarityForm {
  public static final String SERIALIZED_NAME_RUN_NAME = "run_name";
  @SerializedName(SERIALIZED_NAME_RUN_NAME)
  private String runName;

  public static final String SERIALIZED_NAME_CASE_SENSITIVE = "case_sensitive";
  @SerializedName(SERIALIZED_NAME_CASE_SENSITIVE)
  private Boolean caseSensitive;

  /**
   * Gets or Sets similarityType
   */
  @JsonAdapter(SimilarityTypeEnum.Adapter.class)
  public enum SimilarityTypeEnum {
    SET_RATIO("token_set_ratio"),
    
    SORT_RATIO("token_sort_ratio");

    private String value;

    SimilarityTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SimilarityTypeEnum fromValue(String value) {
      for (SimilarityTypeEnum b : SimilarityTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SimilarityTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SimilarityTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SimilarityTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SimilarityTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SIMILARITY_TYPE = "similarity_type";
  @SerializedName(SERIALIZED_NAME_SIMILARITY_TYPE)
  private SimilarityTypeEnum similarityType = SimilarityTypeEnum.SET_RATIO;

  public static final String SERIALIZED_NAME_SIMILARITY_THRESHOLD = "similarity_threshold";
  @SerializedName(SERIALIZED_NAME_SIMILARITY_THRESHOLD)
  private Integer similarityThreshold = 90;

  public static final String SERIALIZED_NAME_DELETE = "delete";
  @SerializedName(SERIALIZED_NAME_DELETE)
  private Boolean delete;

  public PartySimilarityForm() { 
  }

  public PartySimilarityForm runName(String runName) {
    
    this.runName = runName;
    return this;
  }

   /**
   * Get runName
   * @return runName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getRunName() {
    return runName;
  }


  public void setRunName(String runName) {
    this.runName = runName;
  }


  public PartySimilarityForm caseSensitive(Boolean caseSensitive) {
    
    this.caseSensitive = caseSensitive;
    return this;
  }

   /**
   * Get caseSensitive
   * @return caseSensitive
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCaseSensitive() {
    return caseSensitive;
  }


  public void setCaseSensitive(Boolean caseSensitive) {
    this.caseSensitive = caseSensitive;
  }


  public PartySimilarityForm similarityType(SimilarityTypeEnum similarityType) {
    
    this.similarityType = similarityType;
    return this;
  }

   /**
   * Get similarityType
   * @return similarityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SimilarityTypeEnum getSimilarityType() {
    return similarityType;
  }


  public void setSimilarityType(SimilarityTypeEnum similarityType) {
    this.similarityType = similarityType;
  }


  public PartySimilarityForm similarityThreshold(Integer similarityThreshold) {
    
    this.similarityThreshold = similarityThreshold;
    return this;
  }

   /**
   * Get similarityThreshold
   * @return similarityThreshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSimilarityThreshold() {
    return similarityThreshold;
  }


  public void setSimilarityThreshold(Integer similarityThreshold) {
    this.similarityThreshold = similarityThreshold;
  }


  public PartySimilarityForm delete(Boolean delete) {
    
    this.delete = delete;
    return this;
  }

   /**
   * Get delete
   * @return delete
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getDelete() {
    return delete;
  }


  public void setDelete(Boolean delete) {
    this.delete = delete;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartySimilarityForm partySimilarityForm = (PartySimilarityForm) o;
    return Objects.equals(this.runName, partySimilarityForm.runName) &&
        Objects.equals(this.caseSensitive, partySimilarityForm.caseSensitive) &&
        Objects.equals(this.similarityType, partySimilarityForm.similarityType) &&
        Objects.equals(this.similarityThreshold, partySimilarityForm.similarityThreshold) &&
        Objects.equals(this.delete, partySimilarityForm.delete);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(runName, caseSensitive, similarityType, similarityThreshold, delete);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartySimilarityForm {\n");
    sb.append("    runName: ").append(toIndentedString(runName)).append("\n");
    sb.append("    caseSensitive: ").append(toIndentedString(caseSensitive)).append("\n");
    sb.append("    similarityType: ").append(toIndentedString(similarityType)).append("\n");
    sb.append("    similarityThreshold: ").append(toIndentedString(similarityThreshold)).append("\n");
    sb.append("    delete: ").append(toIndentedString(delete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("run_name");
    openapiFields.add("case_sensitive");
    openapiFields.add("similarity_type");
    openapiFields.add("similarity_threshold");
    openapiFields.add("delete");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("run_name");
    openapiRequiredFields.add("case_sensitive");
    openapiRequiredFields.add("delete");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PartySimilarityForm
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (PartySimilarityForm.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in PartySimilarityForm is not found in the empty JSON string", PartySimilarityForm.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PartySimilarityForm.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PartySimilarityForm` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PartySimilarityForm.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("run_name") != null && !jsonObj.get("run_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `run_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("run_name").toString()));
      }
      if (jsonObj.get("similarity_type") != null && !jsonObj.get("similarity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `similarity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("similarity_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PartySimilarityForm.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PartySimilarityForm' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PartySimilarityForm> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PartySimilarityForm.class));

       return (TypeAdapter<T>) new TypeAdapter<PartySimilarityForm>() {
           @Override
           public void write(JsonWriter out, PartySimilarityForm value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PartySimilarityForm read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PartySimilarityForm given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PartySimilarityForm
  * @throws IOException if the JSON string is invalid with respect to PartySimilarityForm
  */
  public static PartySimilarityForm fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PartySimilarityForm.class);
  }

 /**
  * Convert an instance of PartySimilarityForm to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

