/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ProjectDocumentSimilarityResponseDataInner;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProjectDocumentSimilarityResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class ProjectDocumentSimilarityResponse {
  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private List<ProjectDocumentSimilarityResponseDataInner> data = new ArrayList<>();

  public static final String SERIALIZED_NAME_DOCUMENT_A_ID = "document_a_id";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_A_ID)
  private Integer documentAId;

  public static final String SERIALIZED_NAME_DOCUMENT_A_NAME = "document_a_name";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_A_NAME)
  private String documentAName;

  public static final String SERIALIZED_NAME_TOTAL_RECORDS = "total_records";
  @SerializedName(SERIALIZED_NAME_TOTAL_RECORDS)
  private Integer totalRecords;

  public ProjectDocumentSimilarityResponse() { 
  }

  public ProjectDocumentSimilarityResponse data(List<ProjectDocumentSimilarityResponseDataInner> data) {
    
    this.data = data;
    return this;
  }

  public ProjectDocumentSimilarityResponse addDataItem(ProjectDocumentSimilarityResponseDataInner dataItem) {
    this.data.add(dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<ProjectDocumentSimilarityResponseDataInner> getData() {
    return data;
  }


  public void setData(List<ProjectDocumentSimilarityResponseDataInner> data) {
    this.data = data;
  }


  public ProjectDocumentSimilarityResponse documentAId(Integer documentAId) {
    
    this.documentAId = documentAId;
    return this;
  }

   /**
   * Get documentAId
   * @return documentAId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDocumentAId() {
    return documentAId;
  }


  public void setDocumentAId(Integer documentAId) {
    this.documentAId = documentAId;
  }


  public ProjectDocumentSimilarityResponse documentAName(String documentAName) {
    
    this.documentAName = documentAName;
    return this;
  }

   /**
   * Get documentAName
   * @return documentAName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentAName() {
    return documentAName;
  }


  public void setDocumentAName(String documentAName) {
    this.documentAName = documentAName;
  }


  public ProjectDocumentSimilarityResponse totalRecords(Integer totalRecords) {
    
    this.totalRecords = totalRecords;
    return this;
  }

   /**
   * Get totalRecords
   * @return totalRecords
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTotalRecords() {
    return totalRecords;
  }


  public void setTotalRecords(Integer totalRecords) {
    this.totalRecords = totalRecords;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectDocumentSimilarityResponse projectDocumentSimilarityResponse = (ProjectDocumentSimilarityResponse) o;
    return Objects.equals(this.data, projectDocumentSimilarityResponse.data) &&
        Objects.equals(this.documentAId, projectDocumentSimilarityResponse.documentAId) &&
        Objects.equals(this.documentAName, projectDocumentSimilarityResponse.documentAName) &&
        Objects.equals(this.totalRecords, projectDocumentSimilarityResponse.totalRecords);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, documentAId, documentAName, totalRecords);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectDocumentSimilarityResponse {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    documentAId: ").append(toIndentedString(documentAId)).append("\n");
    sb.append("    documentAName: ").append(toIndentedString(documentAName)).append("\n");
    sb.append("    totalRecords: ").append(toIndentedString(totalRecords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("data");
    openapiFields.add("document_a_id");
    openapiFields.add("document_a_name");
    openapiFields.add("total_records");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("data");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProjectDocumentSimilarityResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ProjectDocumentSimilarityResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProjectDocumentSimilarityResponse is not found in the empty JSON string", ProjectDocumentSimilarityResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ProjectDocumentSimilarityResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProjectDocumentSimilarityResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ProjectDocumentSimilarityResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      JsonArray jsonArraydata = jsonObj.getAsJsonArray("data");
      if (jsonArraydata != null) {
        // ensure the json data is an array
        if (!jsonObj.get("data").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `data` to be an array in the JSON string but got `%s`", jsonObj.get("data").toString()));
        }

        // validate the optional field `data` (array)
        for (int i = 0; i < jsonArraydata.size(); i++) {
          ProjectDocumentSimilarityResponseDataInner.validateJsonObject(jsonArraydata.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("document_a_name") != null && !jsonObj.get("document_a_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document_a_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document_a_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProjectDocumentSimilarityResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProjectDocumentSimilarityResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProjectDocumentSimilarityResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProjectDocumentSimilarityResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ProjectDocumentSimilarityResponse>() {
           @Override
           public void write(JsonWriter out, ProjectDocumentSimilarityResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProjectDocumentSimilarityResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProjectDocumentSimilarityResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProjectDocumentSimilarityResponse
  * @throws IOException if the JSON string is invalid with respect to ProjectDocumentSimilarityResponse
  */
  public static ProjectDocumentSimilarityResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProjectDocumentSimilarityResponse.class);
  }

 /**
  * Convert an instance of ProjectDocumentSimilarityResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

