/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ProjectDetailOwnersDataInner;
import org.openapitools.client.model.ProjectListStatusData;
import org.openapitools.client.model.ProjectListTypeData;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProjectDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-16T11:43:26.677726+03:00[Europe/Moscow]")
public class ProjectDetail {
  public static final String SERIALIZED_NAME_PK = "pk";
  @SerializedName(SERIALIZED_NAME_PK)
  private Integer pk;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CREATED_DATE = "created_date";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_CREATED_BY_NAME = "created_by_name";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_NAME)
  private String createdByName;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modified_date";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_MODIFIED_BY_NAME = "modified_by_name";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_NAME)
  private String modifiedByName;

  public static final String SERIALIZED_NAME_SEND_EMAIL_NOTIFICATION = "send_email_notification";
  @SerializedName(SERIALIZED_NAME_SEND_EMAIL_NOTIFICATION)
  private Boolean sendEmailNotification;

  public static final String SERIALIZED_NAME_HIDE_CLAUSE_REVIEW = "hide_clause_review";
  @SerializedName(SERIALIZED_NAME_HIDE_CLAUSE_REVIEW)
  private Boolean hideClauseReview;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_STATUS_DATA = "status_data";
  @SerializedName(SERIALIZED_NAME_STATUS_DATA)
  private ProjectListStatusData statusData;

  public static final String SERIALIZED_NAME_OWNERS = "owners";
  @SerializedName(SERIALIZED_NAME_OWNERS)
  private List<Integer> owners = null;

  public static final String SERIALIZED_NAME_OWNERS_DATA = "owners_data";
  @SerializedName(SERIALIZED_NAME_OWNERS_DATA)
  private List<ProjectDetailOwnersDataInner> ownersData = null;

  public static final String SERIALIZED_NAME_REVIEWERS = "reviewers";
  @SerializedName(SERIALIZED_NAME_REVIEWERS)
  private List<Integer> reviewers = null;

  public static final String SERIALIZED_NAME_REVIEWERS_DATA = "reviewers_data";
  @SerializedName(SERIALIZED_NAME_REVIEWERS_DATA)
  private List<ProjectDetailOwnersDataInner> reviewersData = null;

  public static final String SERIALIZED_NAME_SUPER_REVIEWERS = "super_reviewers";
  @SerializedName(SERIALIZED_NAME_SUPER_REVIEWERS)
  private List<Integer> superReviewers = null;

  public static final String SERIALIZED_NAME_SUPER_REVIEWERS_DATA = "super_reviewers_data";
  @SerializedName(SERIALIZED_NAME_SUPER_REVIEWERS_DATA)
  private List<ProjectDetailOwnersDataInner> superReviewersData = null;

  public static final String SERIALIZED_NAME_JUNIOR_REVIEWERS = "junior_reviewers";
  @SerializedName(SERIALIZED_NAME_JUNIOR_REVIEWERS)
  private List<Integer> juniorReviewers = null;

  public static final String SERIALIZED_NAME_JUNIOR_REVIEWERS_DATA = "junior_reviewers_data";
  @SerializedName(SERIALIZED_NAME_JUNIOR_REVIEWERS_DATA)
  private List<ProjectDetailOwnersDataInner> juniorReviewersData = null;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_TYPE_DATA = "type_data";
  @SerializedName(SERIALIZED_NAME_TYPE_DATA)
  private ProjectListTypeData typeData;

  public static final String SERIALIZED_NAME_PROGRESS = "progress";
  @SerializedName(SERIALIZED_NAME_PROGRESS)
  private String progress;

  public static final String SERIALIZED_NAME_USER_PERMISSIONS = "user_permissions";
  @SerializedName(SERIALIZED_NAME_USER_PERMISSIONS)
  private String userPermissions;

  public static final String SERIALIZED_NAME_TERM_TAGS = "term_tags";
  @SerializedName(SERIALIZED_NAME_TERM_TAGS)
  private List<Integer> termTags = null;

  public static final String SERIALIZED_NAME_DOCUMENT_TRANSFORMER = "document_transformer";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_TRANSFORMER)
  private Integer documentTransformer;

  public static final String SERIALIZED_NAME_TEXT_UNIT_TRANSFORMER = "text_unit_transformer";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_TRANSFORMER)
  private Integer textUnitTransformer;

  public static final String SERIALIZED_NAME_COMPANYTYPE_TAGS = "companytype_tags";
  @SerializedName(SERIALIZED_NAME_COMPANYTYPE_TAGS)
  private List<Integer> companytypeTags = null;

  public static final String SERIALIZED_NAME_APP_VARS = "app_vars";
  @SerializedName(SERIALIZED_NAME_APP_VARS)
  private String appVars;

  public static final String SERIALIZED_NAME_DOCUMENT_SIMILARITY_RUN_PARAMS = "document_similarity_run_params";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_SIMILARITY_RUN_PARAMS)
  private String documentSimilarityRunParams;

  public static final String SERIALIZED_NAME_TEXT_UNIT_SIMILARITY_RUN_PARAMS = "text_unit_similarity_run_params";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_SIMILARITY_RUN_PARAMS)
  private String textUnitSimilarityRunParams;

  public static final String SERIALIZED_NAME_DOCUMENT_SIMILARITY_PROCESS_ALLOWED = "document_similarity_process_allowed";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_SIMILARITY_PROCESS_ALLOWED)
  private String documentSimilarityProcessAllowed;

  public static final String SERIALIZED_NAME_TEXT_UNIT_SIMILARITY_PROCESS_ALLOWED = "text_unit_similarity_process_allowed";
  @SerializedName(SERIALIZED_NAME_TEXT_UNIT_SIMILARITY_PROCESS_ALLOWED)
  private String textUnitSimilarityProcessAllowed;

  public ProjectDetail() { 
  }

  
  public ProjectDetail(
     Integer pk, 
     List<ProjectDetailOwnersDataInner> ownersData, 
     List<ProjectDetailOwnersDataInner> reviewersData, 
     List<ProjectDetailOwnersDataInner> superReviewersData, 
     List<ProjectDetailOwnersDataInner> juniorReviewersData, 
     String progress, 
     String userPermissions, 
     String appVars, 
     String documentSimilarityRunParams, 
     String textUnitSimilarityRunParams, 
     String documentSimilarityProcessAllowed, 
     String textUnitSimilarityProcessAllowed
  ) {
    this();
    this.pk = pk;
    this.ownersData = ownersData;
    this.reviewersData = reviewersData;
    this.superReviewersData = superReviewersData;
    this.juniorReviewersData = juniorReviewersData;
    this.progress = progress;
    this.userPermissions = userPermissions;
    this.appVars = appVars;
    this.documentSimilarityRunParams = documentSimilarityRunParams;
    this.textUnitSimilarityRunParams = textUnitSimilarityRunParams;
    this.documentSimilarityProcessAllowed = documentSimilarityProcessAllowed;
    this.textUnitSimilarityProcessAllowed = textUnitSimilarityProcessAllowed;
  }

   /**
   * Get pk
   * @return pk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPk() {
    return pk;
  }




  public ProjectDetail name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ProjectDetail description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ProjectDetail createdDate(OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public ProjectDetail createdByName(String createdByName) {
    
    this.createdByName = createdByName;
    return this;
  }

   /**
   * Get createdByName
   * @return createdByName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCreatedByName() {
    return createdByName;
  }


  public void setCreatedByName(String createdByName) {
    this.createdByName = createdByName;
  }


  public ProjectDetail modifiedDate(OffsetDateTime modifiedDate) {
    
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }


  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public ProjectDetail modifiedByName(String modifiedByName) {
    
    this.modifiedByName = modifiedByName;
    return this;
  }

   /**
   * Get modifiedByName
   * @return modifiedByName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getModifiedByName() {
    return modifiedByName;
  }


  public void setModifiedByName(String modifiedByName) {
    this.modifiedByName = modifiedByName;
  }


  public ProjectDetail sendEmailNotification(Boolean sendEmailNotification) {
    
    this.sendEmailNotification = sendEmailNotification;
    return this;
  }

   /**
   * Get sendEmailNotification
   * @return sendEmailNotification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSendEmailNotification() {
    return sendEmailNotification;
  }


  public void setSendEmailNotification(Boolean sendEmailNotification) {
    this.sendEmailNotification = sendEmailNotification;
  }


  public ProjectDetail hideClauseReview(Boolean hideClauseReview) {
    
    this.hideClauseReview = hideClauseReview;
    return this;
  }

   /**
   * Get hideClauseReview
   * @return hideClauseReview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHideClauseReview() {
    return hideClauseReview;
  }


  public void setHideClauseReview(Boolean hideClauseReview) {
    this.hideClauseReview = hideClauseReview;
  }


  public ProjectDetail status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    this.status = status;
  }


  public ProjectDetail statusData(ProjectListStatusData statusData) {
    
    this.statusData = statusData;
    return this;
  }

   /**
   * Get statusData
   * @return statusData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProjectListStatusData getStatusData() {
    return statusData;
  }


  public void setStatusData(ProjectListStatusData statusData) {
    this.statusData = statusData;
  }


  public ProjectDetail owners(List<Integer> owners) {
    
    this.owners = owners;
    return this;
  }

  public ProjectDetail addOwnersItem(Integer ownersItem) {
    if (this.owners == null) {
      this.owners = new ArrayList<>();
    }
    this.owners.add(ownersItem);
    return this;
  }

   /**
   * Get owners
   * @return owners
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getOwners() {
    return owners;
  }


  public void setOwners(List<Integer> owners) {
    this.owners = owners;
  }


   /**
   * Get ownersData
   * @return ownersData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProjectDetailOwnersDataInner> getOwnersData() {
    return ownersData;
  }




  public ProjectDetail reviewers(List<Integer> reviewers) {
    
    this.reviewers = reviewers;
    return this;
  }

  public ProjectDetail addReviewersItem(Integer reviewersItem) {
    if (this.reviewers == null) {
      this.reviewers = new ArrayList<>();
    }
    this.reviewers.add(reviewersItem);
    return this;
  }

   /**
   * Get reviewers
   * @return reviewers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getReviewers() {
    return reviewers;
  }


  public void setReviewers(List<Integer> reviewers) {
    this.reviewers = reviewers;
  }


   /**
   * Get reviewersData
   * @return reviewersData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProjectDetailOwnersDataInner> getReviewersData() {
    return reviewersData;
  }




  public ProjectDetail superReviewers(List<Integer> superReviewers) {
    
    this.superReviewers = superReviewers;
    return this;
  }

  public ProjectDetail addSuperReviewersItem(Integer superReviewersItem) {
    if (this.superReviewers == null) {
      this.superReviewers = new ArrayList<>();
    }
    this.superReviewers.add(superReviewersItem);
    return this;
  }

   /**
   * Get superReviewers
   * @return superReviewers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getSuperReviewers() {
    return superReviewers;
  }


  public void setSuperReviewers(List<Integer> superReviewers) {
    this.superReviewers = superReviewers;
  }


   /**
   * Get superReviewersData
   * @return superReviewersData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProjectDetailOwnersDataInner> getSuperReviewersData() {
    return superReviewersData;
  }




  public ProjectDetail juniorReviewers(List<Integer> juniorReviewers) {
    
    this.juniorReviewers = juniorReviewers;
    return this;
  }

  public ProjectDetail addJuniorReviewersItem(Integer juniorReviewersItem) {
    if (this.juniorReviewers == null) {
      this.juniorReviewers = new ArrayList<>();
    }
    this.juniorReviewers.add(juniorReviewersItem);
    return this;
  }

   /**
   * Get juniorReviewers
   * @return juniorReviewers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getJuniorReviewers() {
    return juniorReviewers;
  }


  public void setJuniorReviewers(List<Integer> juniorReviewers) {
    this.juniorReviewers = juniorReviewers;
  }


   /**
   * Get juniorReviewersData
   * @return juniorReviewersData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProjectDetailOwnersDataInner> getJuniorReviewersData() {
    return juniorReviewersData;
  }




  public ProjectDetail type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public ProjectDetail typeData(ProjectListTypeData typeData) {
    
    this.typeData = typeData;
    return this;
  }

   /**
   * Get typeData
   * @return typeData
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ProjectListTypeData getTypeData() {
    return typeData;
  }


  public void setTypeData(ProjectListTypeData typeData) {
    this.typeData = typeData;
  }


   /**
   * Get progress
   * @return progress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProgress() {
    return progress;
  }




   /**
   * Get userPermissions
   * @return userPermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserPermissions() {
    return userPermissions;
  }




  public ProjectDetail termTags(List<Integer> termTags) {
    
    this.termTags = termTags;
    return this;
  }

  public ProjectDetail addTermTagsItem(Integer termTagsItem) {
    if (this.termTags == null) {
      this.termTags = new ArrayList<>();
    }
    this.termTags.add(termTagsItem);
    return this;
  }

   /**
   * Get termTags
   * @return termTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getTermTags() {
    return termTags;
  }


  public void setTermTags(List<Integer> termTags) {
    this.termTags = termTags;
  }


  public ProjectDetail documentTransformer(Integer documentTransformer) {
    
    this.documentTransformer = documentTransformer;
    return this;
  }

   /**
   * Get documentTransformer
   * @return documentTransformer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDocumentTransformer() {
    return documentTransformer;
  }


  public void setDocumentTransformer(Integer documentTransformer) {
    this.documentTransformer = documentTransformer;
  }


  public ProjectDetail textUnitTransformer(Integer textUnitTransformer) {
    
    this.textUnitTransformer = textUnitTransformer;
    return this;
  }

   /**
   * Get textUnitTransformer
   * @return textUnitTransformer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTextUnitTransformer() {
    return textUnitTransformer;
  }


  public void setTextUnitTransformer(Integer textUnitTransformer) {
    this.textUnitTransformer = textUnitTransformer;
  }


  public ProjectDetail companytypeTags(List<Integer> companytypeTags) {
    
    this.companytypeTags = companytypeTags;
    return this;
  }

  public ProjectDetail addCompanytypeTagsItem(Integer companytypeTagsItem) {
    if (this.companytypeTags == null) {
      this.companytypeTags = new ArrayList<>();
    }
    this.companytypeTags.add(companytypeTagsItem);
    return this;
  }

   /**
   * Get companytypeTags
   * @return companytypeTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getCompanytypeTags() {
    return companytypeTags;
  }


  public void setCompanytypeTags(List<Integer> companytypeTags) {
    this.companytypeTags = companytypeTags;
  }


   /**
   * Get appVars
   * @return appVars
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppVars() {
    return appVars;
  }




   /**
   * Get documentSimilarityRunParams
   * @return documentSimilarityRunParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentSimilarityRunParams() {
    return documentSimilarityRunParams;
  }




   /**
   * Get textUnitSimilarityRunParams
   * @return textUnitSimilarityRunParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTextUnitSimilarityRunParams() {
    return textUnitSimilarityRunParams;
  }




   /**
   * Get documentSimilarityProcessAllowed
   * @return documentSimilarityProcessAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentSimilarityProcessAllowed() {
    return documentSimilarityProcessAllowed;
  }




   /**
   * Get textUnitSimilarityProcessAllowed
   * @return textUnitSimilarityProcessAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTextUnitSimilarityProcessAllowed() {
    return textUnitSimilarityProcessAllowed;
  }





  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectDetail projectDetail = (ProjectDetail) o;
    return Objects.equals(this.pk, projectDetail.pk) &&
        Objects.equals(this.name, projectDetail.name) &&
        Objects.equals(this.description, projectDetail.description) &&
        Objects.equals(this.createdDate, projectDetail.createdDate) &&
        Objects.equals(this.createdByName, projectDetail.createdByName) &&
        Objects.equals(this.modifiedDate, projectDetail.modifiedDate) &&
        Objects.equals(this.modifiedByName, projectDetail.modifiedByName) &&
        Objects.equals(this.sendEmailNotification, projectDetail.sendEmailNotification) &&
        Objects.equals(this.hideClauseReview, projectDetail.hideClauseReview) &&
        Objects.equals(this.status, projectDetail.status) &&
        Objects.equals(this.statusData, projectDetail.statusData) &&
        Objects.equals(this.owners, projectDetail.owners) &&
        Objects.equals(this.ownersData, projectDetail.ownersData) &&
        Objects.equals(this.reviewers, projectDetail.reviewers) &&
        Objects.equals(this.reviewersData, projectDetail.reviewersData) &&
        Objects.equals(this.superReviewers, projectDetail.superReviewers) &&
        Objects.equals(this.superReviewersData, projectDetail.superReviewersData) &&
        Objects.equals(this.juniorReviewers, projectDetail.juniorReviewers) &&
        Objects.equals(this.juniorReviewersData, projectDetail.juniorReviewersData) &&
        Objects.equals(this.type, projectDetail.type) &&
        Objects.equals(this.typeData, projectDetail.typeData) &&
        Objects.equals(this.progress, projectDetail.progress) &&
        Objects.equals(this.userPermissions, projectDetail.userPermissions) &&
        Objects.equals(this.termTags, projectDetail.termTags) &&
        Objects.equals(this.documentTransformer, projectDetail.documentTransformer) &&
        Objects.equals(this.textUnitTransformer, projectDetail.textUnitTransformer) &&
        Objects.equals(this.companytypeTags, projectDetail.companytypeTags) &&
        Objects.equals(this.appVars, projectDetail.appVars) &&
        Objects.equals(this.documentSimilarityRunParams, projectDetail.documentSimilarityRunParams) &&
        Objects.equals(this.textUnitSimilarityRunParams, projectDetail.textUnitSimilarityRunParams) &&
        Objects.equals(this.documentSimilarityProcessAllowed, projectDetail.documentSimilarityProcessAllowed) &&
        Objects.equals(this.textUnitSimilarityProcessAllowed, projectDetail.textUnitSimilarityProcessAllowed);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(pk, name, description, createdDate, createdByName, modifiedDate, modifiedByName, sendEmailNotification, hideClauseReview, status, statusData, owners, ownersData, reviewers, reviewersData, superReviewers, superReviewersData, juniorReviewers, juniorReviewersData, type, typeData, progress, userPermissions, termTags, documentTransformer, textUnitTransformer, companytypeTags, appVars, documentSimilarityRunParams, textUnitSimilarityRunParams, documentSimilarityProcessAllowed, textUnitSimilarityProcessAllowed);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectDetail {\n");
    sb.append("    pk: ").append(toIndentedString(pk)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdByName: ").append(toIndentedString(createdByName)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedByName: ").append(toIndentedString(modifiedByName)).append("\n");
    sb.append("    sendEmailNotification: ").append(toIndentedString(sendEmailNotification)).append("\n");
    sb.append("    hideClauseReview: ").append(toIndentedString(hideClauseReview)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusData: ").append(toIndentedString(statusData)).append("\n");
    sb.append("    owners: ").append(toIndentedString(owners)).append("\n");
    sb.append("    ownersData: ").append(toIndentedString(ownersData)).append("\n");
    sb.append("    reviewers: ").append(toIndentedString(reviewers)).append("\n");
    sb.append("    reviewersData: ").append(toIndentedString(reviewersData)).append("\n");
    sb.append("    superReviewers: ").append(toIndentedString(superReviewers)).append("\n");
    sb.append("    superReviewersData: ").append(toIndentedString(superReviewersData)).append("\n");
    sb.append("    juniorReviewers: ").append(toIndentedString(juniorReviewers)).append("\n");
    sb.append("    juniorReviewersData: ").append(toIndentedString(juniorReviewersData)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeData: ").append(toIndentedString(typeData)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    userPermissions: ").append(toIndentedString(userPermissions)).append("\n");
    sb.append("    termTags: ").append(toIndentedString(termTags)).append("\n");
    sb.append("    documentTransformer: ").append(toIndentedString(documentTransformer)).append("\n");
    sb.append("    textUnitTransformer: ").append(toIndentedString(textUnitTransformer)).append("\n");
    sb.append("    companytypeTags: ").append(toIndentedString(companytypeTags)).append("\n");
    sb.append("    appVars: ").append(toIndentedString(appVars)).append("\n");
    sb.append("    documentSimilarityRunParams: ").append(toIndentedString(documentSimilarityRunParams)).append("\n");
    sb.append("    textUnitSimilarityRunParams: ").append(toIndentedString(textUnitSimilarityRunParams)).append("\n");
    sb.append("    documentSimilarityProcessAllowed: ").append(toIndentedString(documentSimilarityProcessAllowed)).append("\n");
    sb.append("    textUnitSimilarityProcessAllowed: ").append(toIndentedString(textUnitSimilarityProcessAllowed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pk");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("created_date");
    openapiFields.add("created_by_name");
    openapiFields.add("modified_date");
    openapiFields.add("modified_by_name");
    openapiFields.add("send_email_notification");
    openapiFields.add("hide_clause_review");
    openapiFields.add("status");
    openapiFields.add("status_data");
    openapiFields.add("owners");
    openapiFields.add("owners_data");
    openapiFields.add("reviewers");
    openapiFields.add("reviewers_data");
    openapiFields.add("super_reviewers");
    openapiFields.add("super_reviewers_data");
    openapiFields.add("junior_reviewers");
    openapiFields.add("junior_reviewers_data");
    openapiFields.add("type");
    openapiFields.add("type_data");
    openapiFields.add("progress");
    openapiFields.add("user_permissions");
    openapiFields.add("term_tags");
    openapiFields.add("document_transformer");
    openapiFields.add("text_unit_transformer");
    openapiFields.add("companytype_tags");
    openapiFields.add("app_vars");
    openapiFields.add("document_similarity_run_params");
    openapiFields.add("text_unit_similarity_run_params");
    openapiFields.add("document_similarity_process_allowed");
    openapiFields.add("text_unit_similarity_process_allowed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("created_by_name");
    openapiRequiredFields.add("modified_by_name");
    openapiRequiredFields.add("type_data");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProjectDetail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ProjectDetail.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProjectDetail is not found in the empty JSON string", ProjectDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ProjectDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProjectDetail` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ProjectDetail.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("created_by_name") != null && !jsonObj.get("created_by_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_by_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_by_name").toString()));
      }
      if (jsonObj.get("modified_by_name") != null && !jsonObj.get("modified_by_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modified_by_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modified_by_name").toString()));
      }
      // validate the optional field `status_data`
      if (jsonObj.getAsJsonObject("status_data") != null) {
        ProjectListStatusData.validateJsonObject(jsonObj.getAsJsonObject("status_data"));
      }
      // ensure the json data is an array
      if (jsonObj.get("owners") != null && !jsonObj.get("owners").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `owners` to be an array in the JSON string but got `%s`", jsonObj.get("owners").toString()));
      }
      JsonArray jsonArrayownersData = jsonObj.getAsJsonArray("owners_data");
      if (jsonArrayownersData != null) {
        // ensure the json data is an array
        if (!jsonObj.get("owners_data").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `owners_data` to be an array in the JSON string but got `%s`", jsonObj.get("owners_data").toString()));
        }

        // validate the optional field `owners_data` (array)
        for (int i = 0; i < jsonArrayownersData.size(); i++) {
          ProjectDetailOwnersDataInner.validateJsonObject(jsonArrayownersData.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("reviewers") != null && !jsonObj.get("reviewers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `reviewers` to be an array in the JSON string but got `%s`", jsonObj.get("reviewers").toString()));
      }
      JsonArray jsonArrayreviewersData = jsonObj.getAsJsonArray("reviewers_data");
      if (jsonArrayreviewersData != null) {
        // ensure the json data is an array
        if (!jsonObj.get("reviewers_data").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `reviewers_data` to be an array in the JSON string but got `%s`", jsonObj.get("reviewers_data").toString()));
        }

        // validate the optional field `reviewers_data` (array)
        for (int i = 0; i < jsonArrayreviewersData.size(); i++) {
          ProjectDetailOwnersDataInner.validateJsonObject(jsonArrayreviewersData.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("super_reviewers") != null && !jsonObj.get("super_reviewers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `super_reviewers` to be an array in the JSON string but got `%s`", jsonObj.get("super_reviewers").toString()));
      }
      JsonArray jsonArraysuperReviewersData = jsonObj.getAsJsonArray("super_reviewers_data");
      if (jsonArraysuperReviewersData != null) {
        // ensure the json data is an array
        if (!jsonObj.get("super_reviewers_data").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `super_reviewers_data` to be an array in the JSON string but got `%s`", jsonObj.get("super_reviewers_data").toString()));
        }

        // validate the optional field `super_reviewers_data` (array)
        for (int i = 0; i < jsonArraysuperReviewersData.size(); i++) {
          ProjectDetailOwnersDataInner.validateJsonObject(jsonArraysuperReviewersData.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("junior_reviewers") != null && !jsonObj.get("junior_reviewers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `junior_reviewers` to be an array in the JSON string but got `%s`", jsonObj.get("junior_reviewers").toString()));
      }
      JsonArray jsonArrayjuniorReviewersData = jsonObj.getAsJsonArray("junior_reviewers_data");
      if (jsonArrayjuniorReviewersData != null) {
        // ensure the json data is an array
        if (!jsonObj.get("junior_reviewers_data").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `junior_reviewers_data` to be an array in the JSON string but got `%s`", jsonObj.get("junior_reviewers_data").toString()));
        }

        // validate the optional field `junior_reviewers_data` (array)
        for (int i = 0; i < jsonArrayjuniorReviewersData.size(); i++) {
          ProjectDetailOwnersDataInner.validateJsonObject(jsonArrayjuniorReviewersData.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type_data`
      if (jsonObj.getAsJsonObject("type_data") != null) {
        ProjectListTypeData.validateJsonObject(jsonObj.getAsJsonObject("type_data"));
      }
      if (jsonObj.get("progress") != null && !jsonObj.get("progress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `progress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("progress").toString()));
      }
      if (jsonObj.get("user_permissions") != null && !jsonObj.get("user_permissions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_permissions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_permissions").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("term_tags") != null && !jsonObj.get("term_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `term_tags` to be an array in the JSON string but got `%s`", jsonObj.get("term_tags").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("companytype_tags") != null && !jsonObj.get("companytype_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `companytype_tags` to be an array in the JSON string but got `%s`", jsonObj.get("companytype_tags").toString()));
      }
      if (jsonObj.get("app_vars") != null && !jsonObj.get("app_vars").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app_vars` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app_vars").toString()));
      }
      if (jsonObj.get("document_similarity_run_params") != null && !jsonObj.get("document_similarity_run_params").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document_similarity_run_params` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document_similarity_run_params").toString()));
      }
      if (jsonObj.get("text_unit_similarity_run_params") != null && !jsonObj.get("text_unit_similarity_run_params").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_unit_similarity_run_params` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_unit_similarity_run_params").toString()));
      }
      if (jsonObj.get("document_similarity_process_allowed") != null && !jsonObj.get("document_similarity_process_allowed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document_similarity_process_allowed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document_similarity_process_allowed").toString()));
      }
      if (jsonObj.get("text_unit_similarity_process_allowed") != null && !jsonObj.get("text_unit_similarity_process_allowed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_unit_similarity_process_allowed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_unit_similarity_process_allowed").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProjectDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProjectDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProjectDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProjectDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<ProjectDetail>() {
           @Override
           public void write(JsonWriter out, ProjectDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProjectDetail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProjectDetail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProjectDetail
  * @throws IOException if the JSON string is invalid with respect to ProjectDetail
  */
  public static ProjectDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProjectDetail.class);
  }

 /**
  * Convert an instance of ProjectDetail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

