/*
 * Contraxsuite API
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.DocumentFieldListCategory;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for DocumentTypeDetailFieldsDataInner
 */
public class DocumentTypeDetailFieldsDataInnerTest {
    private final DocumentTypeDetailFieldsDataInner model = new DocumentTypeDetailFieldsDataInner();

    /**
     * Model tests for DocumentTypeDetailFieldsDataInner
     */
    @Test
    public void testDocumentTypeDetailFieldsDataInner() {
        // TODO: test DocumentTypeDetailFieldsDataInner
    }

    /**
     * Test the property 'uid'
     */
    @Test
    public void uidTest() {
        // TODO: test uid
    }

    /**
     * Test the property 'documentType'
     */
    @Test
    public void documentTypeTest() {
        // TODO: test documentType
    }

    /**
     * Test the property 'documentTypeTitle'
     */
    @Test
    public void documentTypeTitleTest() {
        // TODO: test documentTypeTitle
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'longCode'
     */
    @Test
    public void longCodeTest() {
        // TODO: test longCode
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'textUnitType'
     */
    @Test
    public void textUnitTypeTest() {
        // TODO: test textUnitType
    }

    /**
     * Test the property 'valueDetectionStrategy'
     */
    @Test
    public void valueDetectionStrategyTest() {
        // TODO: test valueDetectionStrategy
    }

    /**
     * Test the property 'classifierInitScript'
     */
    @Test
    public void classifierInitScriptTest() {
        // TODO: test classifierInitScript
    }

    /**
     * Test the property 'formula'
     */
    @Test
    public void formulaTest() {
        // TODO: test formula
    }

    /**
     * Test the property 'convertDecimalsToFloatsInFormulaArgs'
     */
    @Test
    public void convertDecimalsToFloatsInFormulaArgsTest() {
        // TODO: test convertDecimalsToFloatsInFormulaArgs
    }

    /**
     * Test the property 'valueRegexp'
     */
    @Test
    public void valueRegexpTest() {
        // TODO: test valueRegexp
    }

    /**
     * Test the property 'dependsOnFields'
     */
    @Test
    public void dependsOnFieldsTest() {
        // TODO: test dependsOnFields
    }

    /**
     * Test the property 'valueDetectionStrategyName'
     */
    @Test
    public void valueDetectionStrategyNameTest() {
        // TODO: test valueDetectionStrategyName
    }

    /**
     * Test the property 'confidence'
     */
    @Test
    public void confidenceTest() {
        // TODO: test confidence
    }

    /**
     * Test the property 'requiresTextAnnotations'
     */
    @Test
    public void requiresTextAnnotationsTest() {
        // TODO: test requiresTextAnnotations
    }

    /**
     * Test the property 'readOnly'
     */
    @Test
    public void readOnlyTest() {
        // TODO: test readOnly
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'family'
     */
    @Test
    public void familyTest() {
        // TODO: test family
    }

    /**
     * Test the property 'defaultValue'
     */
    @Test
    public void defaultValueTest() {
        // TODO: test defaultValue
    }

    /**
     * Test the property 'choices'
     */
    @Test
    public void choicesTest() {
        // TODO: test choices
    }

    /**
     * Test the property 'allowValuesNotSpecifiedInChoices'
     */
    @Test
    public void allowValuesNotSpecifiedInChoicesTest() {
        // TODO: test allowValuesNotSpecifiedInChoices
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'trainingFinished'
     */
    @Test
    public void trainingFinishedTest() {
        // TODO: test trainingFinished
    }

    /**
     * Test the property 'dirty'
     */
    @Test
    public void dirtyTest() {
        // TODO: test dirty
    }

    /**
     * Test the property 'order'
     */
    @Test
    public void orderTest() {
        // TODO: test order
    }

    /**
     * Test the property 'trainedAfterDocumentsNumber'
     */
    @Test
    public void trainedAfterDocumentsNumberTest() {
        // TODO: test trainedAfterDocumentsNumber
    }

    /**
     * Test the property 'hiddenAlways'
     */
    @Test
    public void hiddenAlwaysTest() {
        // TODO: test hiddenAlways
    }

    /**
     * Test the property 'hideUntilPython'
     */
    @Test
    public void hideUntilPythonTest() {
        // TODO: test hideUntilPython
    }

    /**
     * Test the property 'hideUntilJs'
     */
    @Test
    public void hideUntilJsTest() {
        // TODO: test hideUntilJs
    }

    /**
     * Test the property 'isValueDetectionStrategyDisabled'
     */
    @Test
    public void isValueDetectionStrategyDisabledTest() {
        // TODO: test isValueDetectionStrategyDisabled
    }

    /**
     * Test the property 'displayYesNo'
     */
    @Test
    public void displayYesNoTest() {
        // TODO: test displayYesNo
    }

    /**
     * Test the property 'valueAware'
     */
    @Test
    public void valueAwareTest() {
        // TODO: test valueAware
    }

    /**
     * Test the property 'createdByName'
     */
    @Test
    public void createdByNameTest() {
        // TODO: test createdByName
    }

    /**
     * Test the property 'modifiedByName'
     */
    @Test
    public void modifiedByNameTest() {
        // TODO: test modifiedByName
    }

    /**
     * Test the property 'createdDate'
     */
    @Test
    public void createdDateTest() {
        // TODO: test createdDate
    }

    /**
     * Test the property 'modifiedDate'
     */
    @Test
    public void modifiedDateTest() {
        // TODO: test modifiedDate
    }

    /**
     * Test the property 'vectorizerStopWords'
     */
    @Test
    public void vectorizerStopWordsTest() {
        // TODO: test vectorizerStopWords
    }

    /**
     * Test the property 'unsureChoiceValue'
     */
    @Test
    public void unsureChoiceValueTest() {
        // TODO: test unsureChoiceValue
    }

    /**
     * Test the property 'unsureThresholdsByValue'
     */
    @Test
    public void unsureThresholdsByValueTest() {
        // TODO: test unsureThresholdsByValue
    }

    /**
     * Test the property 'mlflowModelUri'
     */
    @Test
    public void mlflowModelUriTest() {
        // TODO: test mlflowModelUri
    }

    /**
     * Test the property 'mlflowDetectOnDocumentLevel'
     */
    @Test
    public void mlflowDetectOnDocumentLevelTest() {
        // TODO: test mlflowDetectOnDocumentLevel
    }

}
