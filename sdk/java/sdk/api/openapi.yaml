openapi: 3.0.2
info:
  description: Contraxsuite API
  title: Contraxsuite API
  version: 2.3.0
servers:
- url: /
security:
- AuthToken: []
paths:
  /api/media-data/{path}/:
    get:
      description: "If directory:\n  action: None: - list directory\n  action: download\
        \ - list directory (TODO - download directory)\n  action: info: - dict(info\
        \ about directory)\nIf file:\n  action: None: - show file\n  action: download\
        \ - download file\n  action: info: - dict(info about directory)\n\n:param\
        \ request:\n:param path: str - relative path in /media directory\n\n:query\
        \ param action: optional str [\"download\", \"info\"]\n:return:"
      operationId: media-data-path:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      - description: Action name
        explode: true
        in: query
        name: action
        required: false
        schema:
          default: download
          enum:
          - info
          - download
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
            '*/*':
              schema:
                format: binary
                type: string
          description: ""
      tags:
      - media_data
      - v1
      x-accepts: application/json
  /api/v1/analyze/document-cluster/:
    get:
      description: Document Cluster List
      operationId: analyze-document-cluster:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentCluster'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/document-cluster/{id}/:
    get:
      description: Retrieve Document Cluster
      operationId: analyze-document-cluster-id:GET
      parameters:
      - description: A unique integer value identifying this document cluster.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCluster'
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update Document Cluster (name)
      operationId: analyze-document-cluster-id:PATCH
      parameters:
      - description: A unique integer value identifying this document cluster.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentClusterUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentClusterUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentClusterUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentClusterUpdate'
          description: ""
      tags:
      - analyze
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update Document Cluster (name)
      operationId: analyze-document-cluster-id:PUT
      parameters:
      - description: A unique integer value identifying this document cluster.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentClusterUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentClusterUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentClusterUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentClusterUpdate'
          description: ""
      tags:
      - analyze
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/analyze/document-similarity/list/:
    get:
      description: Base Document Similarity List
      operationId: analyze-document-similarity-list:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentSimilarity'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/document-transformer/list/:
    get:
      description: MLModel List - document transformers only
      operationId: analyze-document-transformer-list:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Transformer'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/ml-model/list/:
    get:
      description: MLModel List
      operationId: analyze-ml-model-list:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MLModel'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/party-similarity/list/:
    get:
      description: Party Similarity List
      operationId: analyze-party-similarity-list:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PartySimilarity'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/project-document-similarity/list/:
    get:
      description: Project Document Similarity List for ONE document
      operationId: analyze-project-document-similarity-list:GET
      parameters:
      - description: "document b text max length, 0 to get all text"
        explode: true
        in: query
        name: text_max_length
        required: false
        schema:
          type: integer
        style: form
      - description: run id or document id required
        explode: true
        in: query
        name: run_id
        required: false
        schema:
          type: integer
        style: form
      - description: run id or document id required
        explode: true
        in: query
        name: document_id
        required: false
        schema:
          type: integer
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDocumentSimilarityResponse'
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/project-text-unit-similarity/list/:
    get:
      description: Project Text Unit Similarity List for ONE text unit
      operationId: analyze-project-text-unit-similarity-list:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      - description: "text unit b text max length, 0 to get all text"
        explode: true
        in: query
        name: text_max_length
        required: false
        schema:
          type: integer
        style: form
      - description: run id or text unit id required
        explode: true
        in: query
        name: run_id
        required: false
        schema:
          type: integer
        style: form
      - description: run id or last_run or text unit id required
        explode: true
        in: query
        name: last_run
        required: false
        schema:
          type: boolean
        style: form
      - description: run id or text unit id required
        explode: true
        in: query
        name: text_unit_id
        required: false
        schema:
          type: integer
        style: form
      - description: document ID
        explode: true
        in: query
        name: document_id
        required: false
        schema:
          type: integer
        style: form
      - description: start of chosen text block in a Document
        explode: true
        in: query
        name: location_start
        required: false
        schema:
          type: integer
        style: form
      - description: end of chosen text block in a Document
        explode: true
        in: query
        name: location_end
        required: false
        schema:
          type: integer
        style: form
      - description: selection coordinates
        explode: true
        in: query
        name: selection
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTextUnitSimilarity'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
    post:
      description: Project Text Unit Similarity List for ONE text unit
      operationId: analyze-project-text-unit-similarity-list:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimilarProjectTextUnitsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SimilarProjectTextUnitsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SimilarProjectTextUnitsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTextUnitSimilarity'
          description: ""
      tags:
      - analyze
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/analyze/similarity-runs/:
    get:
      description: list Similarity Run objects
      operationId: analyze-similarity-runs:GET
      parameters:
      - description: document / text_unit
        explode: true
        in: query
        name: unit_source
        required: false
        schema:
          type: string
        style: form
      - description: Project ID
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: integer
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SimilarityRun'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/similarity-runs/{id}/:
    delete:
      description: delete Similarity Run object
      operationId: analyze-similarity-runs-id:DELETE
      parameters:
      - description: A unique integer value identifying this similarity run.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: document / text_unit
        explode: true
        in: query
        name: unit_source
        required: false
        schema:
          type: string
        style: form
      - description: Project ID
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: integer
        style: form
      responses:
        "204":
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
    get:
      description: get Similarity Run object
      operationId: analyze-similarity-runs-id:GET
      parameters:
      - description: A unique integer value identifying this similarity run.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: document / text_unit
        explode: true
        in: query
        name: unit_source
        required: false
        schema:
          type: string
        style: form
      - description: Project ID
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: integer
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarityRun'
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/text-unit-classifications/:
    get:
      description: Text Unit Classification List
      operationId: analyze-text-unit-classifications:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TextUnitClassification'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
    post:
      description: Create Text Unit Classification
      operationId: analyze-text-unit-classifications:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextUnitClassificationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TextUnitClassificationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TextUnitClassificationCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextUnitClassificationCreate'
          description: ""
      tags:
      - analyze
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/analyze/text-unit-classifications/{id}/:
    delete:
      description: Delete Text Unit Classification
      operationId: analyze-text-unit-classifications-id:DELETE
      parameters:
      - description: A unique integer value identifying this text unit classification.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
    get:
      description: Retrieve Text Unit Classification
      operationId: analyze-text-unit-classifications-id:GET
      parameters:
      - description: A unique integer value identifying this text unit classification.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextUnitClassification'
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/text-unit-classifier-suggestions/:
    get:
      description: Text Unit Classifier Suggestion List
      operationId: analyze-text-unit-classifier-suggestions:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TextUnitClassifierSuggestion'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/text-unit-classifier-suggestions/{id}/:
    delete:
      description: Delete Text Unit Classifier Suggestion
      operationId: analyze-text-unit-classifier-suggestions-id:DELETE
      parameters:
      - description: A unique integer value identifying this text unit classifier
          suggestion.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
    get:
      description: ""
      operationId: analyze-text-unit-classifier-suggestions-id:GET
      parameters:
      - description: A unique integer value identifying this text unit classifier
          suggestion.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextUnitClassifierSuggestion'
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/text-unit-classifiers/:
    get:
      description: Text Unit Classifier List
      operationId: analyze-text-unit-classifiers:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TextUnitClassifier'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/text-unit-classifiers/{id}/:
    delete:
      description: Delete Text Unit Classifier
      operationId: analyze-text-unit-classifiers-id:DELETE
      parameters:
      - description: A unique integer value identifying this text unit classifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
    get:
      description: ""
      operationId: analyze-text-unit-classifiers-id:GET
      parameters:
      - description: A unique integer value identifying this text unit classifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextUnitClassifier'
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/text-unit-cluster/list/:
    get:
      description: Text Unit Cluster List
      operationId: analyze-text-unit-cluster-list:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TextUnitCluster'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/text-unit-similarity/list/:
    get:
      description: Base Text Unit Similarity List
      operationId: analyze-text-unit-similarity-list:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TextUnitSimilarity'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/text-unit-transformer/list/:
    get:
      description: MLModel List - text unit transformers only
      operationId: analyze-text-unit-transformer-list:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Transformer'
                type: array
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/analyze/typeahead/text-unit-classification/{field_name}/:
    get:
      description: "Typeahead TextUnitClassification\n\n    Kwargs: field_name: [class_name,\
        \ class_value]\n    GET params:\n      - q: str"
      operationId: analyze-typeahead-text-unit-classification-field_name:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: field_name
        required: true
        schema:
          type: string
        style: simple
      - description: Typeahead string
        explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Typeahead'
          description: ""
      tags:
      - analyze
      - v1
      x-accepts: application/json
  /api/v1/common/actions/:
    get:
      description: Action List
      operationId: common-actions:GET
      parameters:
      - description: Project ID
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: integer
        style: form
      - description: Document ID
        explode: true
        in: query
        name: document_id
        required: false
        schema:
          type: integer
        style: form
      - description: Action names
        explode: true
        in: query
        name: view_actions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Action'
                type: array
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
  /api/v1/common/actions/{id}/:
    get:
      description: Retrieve Action
      operationId: common-actions-id:GET
      parameters:
      - description: A unique integer value identifying this action.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Project ID
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: integer
        style: form
      - description: Document ID
        explode: true
        in: query
        name: document_id
        required: false
        schema:
          type: integer
        style: form
      - description: Action names
        explode: true
        in: query
        name: view_actions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
  /api/v1/common/app-variables/:
    get:
      description: "Retrieve App Variable(s)\n\n    Params:\n        - name: str -\
        \ retrieve specific variable"
      operationId: common-app-variables:GET
      parameters:
      - description: App var name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
  /api/v1/common/app-variables/list/:
    get:
      description: ""
      operationId: common-app-variables-list:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppVar'
                type: array
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
  /api/v1/common/app-variables/project/{project_id}/:
    get:
      description: Based on custom AppVar model storage
      operationId: common-app-variables-project-project_id:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectAppVar'
                type: array
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    put:
      description: Based on custom AppVar model storage
      operationId: common-app-variables-project-project_id:PUT
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ProjectAppVar'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ProjectAppVar'
              type: array
          multipart/form-data:
            schema:
              items:
                $ref: '#/components/schemas/ProjectAppVar'
              type: array
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/common/logo/:
    get:
      description: ""
      operationId: common-logo:GET
      parameters:
      - description: Action name
        explode: true
        in: query
        name: action
        required: false
        schema:
          default: download
          enum:
          - info
          - download
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
            '*/*':
              schema:
                format: binary
                type: string
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
  /api/v1/common/media/{path}/:
    get:
      description: "If directory:\n  action: None: - list directory\n  action: download\
        \ - list directory (TODO - download directory)\n  action: info: - dict(info\
        \ about directory)\nIf file:\n  action: None: - show file\n  action: download\
        \ - download file\n  action: info: - dict(info about directory)\n\n:param\
        \ request:\n:param path: str - relative path in /media directory\n\n:query\
        \ param action: optional str [\"download\", \"info\"]\n:return:"
      operationId: common-media-path:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      - description: Action name
        explode: true
        in: query
        name: action
        required: false
        schema:
          default: download
          enum:
          - info
          - download
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
            '*/*':
              schema:
                format: binary
                type: string
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
  /api/v1/common/menu-groups/:
    get:
      description: MenuGroup List
      operationId: common-menu-groups:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MenuGroup'
                type: array
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    post:
      description: Create MenuGroup
      operationId: common-menu-groups:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuGroup'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuGroup'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/common/menu-groups/form-fields/:
    get:
      description: "GET model form fields description to build UI form for an object:\n\
        \n     - field_type: str - CharField, IntegerField, SomeSerializerField -\
        \ i.e. fields from a serializer\n     - ui_element: dict - {type: (\"input\"\
        \ | \"select\" | \"checkbox\" | ...), data_type: (\"string\", \"integer\"\
        , \"date\", ...), ...}\n     - label: str - field label declared in a serializer\
        \ field (default NULL)\n     - field_name: str - field name declared in a\
        \ serializer field (default NULL)\n     - help_text: str - field help text\
        \ declared in a serializer field (default NULL)\n     - required: bool - whether\
        \ field is required\n     - read_only: bool - whether field is read only\n\
        \     - allow_null: bool - whether field is may be null\n     - default: bool\
        \ - default (initial) field value for a new object (default NULL)\n     -\
        \ choices: array - choices to select from [{choice_id1: choice_verbose_name1,\
        \ ....}] (default NULL)"
      operationId: common-menu-groups-form-fields:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
  /api/v1/common/menu-groups/{id}/:
    delete:
      description: Delete MenuGroup
      operationId: common-menu-groups-id:DELETE
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    get:
      description: Retrieve MenuGroup
      operationId: common-menu-groups-id:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuGroup'
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update MenuGroup
      operationId: common-menu-groups-id:PATCH
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuGroup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuGroup'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update MenuGroup
      operationId: common-menu-groups-id:PUT
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuGroup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuGroup'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/common/menu-groups/{id}/form-fields/:
    get:
      description: "GET model form fields description to build UI form for EXISTING\
        \ object:\n\n     - value: any - object field value\n     - field_type: str\
        \ - CharField, IntegerField, SomeSerializerField - i.e. fields from a serializer\n\
        \     - ui_element: dict - {type: (\"input\" | \"select\" | \"checkbox\" |\
        \ ...), data_type: (\"string\", \"integer\", \"date\", ...), ...}\n     -\
        \ label: str - field label declared in a serializer field (default NULL)\n\
        \     - field_name: str - field name declared in a serializer field (default\
        \ NULL)\n     - help_text: str - field help text declared in a serializer\
        \ field (default NULL)\n     - required: bool - whether field is required\n\
        \     - read_only: bool - whether field is read only\n     - allow_null: bool\
        \ - whether field is may be null\n     - default: bool - default (initial)\
        \ field value for a new object (default NULL)\n     - choices: array - choices\
        \ to select from [{choice_id1: choice_verbose_name1, ....}] (default NULL)"
      operationId: common-menu-groups-id-form-fields:GET
      parameters:
      - description: A unique integer value identifying this user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
  /api/v1/common/menu-items/:
    get:
      description: MenuItem List
      operationId: common-menu-items:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MenuItem'
                type: array
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    post:
      description: Create MenuItem
      operationId: common-menu-items:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/common/menu-items/form-fields/:
    get:
      description: "GET model form fields description to build UI form for an object:\n\
        \n     - field_type: str - CharField, IntegerField, SomeSerializerField -\
        \ i.e. fields from a serializer\n     - ui_element: dict - {type: (\"input\"\
        \ | \"select\" | \"checkbox\" | ...), data_type: (\"string\", \"integer\"\
        , \"date\", ...), ...}\n     - label: str - field label declared in a serializer\
        \ field (default NULL)\n     - field_name: str - field name declared in a\
        \ serializer field (default NULL)\n     - help_text: str - field help text\
        \ declared in a serializer field (default NULL)\n     - required: bool - whether\
        \ field is required\n     - read_only: bool - whether field is read only\n\
        \     - allow_null: bool - whether field is may be null\n     - default: bool\
        \ - default (initial) field value for a new object (default NULL)\n     -\
        \ choices: array - choices to select from [{choice_id1: choice_verbose_name1,\
        \ ....}] (default NULL)"
      operationId: common-menu-items-form-fields:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
  /api/v1/common/menu-items/{id}/:
    delete:
      description: Delete MenuItem
      operationId: common-menu-items-id:DELETE
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    get:
      description: Retrieve MenuItem
      operationId: common-menu-items-id:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update MenuItem
      operationId: common-menu-items-id:PATCH
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update MenuItem
      operationId: common-menu-items-id:PUT
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/common/menu-items/{id}/form-fields/:
    get:
      description: "GET model form fields description to build UI form for EXISTING\
        \ object:\n\n     - value: any - object field value\n     - field_type: str\
        \ - CharField, IntegerField, SomeSerializerField - i.e. fields from a serializer\n\
        \     - ui_element: dict - {type: (\"input\" | \"select\" | \"checkbox\" |\
        \ ...), data_type: (\"string\", \"integer\", \"date\", ...), ...}\n     -\
        \ label: str - field label declared in a serializer field (default NULL)\n\
        \     - field_name: str - field name declared in a serializer field (default\
        \ NULL)\n     - help_text: str - field help text declared in a serializer\
        \ field (default NULL)\n     - required: bool - whether field is required\n\
        \     - read_only: bool - whether field is read only\n     - allow_null: bool\
        \ - whether field is may be null\n     - default: bool - default (initial)\
        \ field value for a new object (default NULL)\n     - choices: array - choices\
        \ to select from [{choice_id1: choice_verbose_name1, ....}] (default NULL)"
      operationId: common-menu-items-id-form-fields:GET
      parameters:
      - description: A unique integer value identifying this user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
  /api/v1/common/review-status-groups/:
    get:
      description: ReviewStatusGroup List
      operationId: common-review-status-groups:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReviewStatusGroup'
                type: array
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    post:
      description: Create ReviewStatusGroup
      operationId: common-review-status-groups:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewStatusGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewStatusGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewStatusGroup'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewStatusGroup'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/common/review-status-groups/{id}/:
    delete:
      description: Delete ReviewStatusGroup
      operationId: common-review-status-groups-id:DELETE
      parameters:
      - description: A unique integer value identifying this Review Status Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    get:
      description: Retrieve ReviewStatusGroup
      operationId: common-review-status-groups-id:GET
      parameters:
      - description: A unique integer value identifying this Review Status Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewStatusGroup'
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update ReviewStatusGroup
      operationId: common-review-status-groups-id:PATCH
      parameters:
      - description: A unique integer value identifying this Review Status Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewStatusGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewStatusGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewStatusGroup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewStatusGroup'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update ReviewStatusGroup
      operationId: common-review-status-groups-id:PUT
      parameters:
      - description: A unique integer value identifying this Review Status Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewStatusGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewStatusGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewStatusGroup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewStatusGroup'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/common/review-statuses/:
    get:
      description: ReviewStatus List
      operationId: common-review-statuses:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReviewStatusDetail'
                type: array
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    post:
      description: Create ReviewStatus
      operationId: common-review-statuses:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewStatus'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewStatus'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/common/review-statuses/{id}/:
    delete:
      description: Delete ReviewStatus
      operationId: common-review-statuses-id:DELETE
      parameters:
      - description: A unique integer value identifying this Review Status.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    get:
      description: Retrieve ReviewStatus
      operationId: common-review-statuses-id:GET
      parameters:
      - description: A unique integer value identifying this Review Status.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewStatusDetail'
          description: ""
      tags:
      - common
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update ReviewStatus
      operationId: common-review-statuses-id:PATCH
      parameters:
      - description: A unique integer value identifying this Review Status.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewStatus'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewStatus'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update ReviewStatus
      operationId: common-review-statuses-id:PUT
      parameters:
      - description: A unique integer value identifying this Review Status.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewStatus'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewStatus'
          description: ""
      tags:
      - common
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/annotations/:
    get:
      description: Annotation (Document Field Value) List
      operationId: document-annotations:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Annotation'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    post:
      description: Create Annotation (Document Field Value)
      operationId: document-annotations:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/annotations/annotate/:
    put:
      description: ""
      operationId: document-annotations-annotate:PUT
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationUpdateResponse'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/annotations/batch/:
    put:
      description: "Create batch of annotations\n\n    PUT Params:\n         - operation_uid:\
        \ uid\n         - action: str [\"save\", \"delete\"]\n         - id: int -\
        \ PK of DocumentFieldValue\n         - data: {\"document\": id, \"field\"\
        : uid, \"location_start\": int, \"location_end\": int, \"value\": val}"
      operationId: document-annotations-batch:PUT
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AnnotationBatchRequest'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/AnnotationBatchRequest'
              type: array
          multipart/form-data:
            schema:
              items:
                $ref: '#/components/schemas/AnnotationBatchRequest'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AnnotationBatchResponse'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/annotations/suggest/:
    post:
      description: Suggest field value before creating an annotation.
      operationId: document-annotations-suggest:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationSuggestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationSuggestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationSuggestRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/annotations/{id}/:
    delete:
      description: Delete Annotation (Document Field Value)
      operationId: document-annotations-id:DELETE
      parameters:
      - description: A unique integer value identifying this field annotation.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    get:
      description: Retrieve Annotation (Document Field Value)
      operationId: document-annotations-id:GET
      parameters:
      - description: A unique integer value identifying this field annotation.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    put:
      description: Update Annotation (Document Field Value)
      operationId: document-annotations-id:PUT
      parameters:
      - description: A unique integer value identifying this field annotation.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-field-annotations/:
    get:
      description: Field Annotation List + Field Annotation False Match List
      operationId: document-document-field-annotations:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentFieldAnnotation'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-field-annotations/for-user/:
    get:
      description: ""
      operationId: document-document-field-annotations-for-user:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldAnnotation'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-field-annotations/{uid}/:
    get:
      description: Field Annotation Details (not Field Annotation False Match)
      operationId: document-document-field-annotations-uid:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldAnnotation'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-field-categories/:
    get:
      description: DocumentFieldCategory List
      operationId: document-document-field-categories:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentFieldCategoryList'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    post:
      description: "Create DocumentFieldCategory\n\n    Params:\n        - document_type:\
        \ uid\n        - name: str - Verbose name for field category, max 100 symbols\n\
        \        - order: int\n        - fields: array of field uids"
      operationId: document-document-field-categories:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFieldCategoryCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentFieldCategoryCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentFieldCategoryCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldCategoryCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-field-categories/form-fields/:
    get:
      description: "GET model form fields description to build UI form for an object:\n\
        \n     - field_type: str - CharField, IntegerField, SomeSerializerField -\
        \ i.e. fields from a serializer\n     - ui_element: dict - {type: (\"input\"\
        \ | \"select\" | \"checkbox\" | ...), data_type: (\"string\", \"integer\"\
        , \"date\", ...), ...}\n     - label: str - field label declared in a serializer\
        \ field (default NULL)\n     - field_name: str - field name declared in a\
        \ serializer field (default NULL)\n     - help_text: str - field help text\
        \ declared in a serializer field (default NULL)\n     - required: bool - whether\
        \ field is required\n     - read_only: bool - whether field is read only\n\
        \     - allow_null: bool - whether field is may be null\n     - default: bool\
        \ - default (initial) field value for a new object (default NULL)\n     -\
        \ choices: array - choices to select from [{choice_id1: choice_verbose_name1,\
        \ ....}] (default NULL)"
      operationId: document-document-field-categories-form-fields:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-field-categories/{id}/:
    delete:
      description: Delete DocumentFieldCategory
      operationId: document-document-field-categories-id:DELETE
      parameters:
      - description: A unique integer value identifying this document field category.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    get:
      description: Retrieve DocumentFieldCategory
      operationId: document-document-field-categories-id:GET
      parameters:
      - description: A unique integer value identifying this document field category.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldCategoryList'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update DocumentFieldCategory
      operationId: document-document-field-categories-id:PATCH
      parameters:
      - description: A unique integer value identifying this document field category.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFieldCategoryCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentFieldCategoryCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentFieldCategoryCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldCategoryCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "Update Document Type\n    Params:\n        - document_type: uid\n\
        \        - name: str - Verbose name for field category, max 100 symbols\n\
        \        - order: int\n        - fields: array of field uids"
      operationId: document-document-field-categories-id:PUT
      parameters:
      - description: A unique integer value identifying this document field category.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFieldCategoryCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentFieldCategoryCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentFieldCategoryCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldCategoryCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-field-categories/{id}/form-fields/:
    get:
      description: "GET model form fields description to build UI form for EXISTING\
        \ object:\n\n     - value: any - object field value\n     - field_type: str\
        \ - CharField, IntegerField, SomeSerializerField - i.e. fields from a serializer\n\
        \     - ui_element: dict - {type: (\"input\" | \"select\" | \"checkbox\" |\
        \ ...), data_type: (\"string\", \"integer\", \"date\", ...), ...}\n     -\
        \ label: str - field label declared in a serializer field (default NULL)\n\
        \     - field_name: str - field name declared in a serializer field (default\
        \ NULL)\n     - help_text: str - field help text declared in a serializer\
        \ field (default NULL)\n     - required: bool - whether field is required\n\
        \     - read_only: bool - whether field is read only\n     - allow_null: bool\
        \ - whether field is may be null\n     - default: bool - default (initial)\
        \ field value for a new object (default NULL)\n     - choices: array - choices\
        \ to select from [{choice_id1: choice_verbose_name1, ....}] (default NULL)"
      operationId: document-document-field-categories-id-form-fields:GET
      parameters:
      - description: A unique integer value identifying this user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-field-detectors/:
    get:
      description: Document Field List
      operationId: document-document-field-detectors:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentFieldDetectorDetail'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    post:
      description: "Create Document Field\n    Params:\n        - fields: uid\n  \
        \      - category: str - max 64 symbols (from pre-defined choices)\n     \
        \   - exclude_regexps: str - optional\n        - definition_words: str - optional\n\
        \        - include_regexps: str - optional\n        - regexps_pre_process_lower:\
        \ bool, default=False\n        - detected_value: str - max 256 chars\n   \
        \     - extraction_hint: str - max 30 chars (from pre-defined choices)\n \
        \       - text_part: str - max 30 chars (from pre-defined choices)"
      operationId: document-document-field-detectors:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetectorCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetectorCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetectorCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldDetectorCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-field-detectors/form-fields/:
    get:
      description: "GET model form fields description to build UI form for an object:\n\
        \n     - field_type: str - CharField, IntegerField, SomeSerializerField -\
        \ i.e. fields from a serializer\n     - ui_element: dict - {type: (\"input\"\
        \ | \"select\" | \"checkbox\" | ...), data_type: (\"string\", \"integer\"\
        , \"date\", ...), ...}\n     - label: str - field label declared in a serializer\
        \ field (default NULL)\n     - field_name: str - field name declared in a\
        \ serializer field (default NULL)\n     - help_text: str - field help text\
        \ declared in a serializer field (default NULL)\n     - required: bool - whether\
        \ field is required\n     - read_only: bool - whether field is read only\n\
        \     - allow_null: bool - whether field is may be null\n     - default: bool\
        \ - default (initial) field value for a new object (default NULL)\n     -\
        \ choices: array - choices to select from [{choice_id1: choice_verbose_name1,\
        \ ....}] (default NULL)"
      operationId: document-document-field-detectors-form-fields:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-field-detectors/{uid}/:
    delete:
      description: Delete Document Field
      operationId: document-document-field-detectors-uid:DELETE
      parameters:
      - description: A UUID string identifying this document field detector.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    get:
      description: Retrieve Document Field
      operationId: document-document-field-detectors-uid:GET
      parameters:
      - description: A UUID string identifying this document field detector.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldDetectorDetail'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update Document Field
      operationId: document-document-field-detectors-uid:PATCH
      parameters:
      - description: A UUID string identifying this document field detector.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetectorCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetectorCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetectorCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldDetectorCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "Update Document Field\n    Params:\n        - fields: uid\n  \
        \      - category: str - max 64 symbols (from pre-defined choices)\n     \
        \   - exclude_regexps: str - optional\n        - definition_words: str - optional\n\
        \        - include_regexps: str - optional\n        - regexps_pre_process_lower:\
        \ bool, default=False\n        - detected_value: str - max 256 chars\n   \
        \     - extraction_hint: str - max 30 chars (from pre-defined choices)\n \
        \       - text_part: str - max 30 chars (from pre-defined choices)"
      operationId: document-document-field-detectors-uid:PUT
      parameters:
      - description: A UUID string identifying this document field detector.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetectorCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetectorCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetectorCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldDetectorCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-field-detectors/{uid}/form-fields/:
    get:
      description: "GET model form fields description to build UI form for EXISTING\
        \ object:\n\n     - value: any - object field value\n     - field_type: str\
        \ - CharField, IntegerField, SomeSerializerField - i.e. fields from a serializer\n\
        \     - ui_element: dict - {type: (\"input\" | \"select\" | \"checkbox\" |\
        \ ...), data_type: (\"string\", \"integer\", \"date\", ...), ...}\n     -\
        \ label: str - field label declared in a serializer field (default NULL)\n\
        \     - field_name: str - field name declared in a serializer field (default\
        \ NULL)\n     - help_text: str - field help text declared in a serializer\
        \ field (default NULL)\n     - required: bool - whether field is required\n\
        \     - read_only: bool - whether field is read only\n     - allow_null: bool\
        \ - whether field is may be null\n     - default: bool - default (initial)\
        \ field value for a new object (default NULL)\n     - choices: array - choices\
        \ to select from [{choice_id1: choice_verbose_name1, ....}] (default NULL)"
      operationId: document-document-field-detectors-uid-form-fields:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-field-values/:
    get:
      description: Document Field Value List
      operationId: document-document-field-values:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentFieldValue'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-field-values/{id}/:
    get:
      description: Document Field Value Details
      operationId: document-document-field-values-id:GET
      parameters:
      - description: A unique integer value identifying this field value.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldValue'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-fields/:
    get:
      description: Document Field List
      operationId: document-document-fields:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentFieldList'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    post:
      description: "Create Document Field\n    Params:\n        - document_type: uid\
        \ of Document Type\n        - code: str - Unique Short name for field, max\
        \ 50 symbols, should contain only latin letters, digits, and underscores\n\
        \        - long_code: str - Unique Calculated field, max 150 symbols\n   \
        \     - title: str - Verbose name for field, max 100 symbols\n        - description:\
        \ str - optional\n        - type: str - max 30 symbols (from pre-defined choices)\n\
        \        - text_unit_type: str - (from pre-defined choices) default = sentences\n\
        \        - value_detection_strategy: str - max 50 chars (from pre-defined\
        \ choices)\n        - unsure_choice_value: str - max 256 chars, default=null\n\
        \        - unsure_thresholds_by_value: json\n        - classifier_init_script:\
        \ str\n        - formula: str\n        - convert_decimals_to_floats_in_formula_args:\
        \ bool\n        - depends_on_fields: array of uids, optional\n        - confidence:\
        \ str - max 100 chars (from pre-defined choices)\n        - requires_text_annotations:\
        \ bool, default=True\n        - read_only: bool, default=False\n        -\
        \ category: int - id of DocumentFieldCategory instance\n        - default_value:\
        \ json\n        - choices: str - \\n-separated list of choices\n        -\
        \ allow_values_not_specified_in_choices: bool - default=False\n        - metadata:\
        \ json, optional\n        - training_finished: bool, default=False\n     \
        \   - dirty: bool, default=False\n        - order: integer - default=0\n \
        \       - trained_after_documents_number: integer, default=null\n        -\
        \ hidden_always: bool - default=False\n        - hide_until_python: str, optional\n\
        \        - hide_until_js: str, optional\n        - display_yes_no: bool -\
        \ default=False"
      operationId: document-document-fields:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFieldCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentFieldCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentFieldCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-fields/check_field_formula/:
    post:
      description: "Check formula for new NOT SAVED Document Field\nEither \"request.data.formula\"\
        \ or \"request.data.hide_until_python\" should be filled.\nExpects request\
        \ data arguments:\n- formula: str OR\n- convert_decimals_to_floats_in_formula_args:\
        \ bool\n- hide_until_python: str\n- field_type: str\n- document_type: str\
        \ - document type uid\n- depends_on_fields: List[str] - list of field uids"
      operationId: document-document-fields-check_field_formula:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNewDocumentFieldFormulaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckNewDocumentFieldFormulaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CheckNewDocumentFieldFormulaRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-fields/form-fields/:
    get:
      description: "GET model form fields description to build UI form for an object:\n\
        \n     - field_type: str - CharField, IntegerField, SomeSerializerField -\
        \ i.e. fields from a serializer\n     - ui_element: dict - {type: (\"input\"\
        \ | \"select\" | \"checkbox\" | ...), data_type: (\"string\", \"integer\"\
        , \"date\", ...), ...}\n     - label: str - field label declared in a serializer\
        \ field (default NULL)\n     - field_name: str - field name declared in a\
        \ serializer field (default NULL)\n     - help_text: str - field help text\
        \ declared in a serializer field (default NULL)\n     - required: bool - whether\
        \ field is required\n     - read_only: bool - whether field is read only\n\
        \     - allow_null: bool - whether field is may be null\n     - default: bool\
        \ - default (initial) field value for a new object (default NULL)\n     -\
        \ choices: array - choices to select from [{choice_id1: choice_verbose_name1,\
        \ ....}] (default NULL)"
      operationId: document-document-fields-form-fields:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-fields/stats/:
    get:
      description: ""
      operationId: document-document-fields-stats:GET
      parameters:
      - description: Filter by document type uid
        explode: true
        in: query
        name: document_type_uid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentFieldStatsResponse'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-fields/{uid}/:
    delete:
      description: Delete Document Field
      operationId: document-document-fields-uid:DELETE
      parameters:
      - description: A UUID string identifying this document field.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    get:
      description: Retrieve Document Field
      operationId: document-document-fields-uid:GET
      parameters:
      - description: A UUID string identifying this document field.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldDetail'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update Document Field
      operationId: document-document-fields-uid:PATCH
      parameters:
      - description: A UUID string identifying this document field.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFieldCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentFieldCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentFieldCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update Document Field
      operationId: document-document-fields-uid:PUT
      parameters:
      - description: A UUID string identifying this document field.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFieldCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentFieldCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentFieldCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-fields/{uid}/check_formula/:
    post:
      description: "Check formula for EXISTING Document Field\nExpects request data\
        \ arguments:\n- formula: str OR\n- convert_decimals_to_floats_in_formula_args:\
        \ bool\n- hide_until_python: str\n- field_type: str\n- document_type: str\
        \ - document type uid\n- depends_on_fields: List[str] - list of field uids\n\
        Either \"request.data.formula\" or \"request.data.hide_until_python\" should\
        \ be filled."
      operationId: document-document-fields-uid-check_formula:POST
      parameters:
      - description: A UUID string identifying this document field.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckDocumentFieldFormulaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckDocumentFieldFormulaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CheckDocumentFieldFormulaRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-fields/{uid}/clone/:
    post:
      description: Clone existing DocumentField and its depends_on_fields and detectors
      operationId: document-document-fields-uid-clone:POST
      parameters:
      - description: A UUID string identifying this document field.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneDocumentFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CloneDocumentFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CloneDocumentFieldRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-fields/{uid}/form-fields/:
    get:
      description: "GET model form fields description to build UI form for EXISTING\
        \ object:\n\n     - value: any - object field value\n     - field_type: str\
        \ - CharField, IntegerField, SomeSerializerField - i.e. fields from a serializer\n\
        \     - ui_element: dict - {type: (\"input\" | \"select\" | \"checkbox\" |\
        \ ...), data_type: (\"string\", \"integer\", \"date\", ...), ...}\n     -\
        \ label: str - field label declared in a serializer field (default NULL)\n\
        \     - field_name: str - field name declared in a serializer field (default\
        \ NULL)\n     - help_text: str - field help text declared in a serializer\
        \ field (default NULL)\n     - required: bool - whether field is required\n\
        \     - read_only: bool - whether field is read only\n     - allow_null: bool\
        \ - whether field is may be null\n     - default: bool - default (initial)\
        \ field value for a new object (default NULL)\n     - choices: array - choices\
        \ to select from [{choice_id1: choice_verbose_name1, ....}] (default NULL)"
      operationId: document-document-fields-uid-form-fields:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-fields/{uid}/pre_delete/:
    post:
      description: Get info about related objects for ready-to-delete document type.
      operationId: document-document-fields-uid-pre_delete:POST
      parameters:
      - description: A UUID string identifying this document field.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentFieldDetail'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-notes/:
    get:
      description: Document Note List
      operationId: document-document-notes:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      - description: Filter by project id
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter by document id
        explode: true
        in: query
        name: document_id
        required: false
        schema:
          type: string
        style: form
      - description: For deleted documents as well
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Export data
        explode: true
        in: query
        name: export_to
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentNoteDetail'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    post:
      description: Create Document Note
      operationId: document-document-notes:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentNoteCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentNoteCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentNoteCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentNoteCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-notes/{id}/:
    delete:
      description: Delete Document Note
      operationId: document-document-notes-id:DELETE
      parameters:
      - description: A unique integer value identifying this document note.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    get:
      description: Retrieve Document Note
      operationId: document-document-notes-id:GET
      parameters:
      - description: A unique integer value identifying this document note.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentNoteDetail'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update Document Note
      operationId: document-document-notes-id:PATCH
      parameters:
      - description: A unique integer value identifying this document note.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentNoteDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentNoteDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentNoteDetail'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentNoteDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Fill in "self.action_message" attribute to use later to save Action.message
        (see dispatch method)
      operationId: document-document-notes-id:PUT
      parameters:
      - description: A unique integer value identifying this document note.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentNoteUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentNoteUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentNoteUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentNoteUpdate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-types/:
    get:
      description: Document Type List
      operationId: document-document-types:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentTypeDetail'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    post:
      description: "Create Document Type\n\n    Params:\n        - code: str - Short\
        \ name for field, max 50 symbols\n        - title: str - Verbose name for\
        \ field, max 100 symbols\n        - field_code_aliases: json - Aliases of\
        \ field codes for document import purposes\n        - fields: array of objects\
        \ like [{id: uid, category: id, order: int}, ...]\n        - search_fields:\
        \ array of uids - set of fields to filter/sort on Document list page\n   \
        \     - editor_type: str - max 100 symbols (from pre-defined choices)\n  \
        \      - metadata: json - optional"
      operationId: document-document-types:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTypeCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentTypeCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentTypeCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-types/form-fields/:
    get:
      description: "GET model form fields description to build UI form for an object:\n\
        \n     - field_type: str - CharField, IntegerField, SomeSerializerField -\
        \ i.e. fields from a serializer\n     - ui_element: dict - {type: (\"input\"\
        \ | \"select\" | \"checkbox\" | ...), data_type: (\"string\", \"integer\"\
        , \"date\", ...), ...}\n     - label: str - field label declared in a serializer\
        \ field (default NULL)\n     - field_name: str - field name declared in a\
        \ serializer field (default NULL)\n     - help_text: str - field help text\
        \ declared in a serializer field (default NULL)\n     - required: bool - whether\
        \ field is required\n     - read_only: bool - whether field is read only\n\
        \     - allow_null: bool - whether field is may be null\n     - default: bool\
        \ - default (initial) field value for a new object (default NULL)\n     -\
        \ choices: array - choices to select from [{choice_id1: choice_verbose_name1,\
        \ ....}] (default NULL)"
      operationId: document-document-types-form-fields:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-types/import_doc_type/:
    put:
      description: ""
      operationId: document-document-types-import_doc_type:PUT
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTypeImportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentTypeImportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentTypeImportRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeImportResponse'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-types/scheme_migrations/:
    get:
      description: Get Document Type model versions.
      operationId: document-document-types-scheme_migrations:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-types/stats/:
    get:
      description: ""
      operationId: document-document-types-stats:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentTypeStats'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-types/user_project_types/:
    get:
      description: ""
      operationId: document-document-types-user_project_types:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeDetail'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-types/{uid}/:
    delete:
      description: Delete Document Type
      operationId: document-document-types-uid:DELETE
      parameters:
      - description: A UUID string identifying this document type.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    get:
      description: Retrieve Document Type
      operationId: document-document-types-uid:GET
      parameters:
      - description: A UUID string identifying this document type.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeDetail'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update Document Type
      operationId: document-document-types-uid:PATCH
      parameters:
      - description: A UUID string identifying this document type.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTypeCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentTypeCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentTypeCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Fill in "self.action_message" attribute to use later to save Action.message
        (see dispatch method)
      operationId: document-document-types-uid:PUT
      parameters:
      - description: A UUID string identifying this document type.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTypeCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentTypeCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentTypeCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeCreate'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-types/{uid}/clone/:
    post:
      description: Clone existing Document Type and its fields
      operationId: document-document-types-uid-clone:POST
      parameters:
      - description: A UUID string identifying this document type.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneDocumentTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CloneDocumentTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CloneDocumentTypeRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/document-types/{uid}/export_doc_type/:
    get:
      description: ""
      operationId: document-document-types-uid-export_doc_type:GET
      parameters:
      - description: A UUID string identifying this document type.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: Version number
        explode: true
        in: query
        name: target_version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-types/{uid}/form-fields/:
    get:
      description: "GET model form fields description to build UI form for EXISTING\
        \ object:\n\n     - value: any - object field value\n     - field_type: str\
        \ - CharField, IntegerField, SomeSerializerField - i.e. fields from a serializer\n\
        \     - ui_element: dict - {type: (\"input\" | \"select\" | \"checkbox\" |\
        \ ...), data_type: (\"string\", \"integer\", \"date\", ...), ...}\n     -\
        \ label: str - field label declared in a serializer field (default NULL)\n\
        \     - field_name: str - field name declared in a serializer field (default\
        \ NULL)\n     - help_text: str - field help text declared in a serializer\
        \ field (default NULL)\n     - required: bool - whether field is required\n\
        \     - read_only: bool - whether field is read only\n     - allow_null: bool\
        \ - whether field is may be null\n     - default: bool - default (initial)\
        \ field value for a new object (default NULL)\n     - choices: array - choices\
        \ to select from [{choice_id1: choice_verbose_name1, ....}] (default NULL)"
      operationId: document-document-types-uid-form-fields:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/document-types/{uid}/pre_delete/:
    post:
      description: Get info about related objects for ready-to-delete document type.
      operationId: document-document-types-uid-pre_delete:POST
      parameters:
      - description: A UUID string identifying this document type.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTypeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentTypeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentTypeDetail'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/documents/:
    get:
      description: Document List with Fields
      operationId: document-documents:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      - description: Cluster id to filter by
        explode: true
        in: query
        name: cluster_id
        required: false
        schema:
          type: integer
        style: form
      - description: Search parameters for djangoQL
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentsForUser'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    post:
      description: ""
      operationId: document-documents:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsForUser'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/documents/download_zip/:
    get:
      description: ""
      operationId: document-documents-download_zip:GET
      parameters:
      - description: Filter by Document ids separated by commas
        explode: true
        in: query
        name: document_ids
        required: false
        schema:
          type: string
        style: form
      - description: Exclude Document ids separated by commas
        explode: true
        in: query
        name: exclude_document_ids
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDownloadZipResponse'
            application/zip:
              schema:
                format: binary
                type: string
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document_documents_download_zip_GET_404_response'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/documents/for-user/:
    get:
      description: ""
      operationId: document-documents-for-user:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsForUserResponse'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/documents/mark_delete/:
    post:
      description: "Method marks a number of documents for deleting. These marked\
        \ documents will become hidden in API.\n:param request: provide a list of\
        \ document ids here: document_ids: [...]\n:param kwargs:\n:return: OK or 404"
      operationId: document-documents-mark_delete:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsResponse'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/documents/unmark_delete/:
    post:
      description: "Method recovers documents, marked for deleting. These documents\
        \ will become visible in API.\n:param request: provide a list of document\
        \ ids here: document_ids: [...]\n:param kwargs:\n:return: OK or 404"
      operationId: document-documents-unmark_delete:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsResponse'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/documents/{id}/:
    delete:
      description: ""
      operationId: document-documents-id:DELETE
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    get:
      description: Document Detail with Fields
      operationId: document-documents-id:GET
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsForUser'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    patch:
      description: ""
      operationId: document-documents-id:PATCH
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Set new assignee OR document status
      operationId: document-documents-id:PUT
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsForUser'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/documents/{id}/actions/:
    get:
      description: ""
      operationId: document-documents-id-actions:GET
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Project ID
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: integer
        style: form
      - description: Document ID
        explode: true
        in: query
        name: document_id
        required: false
        schema:
          type: integer
        style: form
      - description: Action names
        explode: true
        in: query
        name: view_actions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsForUser'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/documents/{id}/data/:
    get:
      description: "Restricted set of fields in response (except full_text), see get_serializer_class()"
      operationId: document-documents-id-data:GET
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/documents/{id}/definitions/:
    get:
      description: ""
      operationId: document-documents-id-definitions:GET
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentDefinitions'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/documents/{id}/extraction/:
    get:
      description: "Standard extracted info - Top level + details\n\n    Params:\n\
        \        - skip_details: bool - show top-level data only (skip per text-unit\
        \ data)\n        - values: str - list of str separated by comma like dates,parties,courts"
      operationId: document-documents-id-extraction:GET
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/documents/{id}/fields/:
    get:
      description: ""
      operationId: document-documents-id-fields:GET
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    patch:
      description: ""
      operationId: document-documents-id-fields:PATCH
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: ""
      operationId: document-documents-id-fields:POST
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: ""
      operationId: document-documents-id-fields:PUT
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/documents/{id}/full_text/:
    get:
      description: ""
      operationId: document-documents-id-full_text:GET
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/documents/{id}/has_pdf_info/:
    get:
      description: ""
      operationId: document-documents-id-has_pdf_info:GET
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/documents/{id}/pdf_repr/:
    get:
      description: ""
      operationId: document-documents-id-pdf_repr:GET
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPDFRepr'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/documents/{id}/set_annotator_coord_difference/:
    post:
      description: ""
      operationId: document-documents-id-set_annotator_coord_difference:POST
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSetAnnotatorCoordinatesDifferenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentSetAnnotatorCoordinatesDifferenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentSetAnnotatorCoordinatesDifferenceRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSetAnnotatorCoordinatesDifferenceResponse'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/documents/{id}/show/:
    get:
      description: ""
      operationId: document-documents-id-show:GET
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Get alternative document file if exists
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - "true"
          - alt
          - alt_for_pdf
          - initial
          - strict_alt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/documents/{id}/similar/:
    get:
      description: "Re-use ProjectDocumentSimilarityListAPIView to get similarities\n\
        \ as resource for this API is not Document model, but DocumentSimilarity"
      operationId: document-documents-id-similar:GET
      parameters:
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "document b text max length, 0 to get all text"
        explode: true
        in: query
        name: text_max_length
        required: false
        schema:
          type: integer
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDocumentSimilarity'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/field-annotation-statuses/:
    get:
      description: FieldAnnotationStatus List
      operationId: document-field-annotation-statuses:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FieldAnnotationStatus'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    post:
      description: Create FieldAnnotationStatus
      operationId: document-field-annotation-statuses:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldAnnotationStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldAnnotationStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldAnnotationStatus'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAnnotationStatus'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/field-annotation-statuses/{id}/:
    delete:
      description: Delete FieldAnnotationStatus
      operationId: document-field-annotation-statuses-id:DELETE
      parameters:
      - description: A unique integer value identifying this field annotation status.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    get:
      description: Retrieve FieldAnnotationStatus
      operationId: document-field-annotation-statuses-id:GET
      parameters:
      - description: A unique integer value identifying this field annotation status.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAnnotationStatus'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    patch:
      description: ""
      operationId: document-field-annotation-statuses-id:PATCH
      parameters:
      - description: A unique integer value identifying this field annotation status.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldAnnotationStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldAnnotationStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldAnnotationStatus'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAnnotationStatus'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update FieldAnnotationStatus
      operationId: document-field-annotation-statuses-id:PUT
      parameters:
      - description: A unique integer value identifying this field annotation status.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldAnnotationStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldAnnotationStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldAnnotationStatus'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAnnotationStatus'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/document-field-annotations/:
    get:
      description: Field Annotation List + Field Annotation False Match List
      operationId: document-project-project_pk-document-field-annotations:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentFieldAnnotation'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/document-field-annotations/for-user/:
    get:
      description: ""
      operationId: document-project-project_pk-document-field-annotations-for-user:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldAnnotation'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/document-field-annotations/{uid}/:
    get:
      description: Field Annotation Details (not Field Annotation False Match)
      operationId: document-project-project_pk-document-field-annotations-uid:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldAnnotation'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/document-field-values/:
    get:
      description: Document Field Value List
      operationId: document-project-project_pk-document-field-values:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentFieldValue'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/document-field-values/{id}/:
    get:
      description: Document Field Value Details
      operationId: document-project-project_pk-document-field-values-id:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this field value.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFieldValue'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/:
    get:
      description: Document List with Fields
      operationId: document-project-project_pk-documents:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      - description: Cluster id to filter by
        explode: true
        in: query
        name: cluster_id
        required: false
        schema:
          type: integer
        style: form
      - description: Search parameters for djangoQL
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentsForUser'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    post:
      description: ""
      operationId: document-project-project_pk-documents:POST
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsForUser'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/download_zip/:
    get:
      description: ""
      operationId: document-project-project_pk-documents-download_zip:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by Document ids separated by commas
        explode: true
        in: query
        name: document_ids
        required: false
        schema:
          type: string
        style: form
      - description: Exclude Document ids separated by commas
        explode: true
        in: query
        name: exclude_document_ids
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDownloadZipResponse'
            application/zip:
              schema:
                format: binary
                type: string
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document_documents_download_zip_GET_404_response'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/for-user/:
    get:
      description: ""
      operationId: document-project-project_pk-documents-for-user:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsForUserResponse'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/mark_delete/:
    post:
      description: "Method marks a number of documents for deleting. These marked\
        \ documents will become hidden in API.\n:param request: provide a list of\
        \ document ids here: document_ids: [...]\n:param kwargs:\n:return: OK or 404"
      operationId: document-project-project_pk-documents-mark_delete:POST
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsResponse'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/unmark_delete/:
    post:
      description: "Method recovers documents, marked for deleting. These documents\
        \ will become visible in API.\n:param request: provide a list of document\
        \ ids here: document_ids: [...]\n:param kwargs:\n:return: OK or 404"
      operationId: document-project-project_pk-documents-unmark_delete:POST
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkUnmarkForDeleteDocumentsResponse'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{document_pk}/annotations/:
    get:
      description: ""
      operationId: document-project-project_pk-documents-document_pk-annotations:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: document_pk
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AnnotationInDocument'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    post:
      description: ""
      operationId: document-project-project_pk-documents-document_pk-annotations:POST
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: document_pk
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationInDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationInDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationInDocument'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationInDocument'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{document_pk}/annotations/{id}/:
    delete:
      description: ""
      operationId: document-project-project_pk-documents-document_pk-annotations-id:DELETE
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: document_pk
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    get:
      description: ""
      operationId: document-project-project_pk-documents-document_pk-annotations-id:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: document_pk
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationInDocument'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    patch:
      description: ""
      operationId: document-project-project_pk-documents-document_pk-annotations-id:PATCH
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: document_pk
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationInDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationInDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationInDocument'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationInDocument'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: ""
      operationId: document-project-project_pk-documents-document_pk-annotations-id:PUT
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: document_pk
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationInDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationInDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationInDocument'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationInDocument'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/:
    delete:
      description: ""
      operationId: document-project-project_pk-documents-id:DELETE
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    get:
      description: Document Detail with Fields
      operationId: document-project-project_pk-documents-id:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsForUser'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    patch:
      description: ""
      operationId: document-project-project_pk-documents-id:PATCH
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Set new assignee OR document status
      operationId: document-project-project_pk-documents-id:PUT
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentsForUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsForUser'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/actions/:
    get:
      description: ""
      operationId: document-project-project_pk-documents-id-actions:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Project ID
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: integer
        style: form
      - description: Document ID
        explode: true
        in: query
        name: document_id
        required: false
        schema:
          type: integer
        style: form
      - description: Action names
        explode: true
        in: query
        name: view_actions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsForUser'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/data/:
    get:
      description: "Restricted set of fields in response (except full_text), see get_serializer_class()"
      operationId: document-project-project_pk-documents-id-data:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/definitions/:
    get:
      description: ""
      operationId: document-project-project_pk-documents-id-definitions:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DocumentDefinitions'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/extraction/:
    get:
      description: "Standard extracted info - Top level + details\n\n    Params:\n\
        \        - skip_details: bool - show top-level data only (skip per text-unit\
        \ data)\n        - values: str - list of str separated by comma like dates,parties,courts"
      operationId: document-project-project_pk-documents-id-extraction:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/fields/:
    get:
      description: ""
      operationId: document-project-project_pk-documents-id-fields:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
    patch:
      description: ""
      operationId: document-project-project_pk-documents-id-fields:PATCH
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: ""
      operationId: document-project-project_pk-documents-id-fields:POST
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: ""
      operationId: document-project-project_pk-documents-id-fields:PUT
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/full_text/:
    get:
      description: ""
      operationId: document-project-project_pk-documents-id-full_text:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/has_pdf_info/:
    get:
      description: ""
      operationId: document-project-project_pk-documents-id-has_pdf_info:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/pdf_repr/:
    get:
      description: ""
      operationId: document-project-project_pk-documents-id-pdf_repr:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPDFRepr'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/set_annotator_coord_difference/:
    post:
      description: ""
      operationId: document-project-project_pk-documents-id-set_annotator_coord_difference:POST
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSetAnnotatorCoordinatesDifferenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentSetAnnotatorCoordinatesDifferenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentSetAnnotatorCoordinatesDifferenceRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSetAnnotatorCoordinatesDifferenceResponse'
          description: ""
      tags:
      - document
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/show/:
    get:
      description: ""
      operationId: document-project-project_pk-documents-id-show:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Get alternative document file if exists
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - "true"
          - alt
          - alt_for_pdf
          - initial
          - strict_alt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/project/{project_pk}/documents/{id}/similar/:
    get:
      description: "Re-use ProjectDocumentSimilarityListAPIView to get similarities\n\
        \ as resource for this API is not Document model, but DocumentSimilarity"
      operationId: document-project-project_pk-documents-id-similar:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_pk
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "document b text max length, 0 to get all text"
        explode: true
        in: query
        name: text_max_length
        required: false
        schema:
          type: integer
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDocumentSimilarity'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/stats/:
    get:
      description: ""
      operationId: document-stats:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/textunits/:
    get:
      description: TextUnit List
      operationId: document-textunits:GET
      parameters:
      - description: Search parameters for djangoQL
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TextUnitDjangoQL'
                type: array
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/document/textunits/{id}/:
    get:
      description: Retrieve TextUnit
      operationId: document-textunits-id:GET
      parameters:
      - description: A unique integer value identifying this text unit.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Search parameters for djangoQL
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextUnitDjangoQL'
          description: ""
      tags:
      - document
      - v1
      x-accepts: application/json
  /api/v1/dump/document-config/:
    get:
      description: "Dump document types, fields, field detectors and  document filters\
        \ to json."
      operationId: dump-document-config:GET
      parameters:
      - description: Download as file
        explode: true
        in: query
        name: download
        required: false
        schema:
          type: boolean
        style: form
      - description: Document Type codes separated by comma
        explode: true
        in: query
        name: document_type_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dump_document_config_GET_200_response'
          description: ""
        "400":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: ""
      tags:
      - dump
      - v1
      x-accepts: application/json
    put:
      description: "Dump document types, fields, field detectors and  document filters\
        \ to json."
      operationId: dump-document-config:PUT
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              items:
                additionalProperties: true
                type: object
              type: array
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DumpPUTErrorResponse'
          description: ""
      tags:
      - dump
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/dump/dump-fixture/:
    post:
      description: Download model fixture
      operationId: dump-dump-fixture:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DumpFixture'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DumpFixture'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DumpFixture'
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Json file with dumped fixture
                format: binary
                type: string
          description: ""
      tags:
      - dump
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/dump/dump/:
    get:
      description: "Dump all users, email addresses, review statuses, review status\
        \ groups,\napp vars, document types, fields, field detectors and document\
        \ filters to json."
      operationId: dump-dump:GET
      parameters:
      - description: Download as file
        explode: true
        in: query
        name: download
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dump_document_config_GET_200_response'
          description: ""
        "400":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: ""
      tags:
      - dump
      - v1
      x-accepts: application/json
    put:
      description: "Dump all users, email addresses, review statuses, review status\
        \ groups,\napp vars, document types, fields, field detectors and document\
        \ filters to json."
      operationId: dump-dump:PUT
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              items:
                additionalProperties: true
                type: object
              type: array
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DumpPUTErrorResponse'
          description: ""
      tags:
      - dump
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/dump/field-values/:
    get:
      description: Dump field values to json.
      operationId: dump-field-values:GET
      parameters:
      - description: Download as file
        explode: true
        in: query
        name: download
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dump_document_config_GET_200_response'
          description: ""
        "400":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: ""
      tags:
      - dump
      - v1
      x-accepts: application/json
    put:
      description: Upload field values
      operationId: dump-field-values:PUT
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              items:
                additionalProperties: true
                type: object
              type: array
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DumpPUTErrorResponse'
          description: ""
      tags:
      - dump
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/dump/load-fixture/:
    post:
      description: Install model fixtures
      operationId: dump-load-fixture:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadFixture'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoadFixture'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoadFixture'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: ""
      tags:
      - dump
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/extract/amount-usage/:
    get:
      description: "Amount Usage List\n\nGET params:\n  - document_id: int\n  - text_unit_id:\
        \ int\n  - amount_search: float\n  - amount_str: str"
      operationId: extract-amount-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AmountUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/amount-usage/top/:
    get:
      description: "Top Amount Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-amount-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/citation-usage/:
    get:
      description: "Citation Usage List\n\nGET params:\n  - document_id: int\n  -\
        \ text_unit_id: int\n  - citation_str: str\n  - citation_str_contains: str\n\
        \  - year_str: str\n  - reporter: str\n  - court: str"
      operationId: extract-citation-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CitationUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/citation-usage/top/:
    get:
      description: "Top Citation Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-citation-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/copyright-usage/:
    get:
      description: "Copyright Usage List\n\nGET params:\n  - document_id: int\n  -\
        \ text_unit_id: int\n  - copyright: str\n  - copyright_contains: str"
      operationId: extract-copyright-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CopyrightUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/copyright-usage/top/:
    get:
      description: "Top Copyright Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-copyright-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/court-usage/:
    get:
      description: "Court Usage List\n\nGET params:\n  - document_id: int\n  - text_unit_id:\
        \ int\n  - court_name: str\n  - court_alias: str"
      operationId: extract-court-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CourtUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/court-usage/top/:
    get:
      description: "Top Court Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-court-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/currency-usage/:
    get:
      description: "Currency Usage List\n\nGET params:\n  - document_id: int\n  -\
        \ amount_search: str\n  - currency: str"
      operationId: extract-currency-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CurrencyUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/currency-usage/top/:
    get:
      description: "Top Currency Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-currency-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/date-duration-usage/:
    get:
      description: "Date Duration Usage List\n\nGET params:\n  - document_id: int\n\
        \  - text_unit_id: int\n  - duration_days_str: str/float"
      operationId: extract-date-duration-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DateDurationUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/date-duration-usage/top/:
    get:
      description: "Top Date Duration Usage List\n\nGET params:\n  - document_id:\
        \ int"
      operationId: extract-date-duration-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/date-usage/:
    get:
      description: "Date Usage List\n\nGET params:\n  - document_id: int\n  - date_search:\
        \ str\n  - month_search: str ('%Y-%m-%d')"
      operationId: extract-date-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DateUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/date-usage/calendar-chart/:
    get:
      description: "Date Usage Calendar Chart\n\nGET params:\n    - document_id: int"
      operationId: extract-date-usage-calendar-chart:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DateUsageCalendar'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/date-usage/timeline-chart/:
    get:
      description: "Date Usage Timeline Chart\n\nGET params:\n    - document_id: int\n\
        \    - per_month: bool"
      operationId: extract-date-usage-timeline-chart:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DateUsageTimeline'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/date-usage/to-ical/:
    get:
      description: "Load Date Usage as iCal\n\nGET params:\n    - document_id: int\
        \ (required)"
      operationId: extract-date-usage-to-ical:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DateUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/date-usage/top/:
    get:
      description: "Top Date Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-date-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/definition-usage/:
    get:
      description: "Definition Usage List\n\nGET params:\n  - document_id: int\n \
        \ - definition: str"
      operationId: extract-definition-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DefinitionUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/definition-usage/top/:
    get:
      description: "Top Definition Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-definition-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/distance-usage/:
    get:
      description: "Distance Usage List\n\nGET params:\n  - document_id: int\n  -\
        \ distance_type: str\n  - amount_search: float"
      operationId: extract-distance-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DistanceUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/distance-usage/top/:
    get:
      description: "Top Distance Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-distance-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/geo-alias-usage/:
    get:
      description: Geo Alias Usage List
      operationId: extract-geo-alias-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeoAliasUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/geo-alias-usage/top/:
    get:
      description: Top Geo Alias Usage List
      operationId: extract-geo-alias-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/geo-entities/:
    get:
      description: Geo Entity List
      operationId: extract-geo-entities:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeoEntityList'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/geo-entities/{id}/:
    get:
      description: Retrieve Geo Entity
      operationId: extract-geo-entities-id:GET
      parameters:
      - description: A unique integer value identifying this geo entity.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoEntityList'
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
    put:
      description: Update Geo Entity
      operationId: extract-geo-entities-id:PUT
      parameters:
      - description: A unique integer value identifying this geo entity.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoEntityUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeoEntityUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeoEntityUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoEntityUpdate'
          description: ""
      tags:
      - extract
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/extract/geo-entity-usage/:
    get:
      description: Geo Entity Usage List
      operationId: extract-geo-entity-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeoEntityUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/geo-entity-usage/top/:
    get:
      description: Top Geo Entity Usage List
      operationId: extract-geo-entity-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/parties/:
    get:
      description: Party List
      operationId: extract-parties:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Party'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/parties/{id}/:
    get:
      description: Retrieve Party
      operationId: extract-parties-id:GET
      parameters:
      - description: A unique integer value identifying this party.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/party-usage/:
    get:
      description: "Party Usage List\n\nGET params:\n  - document_id: int\n  - text_unit_id:\
        \ int\n  - party_search: str\n  - party_search_iexact: str\n  - role: str\n\
        \  - role_contains: str"
      operationId: extract-party-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PartyUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/party-usage/top/:
    get:
      description: "Top Party Usage List\n\nGET params:\n  - document_id: int\n  -\
        \ party_id: int"
      operationId: extract-party-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/party/network-chart/:
    get:
      description: "Party Network Chart\n\nGET params:\n    - party_name_iexact: str"
      operationId: extract-party-network-chart:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PartyUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/percent-usage/:
    get:
      description: "Percent Usage List\n\nGET params:\n  - document_id: int\n  - unit_type:\
        \ str\n  - amount_search: float"
      operationId: extract-percent-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PercentUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/percent-usage/top/:
    get:
      description: "Top Percent Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-percent-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/ratio-usage/:
    get:
      description: "Ratio Usage List\n\nGET params:\n  - document_id: int\n  - text_unit_id:\
        \ int\n  - amount_search: float\n  - amount_search2: float"
      operationId: extract-ratio-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RatioUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/ratio-usage/top/:
    get:
      description: "Top Ratio Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-ratio-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/regulation-usage/:
    get:
      description: "Regulation Usage List\n\nGET params:\n  - document_id: int\n \
        \ - text_unit_id: int\n  - regulation_type: str\n  - regulation_name: str"
      operationId: extract-regulation-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RegulationUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/regulation-usage/top/:
    get:
      description: "Top Regulation Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-regulation-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/term-tags/:
    get:
      description: ""
      operationId: extract-term-tags:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TermTag'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/term-usage/:
    get:
      description: Term Usage List
      operationId: extract-term-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TermUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/term-usage/top/:
    get:
      description: Top Term Usage List
      operationId: extract-term-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/trademark-usage/:
    get:
      description: "Trademark Usage List\n\nGET params:\n  - document_id: int\n  -\
        \ text_unit_id: int\n  - trademark: str"
      operationId: extract-trademark-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrademarkUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/trademark-usage/top/:
    get:
      description: "Top Trademark Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-trademark-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/typeahead/geo-entity-usage/{field_name}/:
    get:
      description: "Typeahead Geo Entity Usage\n\n    Kwargs: field_name: [entity__name]\n\
        \    GET params:\n      - q: str"
      operationId: extract-typeahead-geo-entity-usage-field_name:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: field_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Typeahead'
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/typeahead/party-usage/{field_name}/:
    get:
      description: "Typeahead Party Usage\n\n    Kwargs: field_name: [party__name]\n\
        \    GET params:\n      - q: str"
      operationId: extract-typeahead-party-usage-field_name:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: field_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Typeahead'
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/typeahead/term-usage/{field_name}/:
    get:
      description: "Typeahead Term Usage\n\n    Kwargs: field_name: [term__term]\n\
        \    GET params:\n      - q: str"
      operationId: extract-typeahead-term-usage-field_name:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: field_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Typeahead'
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/url-usage/:
    get:
      description: "Url Usage List\n\nGET params:\n  - document_id: int\n  - text_unit_id:\
        \ int\n  - source_url: str"
      operationId: extract-url-usage:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UrlUsage'
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/extract/url-usage/top/:
    get:
      description: "Top Url Usage List\n\nGET params:\n  - document_id: int"
      operationId: extract-url-usage-top:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - extract
      - v1
      x-accepts: application/json
  /api/v1/logging/log_message/:
    post:
      description: Log provided data
      operationId: logging-log_message:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggingAPIViewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoggingAPIViewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoggingAPIViewRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - logging
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/notifications/web-notifications/:
    get:
      description: Web Notification List
      operationId: notifications-web-notifications:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - notifications
      - v1
      x-accepts: application/json
  /api/v1/notifications/web-notifications/mark_seen/:
    post:
      description: "Method marks a number of web notifications for updating as seen/not\
        \ seen.\n:param request: provide a list of web notification message ids here:"
      operationId: notifications-web-notifications-mark_seen:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkForSeenWebNotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkForSeenWebNotificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarkForSeenWebNotificationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkForSeenWebNotificationResponse'
          description: ""
      tags:
      - notifications
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/locales/:
    get:
      description: ""
      operationId: listLocales
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                type: array
          description: ""
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - api
      x-accepts: application/json
  /api/v1/project/project-clustering/:
    get:
      description: ProjectCluster List
      operationId: project-project-clustering:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectClustering'
                type: array
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/project-clustering/{id}/:
    get:
      description: ProjectCluster Details
      operationId: project-project-clustering-id:GET
      parameters:
      - description: A unique integer value identifying this project clustering.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectClustering'
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/:
    get:
      description: Project List
      operationId: project-projects:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectList'
                type: array
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
    post:
      description: Create Document/TextUnit Vectors if needed
      operationId: project-projects:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreate'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/form-fields/:
    get:
      description: "GET model form fields description to build UI form for an object:\n\
        \n     - field_type: str - CharField, IntegerField, SomeSerializerField -\
        \ i.e. fields from a serializer\n     - ui_element: dict - {type: (\"input\"\
        \ | \"select\" | \"checkbox\" | ...), data_type: (\"string\", \"integer\"\
        , \"date\", ...), ...}\n     - label: str - field label declared in a serializer\
        \ field (default NULL)\n     - field_name: str - field name declared in a\
        \ serializer field (default NULL)\n     - help_text: str - field help text\
        \ declared in a serializer field (default NULL)\n     - required: bool - whether\
        \ field is required\n     - read_only: bool - whether field is read only\n\
        \     - allow_null: bool - whether field is may be null\n     - default: bool\
        \ - default (initial) field value for a new object (default NULL)\n     -\
        \ choices: array - choices to select from [{choice_id1: choice_verbose_name1,\
        \ ....}] (default NULL)"
      operationId: project-projects-form-fields:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/project_stats/:
    get:
      description: |-
        Get project stats across all projects
        see related code in get_queryset() and serializer
      operationId: project-projects-project_stats:GET
      parameters:
      - description: Project ids separated by commas
        explode: true
        in: query
        name: project_ids
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectStats'
                type: array
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/recent/:
    get:
      description: "Get recent N projects\n\n    Params:\n        n: int - default\
        \ is 5"
      operationId: project-projects-recent:GET
      parameters:
      - description: Max rows number
        explode: true
        in: query
        name: "n"
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/select_projects/:
    post:
      description: Select projects for review in Explorer UI
      operationId: project-projects-select_projects:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectProjectsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SelectProjectsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SelectProjectsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelectProjectsResponse'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/:
    delete:
      description: Delete Project
      operationId: project-projects-id:DELETE
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
    get:
      description: Retrieve Project
      operationId: project-projects-id:GET
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update Project
      operationId: project-projects-id:PATCH
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdate'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: |-
        Create Document/TextUnit Vectors if needed
        Update ocr_enable project app var if needed
      operationId: project-projects-id:PUT
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdate'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/active_tasks/:
    get:
      description: ""
      operationId: project-projects-id-active_tasks:GET
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectActiveTasks'
                type: array
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/annotations_assignees/:
    get:
      description: Get assignees data for FieldAnnotations
      operationId: project-projects-id-annotations_assignees:GET
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectAnnotationsAssigneesResponse'
                type: array
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/assign_annotations/:
    post:
      description: "Bulk assign batch of annotations to a review team member\n\n \
        \   Params:\n        annotation_ids: list[int]\n        all: any value - update\
        \ all annotations if any value\n        no_annotation_ids: list[int] - exclude\
        \ those annotations from action (if \"all\" is set)\n        assignee_id:\
        \ int\n    Returns:\n        int (number of reassigned annotations)"
      operationId: project-projects-id-assign_annotations:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignProjectAnnotationsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignProjectAnnotationsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignProjectAnnotationsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountSuccessResponse'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project_projects_id_assign_annotations_POST_404_response'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/assign_document/:
    post:
      description: "Bulk assign batch of documents to a review team member\n\n   \
        \ Params:\n        document_id: int\n        assignee_id: int\n    Returns:\n\
        \        bool (number of reassigned documents)"
      operationId: project-projects-id-assign_document:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignProjectDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignProjectDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignProjectDocumentRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountSuccessResponse'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project_projects_id_assign_annotations_POST_404_response'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/assign_documents/:
    post:
      description: "Bulk assign batch of documents to a review team member\n\n   \
        \ Params:\n        document_ids: list[int]\n        all: any value - update\
        \ all documents if any value\n        no_document_ids: list[int] - exclude\
        \ those docs from action (if \"all\" is set)\n        assignee_id: int\n \
        \   Returns:\n        int (number of reassigned documents)"
      operationId: project-projects-id-assign_documents:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignProjectDocumentsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignProjectDocumentsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignProjectDocumentsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountSuccessResponse'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project_projects_id_assign_annotations_POST_404_response'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/assignees/:
    get:
      description: Get assignees data
      operationId: project-projects-id-assignees:GET
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectDocumentsAssigneesResponse'
                type: array
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/check_similarity_process_allowed/:
    post:
      description: ""
      operationId: project-projects-id-check_similarity_process_allowed:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectDetail'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/cleanup/:
    post:
      description: Clean project (Generic Contract Type project)
      operationId: project-projects-id-cleanup:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CleanupProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CleanupProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CleanupProjectRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ""
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/cluster/:
    post:
      description: "Cluster Project Documents\n\n    Params:\n        - method: str[KMeans,\
        \ MiniBatchKMeans, Birch, DBSCAN]\n        - cluster_by: str[term, date, text,\
        \ definition, duration, party,\n                          geoentity, currency_name,\
        \ currency_value]\n        - n_clusters: int\n        - force: bool (optional)\
        \ - force clustering if uncompleted tasks exist"
      operationId: project-projects-id-cluster:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClusterProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClusterProjectRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterProjectResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/cluster_actions/:
    get:
      description: ""
      operationId: project-projects-id-cluster_actions:GET
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Project ID
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: integer
        style: form
      - description: Document ID
        explode: true
        in: query
        name: document_id
        required: false
        schema:
          type: integer
        style: form
      - description: Action names
        explode: true
        in: query
        name: view_actions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/clustering-status/:
    get:
      description: "Last Clustering task status/data\n\n    Params:\n        - project_clustering_id:\
        \ int (optional) - return last if not provided"
      operationId: project-projects-id-clustering-status:GET
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Get by project_clustering_id
        explode: true
        in: query
        name: project_clustering_id
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectClusteringStatusResponse'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project_projects_id_assign_annotations_POST_404_response'
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/delete_document_similarity_results/:
    delete:
      description: ""
      operationId: project-projects-id-delete_document_similarity_results:DELETE
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/delete_text_unit_similarity_results/:
    delete:
      description: ""
      operationId: project-projects-id-delete_text_unit_similarity_results:DELETE
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/detect_field_values/:
    post:
      description: ""
      operationId: project-projects-id-detect_field_values:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectProjectFieldValuesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DetectProjectFieldValuesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DetectProjectFieldValuesRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskIdResponse'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/form-fields/:
    get:
      description: "GET model form fields description to build UI form for EXISTING\
        \ object:\n\n     - value: any - object field value\n     - field_type: str\
        \ - CharField, IntegerField, SomeSerializerField - i.e. fields from a serializer\n\
        \     - ui_element: dict - {type: (\"input\" | \"select\" | \"checkbox\" |\
        \ ...), data_type: (\"string\", \"integer\", \"date\", ...), ...}\n     -\
        \ label: str - field label declared in a serializer field (default NULL)\n\
        \     - field_name: str - field name declared in a serializer field (default\
        \ NULL)\n     - help_text: str - field help text declared in a serializer\
        \ field (default NULL)\n     - required: bool - whether field is required\n\
        \     - read_only: bool - whether field is read only\n     - allow_null: bool\
        \ - whether field is may be null\n     - default: bool - default (initial)\
        \ field value for a new object (default NULL)\n     - choices: array - choices\
        \ to select from [{choice_id1: choice_verbose_name1, ....}] (default NULL)"
      operationId: project-projects-id-form-fields:GET
      parameters:
      - description: A unique integer value identifying this user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/locate_items/:
    post:
      description: ""
      operationId: project-projects-id-locate_items:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocateItemsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LocateItemsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LocateItemsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskIdResponse'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/mark_delete/:
    post:
      description: "Method marks the whole project (remove_all=True) / the project's\
        \ documents (remove_all=False)\nfor deleting. These marked documents (and\
        \ the project) will become hidden in API.\nDocuments, listed in excluded_ids\
        \ list, will not be marked for deleting.\n\n    Params:\n        - all: bool\
        \ - mark all filtered by a user documents\n        - remove_all: bool - mark\
        \ project+documents\n        - exclude_document_ids: list[int]"
      operationId: project-projects-id-mark_delete:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteProjectsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteProjectsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteProjectsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkUnmarkForDeleteProjectsReponse'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/progress/:
    get:
      description: Get current progress of all project sessions / clusterings
      operationId: project-projects-id-progress:GET
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectProgressResponse'
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/search_similar_documents/:
    post:
      description: ""
      operationId: project-projects-id-search_similar_documents:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSearchSimilarDocumentsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectSearchSimilarDocumentsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectSearchSimilarDocumentsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskIdResponse'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/search_similar_text_units/:
    post:
      description: ""
      operationId: project-projects-id-search_similar_text_units:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSearchSimilarTextUnitsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectSearchSimilarTextUnitsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectSearchSimilarTextUnitsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskIdResponse'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/send-clusters-to-project/:
    post:
      description: "Send clusters to another Project\n\n    Params:\n        - cluster_ids:\
        \ list[int]\n        - project_id: int"
      operationId: project-projects-id-send-clusters-to-project:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendClusterToProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendClusterToProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendClusterToProjectRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ""
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/set_annotation_status/:
    post:
      description: "Bulk set status for batch of annotations\n\n    Params:\n    \
        \    document_ids: list[int]\n        all: any value - update all annotations\
        \ if any value\n        no_annotation_ids: list[int] - exclude those annotations\
        \ from action (if \"all\" is set)\n        status_id: int - field annotation\
        \ status id\n        run_mode: str - 'sync', 'background', 'smart'\n    Returns:\n\
        \        int (number of reassigned annotations)"
      operationId: project-projects-id-set_annotation_status:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetProjectAnnotationsStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetProjectAnnotationsStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetProjectAnnotationsStatusRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project_projects_id_set_annotation_status_POST_200_response'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/set_status/:
    post:
      description: "Bulk set status for batch of documents\n\n    Params:\n      \
        \  document_ids: list[int]\n        no_document_ids: list[int] - exclude those\
        \ docs from action (if \"all\" is set)\n        all: any value - update all\
        \ documents if any value\n        status_id: int\n    Returns:\n        int\
        \ (number of reassigned documents)"
      operationId: project-projects-id-set_status:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetProjectDocumentsStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetProjectDocumentsStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetProjectDocumentsStatusRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountSuccessResponse'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/settings_actions/:
    get:
      description: ""
      operationId: project-projects-id-settings_actions:GET
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Project ID
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: integer
        style: form
      - description: Document ID
        explode: true
        in: query
        name: document_id
        required: false
        schema:
          type: integer
        style: form
      - description: Action names
        explode: true
        in: query
        name: view_actions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/task/{task_id}/task-logs/:
    get:
      description: ""
      operationId: project-projects-id-task-task_id-task-logs:GET
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: records_limit
        required: false
        schema:
          type: integer
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskLogResponse'
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/tasks/:
    get:
      description: ""
      operationId: project-projects-id-tasks:GET
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTasks'
                type: array
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/projects/{id}/unmark_delete/:
    post:
      description: "Method removes soft delete sign from project only (remove_all=False)\
        \ or\nfrom the project and the project's documents (remove_all=True)\n   \
        \ Body params:\n        - all: bool - unmark all filtered by a user documents\n\
        \        - remove_all: bool - unmark project+documents\n        - exclude_document_ids:\
        \ List[int]"
      operationId: project-projects-id-unmark_delete:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteProjectsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteProjectsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarkUnmarkForDeleteProjectsRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkUnmarkForDeleteProjectsReponse'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/projects/{id}/update_document_fields/:
    post:
      description: "Bulk update project documents field, similar to /fields/ API in\
        \ document app\n\n    Params:\n        document_ids: list[int]\n        all:\
        \ any value - update all documents if any value\n        no_document_ids:\
        \ list[int] - exclude those docs from action (if \"all\" is set)\n       \
        \ fields_data: - dict {field_code: [values]}\n        on_existing_value: \"\
        replace_all\" | \"add_new\" (for multi-choice fields)\n    Returns:\n    \
        \    task_id"
      operationId: project-projects-id-update_document_fields:POST
      parameters:
      - description: A unique integer value identifying this project.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDocumentsFieldsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateProjectDocumentsFieldsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProjectDocumentsFieldsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectDocumentsFieldsResponse'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project_projects_id_assign_annotations_POST_404_response'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/task-queues/:
    get:
      description: Task Queue List
      operationId: project-task-queues:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskQueue'
                type: array
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
    post:
      description: Create Task Queue
      operationId: project-task-queues:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskQueue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskQueue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskQueue'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskQueue'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/task-queues/{id}/:
    delete:
      description: Delete Task Queue
      operationId: project-task-queues-id:DELETE
      parameters:
      - description: A unique integer value identifying this task queue.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
    get:
      description: Retrieve Task Queue
      operationId: project-task-queues-id:GET
      parameters:
      - description: A unique integer value identifying this task queue.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskQueue'
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update Task Queue
      operationId: project-task-queues-id:PATCH
      parameters:
      - description: A unique integer value identifying this task queue.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskQueue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskQueue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskQueue'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskQueue'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "Update Task Queue\n\n    PUT params:\n        - pk: int\n    \
        \    - description: str\n        - documents: list[int]\n        - completed_documents:\
        \ list[int]\n        - reviewers: list[int]\n    Optional params for add/remove\
        \ document from/to a TaskQueue:\n        - add_document: int\n        - remove_document:\
        \ int\n    Optional params for complete/reopen document in a TaskQueue:\n\
        \        - complete_document: int\n        - open_document: int\n    Optional\
        \ param to add documents from DocumentCluster:\n        - add_documents_from_cluster:\
        \ int (cluster id)"
      operationId: project-task-queues-id:PUT
      parameters:
      - description: A unique integer value identifying this task queue.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskQueue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskQueue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskQueue'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskQueue'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/upload-session/:
    get:
      description: Session Upload List
      operationId: project-upload-session:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UploadSessionDetail'
                type: array
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
    post:
      description: Create Session Upload
      operationId: project-upload-session:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSessionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadSessionCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadSessionCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionCreate'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/upload-session/status/:
    get:
      description: "Get status of Upload Sessions\n    Params:\n        - project_id:\
        \ int"
      operationId: project-upload-session-status:GET
      parameters:
      - description: Project id
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/upload-session/{uid}/:
    delete:
      description: Delete Session Upload
      operationId: project-upload-session-uid:DELETE
      parameters:
      - description: A UUID string identifying this upload session.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
    get:
      description: Retrieve Session Upload
      operationId: project-upload-session-uid:GET
      parameters:
      - description: A UUID string identifying this upload session.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionDetail'
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update Session Upload
      operationId: project-upload-session-uid:PATCH
      parameters:
      - description: A UUID string identifying this upload session.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSessionUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadSessionUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadSessionUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionUpdate'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/upload-session/{uid}/_batch_upload/:
    post:
      description: "Upload batch of files\n\n    Params:\n        - folder (source_path):\
        \ str - absolute path to a directory containing files\n        - force: bool\
        \ (optional) - whether rewrite existing file and Document"
      operationId: project-upload-session-uid-_batch_upload:POST
      parameters:
      - description: A UUID string identifying this upload session.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSessionDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadSessionDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadSessionDetail'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionDetail'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/upload-session/{uid}/batch_upload/:
    post:
      description: "Upload files from given sub-folder in media/data/documents folder\n\
        \n    Params:\n        - source_path: relative path to a folder with documents"
      operationId: project-upload-session-uid-batch_upload:POST
      parameters:
      - description: A UUID string identifying this upload session.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSessionBatchUploadRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadSessionBatchUploadRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadSessionBatchUploadRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionDetail'
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/upload-session/{uid}/cancel/:
    delete:
      description: "Delete a file from session\n\n    Params:\n        - filename:\
        \ str"
      operationId: project-upload-session-uid-cancel:DELETE
      parameters:
      - description: A UUID string identifying this upload session.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/upload-session/{uid}/delete-file/:
    delete:
      description: "Delete a file from session\n\n    Params:\n        - filename:\
        \ str"
      operationId: project-upload-session-uid-delete-file:DELETE
      parameters:
      - description: A UUID string identifying this upload session.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSessionDeleteFileRequest'
      responses:
        "204":
          description: ""
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "404":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/project/upload-session/{uid}/files/:
    post:
      description: ""
      operationId: project-upload-session-uid-files:POST
      parameters:
      - description: A UUID string identifying this upload session.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: Content Length
        explode: false
        in: header
        name: Content-Length
        required: true
        schema:
          type: integer
        style: simple
      - description: Content Length
        explode: false
        in: header
        name: File-Name
        required: true
        schema:
          type: string
        style: simple
      - description: Force upload
        explode: false
        in: header
        name: Force
        required: false
        schema:
          type: boolean
        style: simple
      - description: Directory Path
        explode: false
        in: header
        name: Directory-Path
        required: false
        schema:
          type: boolean
        style: simple
      - description: Force upload
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/offset+octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUploadSessionFilesResponse'
          description: ""
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUploadSessionFilesResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: ""
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - project
      - v1
      x-content-type: application/offset+octet-stream
      x-accepts: application/json
  /api/v1/project/upload-session/{uid}/progress/:
    get:
      description: Get Progress for a session per files (short form)
      operationId: project-upload-session-uid-progress:GET
      parameters:
      - description: A UUID string identifying this upload session.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUploadSessionProgressResponse'
          description: ""
      tags:
      - project
      - v1
      x-accepts: application/json
  /api/v1/project/upload-session/{uid}/upload/:
    post:
      description: "Upload a File\n\n    Params:\n        - file: file object\n  \
        \      - force: bool (optional) - whether rewrite existing file and Document\n\
        \        - review_file: bool - whether skip file check (exists or not)\n \
        \       - directory_path: str - may be passed from TUS plugin"
      operationId: project-upload-session-uid-upload:POST
      parameters:
      - description: A UUID string identifying this upload session.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: File Name
        explode: false
        in: header
        name: File-Name
        required: true
        schema:
          type: boolean
        style: simple
      - description: File Encoding
        explode: false
        in: header
        name: File-Encoding
        required: true
        schema:
          type: string
        style: simple
      - description: Force upload
        explode: false
        in: header
        name: Force
        required: false
        schema:
          type: boolean
        style: simple
      - description: Review File
        explode: false
        in: header
        name: Review-File
        required: false
        schema:
          type: boolean
        style: simple
      - description: Directory Path
        explode: false
        in: header
        name: Directory-Path
        required: false
        schema:
          type: boolean
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUploadSessionPOSTResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: ""
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - project
      - v1
      x-content-type: '*/*'
      x-accepts: application/json
  /api/v1/rawdb/config/:
    get:
      description: ""
      operationId: rawdb-config:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - rawdb
      - v1
      x-accepts: application/json
  /api/v1/rawdb/documents/{document_type_code}/:
    get:
      description: ""
      operationId: rawdb-documents-document_type_code:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: document_type_code
        required: true
        schema:
          type: string
        style: simple
      - description: Project ids separated by commas
        explode: true
        in: query
        name: project_ids
        required: false
        schema:
          type: string
        style: form
      - description: Column names separated by commas
        explode: true
        in: query
        name: columns
        required: false
        schema:
          type: string
        style: form
      - description: Boolean - show associated text
        explode: true
        in: query
        name: associated_text
        required: false
        schema:
          type: boolean
        style: form
      - description: Boolean - export as zip
        explode: true
        in: query
        name: as_zip
        required: false
        schema:
          type: boolean
        style: form
      - description: Export format
        explode: true
        in: query
        name: fmt
        required: false
        schema:
          enum:
          - json
          - csv
          - xlsx
          type: string
        style: form
      - description: Page Size
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Sort order - column names separated by commas
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - description: Saved filter ids separated by commas
        explode: true
        in: query
        name: saved_filters
        required: false
        schema:
          type: string
        style: form
      - description: Save filter
        explode: true
        in: query
        name: save_filter
        required: false
        schema:
          type: boolean
        style: form
      - description: Return Reviewed documents count
        explode: true
        in: query
        name: return_reviewed
        required: false
        schema:
          type: boolean
        style: form
      - description: Return total documents count
        explode: true
        in: query
        name: return_total
        required: false
        schema:
          type: boolean
        style: form
      - description: Return data
        explode: true
        in: query
        name: return_data
        required: false
        schema:
          type: boolean
        style: form
      - description: Ignore errors
        explode: true
        in: query
        name: ignore_errors
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter params
        explode: true
        in: query
        name: filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - rawdb
      - v1
      x-accepts: application/json
    post:
      description: "See .get() method signature, .post() method just reflects it and\n\
        uses the same request.GET params to get data"
      operationId: rawdb-documents-document_type_code:POST
      parameters:
      - description: ""
        explode: false
        in: path
        name: document_type_code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RawdbDocumentsPOSTRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RawdbDocumentsPOSTRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RawdbDocumentsPOSTRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - rawdb
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/rawdb/project_stats/{project_id}/:
    get:
      description: ""
      operationId: rawdb-project_stats-project_id:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - rawdb
      - v1
      x-accepts: application/json
  /api/v1/similarity/document-similarity-by-features/:
    get:
      description: "\"Similarity\" admin task\n\nPOST params:\n    - similarity_threshold:\
        \ int\n    - use_tfidf: bool\n    - delete: bool\n    - project: int\n   \
        \ - feature_source: list - list[date, definition, duration, court,\n     \
        \ currency_name, currency_value, term, party, geoentity]\n    - distance_type:\
        \ str - see scipy.spatial.distance._METRICS"
      operationId: similarity-document-similarity-by-features:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - similarity
      - v1
      x-accepts: application/json
    post:
      description: "\"Similarity\" admin task\n\nPOST params:\n    - similarity_threshold:\
        \ int\n    - use_tfidf: bool\n    - delete: bool\n    - project: int\n   \
        \ - feature_source: list - list[date, definition, duration, court,\n     \
        \ currency_name, currency_value, term, party, geoentity]\n    - distance_type:\
        \ str - see scipy.spatial.distance._METRICS"
      operationId: similarity-document-similarity-by-features:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSimilarityByFeaturesForm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentSimilarityByFeaturesForm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentSimilarityByFeaturesForm'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarityPOSTObjectResponse'
          description: ""
      tags:
      - similarity
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/similarity/party-similarity/:
    get:
      description: "\"Party Similarity\" admin task\n\nPOST params:\n    - case_sensitive:\
        \ bool\n    - similarity_type: str[]\n    - similarity_threshold: int\n  \
        \  - delete: bool"
      operationId: similarity-party-similarity:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - similarity
      - v1
      x-accepts: application/json
    post:
      description: "\"Party Similarity\" admin task\n\nPOST params:\n    - case_sensitive:\
        \ bool\n    - similarity_type: str[]\n    - similarity_threshold: int\n  \
        \  - delete: bool"
      operationId: similarity-party-similarity:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartySimilarityForm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartySimilarityForm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartySimilarityForm'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarityPOSTObjectResponse'
          description: ""
      tags:
      - similarity
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/similarity/project-documents-similarity-by-vectors/:
    get:
      description: "\"Similarity\" admin task\n\nPOST params:\n    - project_id: int\n\
        \    - distance_type: str - see scipy.spatial.distance._METRICS\n    - similarity_threshold:\
        \ int\n    - feature_source: \"vector\"\n    - create_reverse_relations: bool\
        \ - create B-A relations\n    - item_id: int\n    - use_tfidf: bool\n    -\
        \ delete: bool"
      operationId: similarity-project-documents-similarity-by-vectors:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - similarity
      - v1
      x-accepts: application/json
    post:
      description: "\"Similarity\" admin task\n\nPOST params:\n    - project_id: int\n\
        \    - distance_type: str - see scipy.spatial.distance._METRICS\n    - similarity_threshold:\
        \ int\n    - feature_source: \"vector\"\n    - create_reverse_relations: bool\
        \ - create B-A relations\n    - item_id: int\n    - use_tfidf: bool\n    -\
        \ delete: bool"
      operationId: similarity-project-documents-similarity-by-vectors:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDocumentsSimilarityByVectorsForm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectDocumentsSimilarityByVectorsForm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectDocumentsSimilarityByVectorsForm'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarityPOSTObjectResponse'
          description: ""
      tags:
      - similarity
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/similarity/project-text-units-similarity-by-vectors/:
    get:
      description: "\"Similarity\" admin task\n\nPOST params:\n    - project_id: int\n\
        \    - distance_type: str - see scipy.spatial.distance._METRICS\n    - similarity_threshold:\
        \ int\n    - unit_type: str sentence|paragraph\n    - feature_source: \"vector\"\
        \n    - create_reverse_relations: bool - create B-A relations\n    - use_tfidf:\
        \ bool\n    - delete: bool"
      operationId: similarity-project-text-units-similarity-by-vectors:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - similarity
      - v1
      x-accepts: application/json
    post:
      description: "\"Similarity\" admin task\n\nPOST params:\n    - project_id: int\n\
        \    - distance_type: str - see scipy.spatial.distance._METRICS\n    - similarity_threshold:\
        \ int\n    - unit_type: str sentence|paragraph\n    - feature_source: \"vector\"\
        \n    - create_reverse_relations: bool - create B-A relations\n    - use_tfidf:\
        \ bool\n    - delete: bool"
      operationId: similarity-project-text-units-similarity-by-vectors:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTextUnitsSimilarityByVectorsForm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectTextUnitsSimilarityByVectorsForm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectTextUnitsSimilarityByVectorsForm'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarityPOSTObjectResponse'
          description: ""
      tags:
      - similarity
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/similarity/similarity/:
    get:
      description: "\"Similarity\" admin task\n\nPOST params:\n    - search_similar_documents:\
        \ bool\n    - search_similar_text_units: bool\n    - similarity_threshold:\
        \ int\n    - use_idf: bool\n    - delete: bool\n    - project: bool"
      operationId: similarity-similarity:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - similarity
      - v1
      x-accepts: application/json
    post:
      description: "\"Similarity\" admin task\n\nPOST params:\n    - search_similar_documents:\
        \ bool\n    - search_similar_text_units: bool\n    - similarity_threshold:\
        \ int\n    - use_idf: bool\n    - delete: bool\n    - project: bool"
      operationId: similarity-similarity:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimilarityForm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SimilarityForm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SimilarityForm'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarityPOSTObjectResponse'
          description: ""
      tags:
      - similarity
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/similarity/text-unit-similarity-by-features/:
    get:
      description: "\"Similarity\" admin task\n\nPOST params:\n    - similarity_threshold:\
        \ int\n    - use_tfidf: bool\n    - delete: bool\n    - project: int\n   \
        \ - feature_source: list - list[date, definition, duration, court,\n     \
        \ currency_name, currency_value, term, party, geoentity]\n    - unit_type:\
        \ str sentence|paragraph\n    - distance_type: str - see scipy.spatial.distance._METRICS"
      operationId: similarity-text-unit-similarity-by-features:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - similarity
      - v1
      x-accepts: application/json
    post:
      description: "\"Similarity\" admin task\n\nPOST params:\n    - similarity_threshold:\
        \ int\n    - use_tfidf: bool\n    - delete: bool\n    - project: int\n   \
        \ - feature_source: list - list[date, definition, duration, court,\n     \
        \ currency_name, currency_value, term, party, geoentity]\n    - unit_type:\
        \ str sentence|paragraph\n    - distance_type: str - see scipy.spatial.distance._METRICS"
      operationId: similarity-text-unit-similarity-by-features:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextUnitSimilarityByFeaturesForm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TextUnitSimilarityByFeaturesForm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TextUnitSimilarityByFeaturesForm'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarityPOSTObjectResponse'
          description: ""
      tags:
      - similarity
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/task/clean-tasks/:
    post:
      description: '"Clean Tasks" admin task'
      operationId: task-clean-tasks:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                type: object
              type: object
          multipart/form-data:
            schema:
              additionalProperties:
                type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/task/load-dictionaries/:
    post:
      description: "\"Load Dictionaries\" admin task\n\nPOST params:\n    - terms_accounting:\
        \ bool:\n    - terms_accounting_1: bool:\n    - terms_accounting_1_locale_en:\
        \ bool:\n    - terms_accounting_2: bool:\n    - terms_accounting_2_locale_en:\
        \ bool:\n    - terms_accounting_3: bool:\n    - terms_accounting_3_locale_en:\
        \ bool:\n    - terms_accounting_4: bool:\n    - terms_accounting_4_locale_en:\
        \ bool:\n    - terms_accounting_5: bool:\n    - terms_accounting_5_locale_en:\
        \ bool:\n    - terms_scientific: bool:\n    - terms_scientific_1: bool:\n\
        \    - terms_scientific1_locale_en: bool:\n    - terms_financial: bool:\n\
        \    - terms_financial_1: bool:\n    - terms_financial_1_locale_en: bool:\n\
        \    - terms_legal: bool:\n    - terms_legal_1: bool:\n    - terms_legal_1_locale_en:\
        \ bool:\n    - terms_legal_2: bool:\n    - terms_legal_2_locale_en: bool:\n\
        \    - terms_legal_3: bool:\n    - terms_legal_3_locale_en: bool:\n    - terms_legal_4:\
        \ bool:\n    - terms_legal_4_locale_en: bool:\n    - terms_file_path: str:\n\
        \    - terms_delete: bool:\n    - courts: bool:\n    - courts_1: bool:\n \
        \   - courts_1_locale_en: bool:\n    - courts_2: bool:\n    - courts_2_locale_en:\
        \ bool:\n    - courts_file_path: str:\n    - courts_delete: bool:\n    - geoentities:\
        \ bool:\n    - geoentities_1: bool:\n    - geoentities_1_locale_multi: bool:\n\
        \    - geoentities_file_path: str:\n    - geoentities_delete: bool:"
      operationId: task-load-dictionaries:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                type: object
              type: object
          multipart/form-data:
            schema:
              additionalProperties:
                type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/task/load-documents/:
    get:
      description: "\"Load Documents\" admin task\n\nPOST params:\n    - project:\
        \ int\n    - source_data: str\n    - source_type: str\n    - document_type:\
        \ str\n    - delete: bool\n    - run_standard_locators: bool"
      operationId: task-load-documents:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-accepts: application/json
    post:
      description: "\"Load Documents\" admin task\n\nPOST params:\n    - project:\
        \ int\n    - source_data: str\n    - source_type: str\n    - document_type:\
        \ str\n    - delete: bool\n    - run_standard_locators: bool"
      operationId: task-load-documents:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                type: object
              type: object
          multipart/form-data:
            schema:
              additionalProperties:
                type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/task/locate/:
    get:
      description: "\"Locate\" admin task\n\nPOST params:\n    - locate_all: bool\n\
        \    - geoentity_locate: bool\n    - geoentity_priority: bool\n    - geoentity_delete:\
        \ bool\n    - date_locate: bool\n    - date_strict: bool\n    - date_delete:\
        \ bool\n    - amount_locate: bool\n    - amount_delete: bool\n    - citation_locate:\
        \ bool\n    - citation_delete: bool\n    - copyright_locate: bool\n    - copyright_delete:\
        \ bool\n    - court_locate: bool\n    - court_delete: bool\n    - currency_locate:\
        \ bool\n    - currency_delete: bool\n    - duration_locate: bool\n    - duration_delete:\
        \ bool\n    - definition_locate: bool\n    - definition_delete: bool\n   \
        \ - distance_locate: bool\n    - distance_delete: bool\n    - party_locate:\
        \ bool\n    - party_delete: bool\n    - percent_locate: bool\n    - percent_delete:\
        \ bool\n    - ratio_locate: bool\n    - ratio_delete: bool\n    - regulation_locate:\
        \ bool\n    - regulation_delete: bool\n    - term_locate: bool\n    - term_delete:\
        \ bool\n    - trademark_locate: bool\n    - trademark_delete: bool\n    -\
        \ url_locate: bool\n    - url_delete: bool\n    - parse_choice_sentence: bool\n\
        \    - parse_choice_paragraph: bool\n    - project: int"
      operationId: task-locate:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-accepts: application/json
    post:
      description: "\"Locate\" admin task\n\nPOST params:\n    - locate_all: bool\n\
        \    - geoentity_locate: bool\n    - geoentity_priority: bool\n    - geoentity_delete:\
        \ bool\n    - date_locate: bool\n    - date_strict: bool\n    - date_delete:\
        \ bool\n    - amount_locate: bool\n    - amount_delete: bool\n    - citation_locate:\
        \ bool\n    - citation_delete: bool\n    - copyright_locate: bool\n    - copyright_delete:\
        \ bool\n    - court_locate: bool\n    - court_delete: bool\n    - currency_locate:\
        \ bool\n    - currency_delete: bool\n    - duration_locate: bool\n    - duration_delete:\
        \ bool\n    - definition_locate: bool\n    - definition_delete: bool\n   \
        \ - distance_locate: bool\n    - distance_delete: bool\n    - party_locate:\
        \ bool\n    - party_delete: bool\n    - percent_locate: bool\n    - percent_delete:\
        \ bool\n    - ratio_locate: bool\n    - ratio_delete: bool\n    - regulation_locate:\
        \ bool\n    - regulation_delete: bool\n    - term_locate: bool\n    - term_delete:\
        \ bool\n    - trademark_locate: bool\n    - trademark_delete: bool\n    -\
        \ url_locate: bool\n    - url_delete: bool\n    - parse_choice_sentence: bool\n\
        \    - parse_choice_paragraph: bool\n    - project: int"
      operationId: task-locate:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                type: object
              type: object
          multipart/form-data:
            schema:
              additionalProperties:
                type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/task/process_text_extraction_results/{request_id}/:
    post:
      description: ""
      operationId: task-process_text_extraction_results-request_id:POST
      parameters:
      - description: ""
        explode: false
        in: path
        name: request_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                type: object
              type: object
          multipart/form-data:
            schema:
              additionalProperties:
                type: object
              type: object
      responses:
        "201":
          content:
            application/json:
              schema: {}
          description: ""
      tags:
      - task
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/task/purge-task/:
    post:
      description: "\"Purge Task\" admin task\n\nPOST params:\n    - task_pk: int"
      operationId: task-purge-task:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                type: object
              type: object
          multipart/form-data:
            schema:
              additionalProperties:
                type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/task/recall-task/:
    get:
      description: "\"Recall Task\" admin task\n\nPOST params:\n    - task_pk: int"
      operationId: task-recall-task:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-accepts: application/json
    post:
      description: "\"Recall Task\" admin task\n\nPOST params:\n    - task_pk: int"
      operationId: task-recall-task:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                type: object
              type: object
          multipart/form-data:
            schema:
              additionalProperties:
                type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/task/reindexroutines/check_schedule:
    post:
      description: ""
      operationId: task-reindexroutines-check_schedule:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                type: object
              type: object
          multipart/form-data:
            schema:
              additionalProperties:
                type: object
              type: object
      responses:
        "201":
          content:
            application/json:
              schema: {}
          description: ""
      tags:
      - task
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/task/task-log/:
    get:
      description: "Get task log records\nGET params:\n    - task_id: int\n    - records_limit:\
        \ int"
      operationId: task-task-log:GET
      parameters:
      - description: ""
        explode: true
        in: query
        name: task_id
        required: true
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: records_limit
        required: false
        schema:
          type: integer
        style: form
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskLogResponse'
                type: array
          description: ""
      tags:
      - task
      - v1
      x-accepts: application/json
  /api/v1/task/task-status/:
    get:
      description: "Check admin task status\n\nGET params:\n    - task_id: int"
      operationId: task-task-status:GET
      parameters:
      - description: ""
        explode: true
        in: query
        name: task_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-accepts: application/json
  /api/v1/task/tasks/:
    get:
      description: Task List
      operationId: task-tasks:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                type: array
          description: ""
      tags:
      - task
      - v1
      x-accepts: application/json
  /api/v1/task/tasks/project/{project_id}/active-tasks/:
    get:
      description: ""
      operationId: task-tasks-project-project_id-active-tasks:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectActiveTasks'
                type: array
          description: ""
      tags:
      - task
      - v1
      x-accepts: application/json
  /api/v1/task/tasks/project/{project_id}/tasks/:
    get:
      description: ""
      operationId: task-tasks-project-project_id-tasks:GET
      parameters:
      - description: ""
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTasks'
                type: array
          description: ""
      tags:
      - task
      - v1
      x-accepts: application/json
  /api/v1/task/tasks/{id}/:
    get:
      description: Retrieve Task
      operationId: task-tasks-id:GET
      parameters:
      - description: A unique value identifying this task.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ""
      tags:
      - task
      - v1
      x-accepts: application/json
  /api/v1/task/update-elastic-index/:
    get:
      description: '"Update ElasticSearch Index" admin task'
      operationId: task-update-elastic-index:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-accepts: application/json
    post:
      description: '"Update ElasticSearch Index" admin task'
      operationId: task-update-elastic-index:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                type: object
              type: object
          multipart/form-data:
            schema:
              additionalProperties:
                type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - task
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/tus/upload-session/{upload_session_id}/upload/:
    post:
      description: Create an Upload
      operationId: tus-upload-session-upload_session_id-upload:POST
      parameters:
      - description: ""
        explode: false
        in: path
        name: upload_session_id
        required: true
        schema:
          type: string
        style: simple
      - description: Upload a file even if it exists.
        explode: false
        in: header
        name: force
        required: false
        schema:
          type: boolean
        style: simple
      - description: File length.
        explode: false
        in: header
        name: Upload-Length
        required: true
        schema:
          type: integer
        style: simple
      - description: "Upload metadata include file name, relative path, etc."
        explode: false
        in: header
        name: Upload-Metadata
        required: true
        schema:
          type: string
        style: simple
      - description: 1.0.0
        explode: false
        in: header
        name: Tus-Resumable
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        description: ""
      responses:
        "201":
          description: ""
          headers:
            Location:
              explode: false
              schema:
                type: string
              style: simple
            Upload-Expires:
              explode: false
              schema:
                type: string
              style: simple
            Tus-Resumable:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tus_upload_session_upload_session_id_upload_POST_400_response'
          description: ""
      tags:
      - tus
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/tus/upload-session/{upload_session_id}/upload/{guid}/:
    patch:
      description: Transfer file data
      operationId: tus-upload-session-upload_session_id-upload-guid:PATCH
      parameters:
      - description: ""
        explode: false
        in: path
        name: upload_session_id
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
      - description: Upload a file even if it exists.
        explode: false
        in: header
        name: force
        required: false
        schema:
          type: boolean
        style: simple
      - description: "Upload offset, bytes."
        explode: false
        in: header
        name: Upload-Offset
        required: true
        schema:
          type: integer
        style: simple
      - description: 1.0.0
        explode: false
        in: header
        name: Tus-Resumable
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/offset+octet-stream:
            schema:
              format: binary
              type: string
        description: ""
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tus_upload_session_upload_session_id_upload_POST_400_response'
          description: ""
          headers:
            Upload-Offset:
              explode: false
              schema:
                type: integer
              style: simple
            Upload-Expires:
              explode: false
              schema:
                type: string
              style: simple
            Tus-Resumable:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "460":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - tus
      - v1
      x-content-type: application/offset+octet-stream
      x-accepts: application/json
  /api/v1/users/client-ids/:
    get:
      description: ""
      operationId: users-client-ids:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SocialClientList'
                type: array
          description: ""
      tags:
      - users
      - v1
      x-accepts: application/json
  /api/v1/users/elevate/:
    post:
      description: "Authenticate user (register first if the profile doesn't exist)\n\
        via Elevate in CLM.\n\nThe login algorithm is next:\n\n1. Redirect to google\
        \ auth page `https://elmqa.elevateservices.com/services/oauth/authorize`\n\
        \    with correct `client_id`, `redirect_url`, and `response_type=token`;\n\
        2. After elevate auth user will be redirected to callback url;\n3. Pass the\
        \ `access_token` from query params to this endpoint."
      operationId: users-elevate:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenSchema'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessTokenSchema'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccessTokenSchema'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ""
      tags:
      - users
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/google/:
    post:
      description: "Authenticate user (register first if the profile doesn't exist)\n\
        via Google in CLM.\n\nThe login algorithm is next:\n\n1. Redirect to google\
        \ auth page `https://accounts.google.com/o/oauth2/v2/auth`\n    with correct\
        \ `client_id`, `redirect_url`;\n2. After google auth user will be redirected\
        \ to callback url;\n3. Pass the `code` from query params to this endpoint."
      operationId: users-google:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Code'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ""
      tags:
      - users
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/office365/:
    post:
      description: "Authenticate user (register first if the profile doesn't exist)\n\
        via Microsoft office365 in CLM.\n\nThe login algorithm is next:\n\n1. Redirect\
        \ to microsoft auth page `https://login.microsoftonline.com/consumers|common/oauth2/v2.0/authorize`\n\
        \    with correct `client_id`, `redirect_url`, `response_type`, and `scope`;\n\
        2. After microsoft auth user will be redirected to callback url;\n3. Pass\
        \ the `code` from query params to this endpoint."
      operationId: users-office365:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Code'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ""
      tags:
      - users
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/okta/:
    post:
      description: "Authenticate user (register first if the profile doesn't exist)\n\
        via Okta in CLM.\n\nThe login algorithm is next:\n\n1. Redirect to okta auth\
        \ page `https://{{your domain}}.okta.com/oauth2/default/v1/authorize`\n  \
        \  with correct `client_id`, `redirect_url`, `scope`, and `state`;\n2. After\
        \ google auth user will be redirected to callback url;\n3. Pass the `code`\
        \ from query params to this endpoint."
      operationId: users-okta:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Code'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ""
      tags:
      - users
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/users/:
    get:
      description: User List
      operationId: users-users:GET
      parameters:
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: ""
      tags:
      - users
      - v1
      x-accepts: application/json
    post:
      description: Create User
      operationId: users-users:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ""
      tags:
      - users
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/users/form-fields/:
    get:
      description: "GET model form fields description to build UI form for an object:\n\
        \n     - field_type: str - CharField, IntegerField, SomeSerializerField -\
        \ i.e. fields from a serializer\n     - ui_element: dict - {type: (\"input\"\
        \ | \"select\" | \"checkbox\" | ...), data_type: (\"string\", \"integer\"\
        , \"date\", ...), ...}\n     - label: str - field label declared in a serializer\
        \ field (default NULL)\n     - field_name: str - field name declared in a\
        \ serializer field (default NULL)\n     - help_text: str - field help text\
        \ declared in a serializer field (default NULL)\n     - required: bool - whether\
        \ field is required\n     - read_only: bool - whether field is read only\n\
        \     - allow_null: bool - whether field is may be null\n     - default: bool\
        \ - default (initial) field value for a new object (default NULL)\n     -\
        \ choices: array - choices to select from [{choice_id1: choice_verbose_name1,\
        \ ....}] (default NULL)"
      operationId: users-users-form-fields:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - users
      - v1
      x-accepts: application/json
  /api/v1/users/users/user_stats/:
    get:
      description: "User stats: projects, document types, tasks"
      operationId: users-users-user_stats:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserStats'
                type: array
          description: ""
      tags:
      - users
      - v1
      x-accepts: application/json
  /api/v1/users/users/{id}/:
    get:
      description: Retrieve User
      operationId: users-users-id:GET
      parameters:
      - description: A unique integer value identifying this user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter params similar to JQWidgets grid filter params: \n  \
          \                         filterscount=1, \n                           filterdatafield0=\"\
          a\", \n                           filtervalue0=\"b\", \n               \
          \            filtercondition0=\"CONTAINS\", \n                         \
          \  filteroperator0=1, \n                           sortdatafied=\"c\",\n\
          \                           sortorder=\"asc\"\n                        \
          \   "
        explode: true
        in: query
        name: jq_filters
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ""
      tags:
      - users
      - v1
      x-accepts: application/json
    patch:
      description: Partial Update User
      operationId: users-users-id:PATCH
      parameters:
      - description: A unique integer value identifying this user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ""
      tags:
      - users
      - v1
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update User
      operationId: users-users-id:PUT
      parameters:
      - description: A unique integer value identifying this user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ""
      tags:
      - users
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/users/{id}/form-fields/:
    get:
      description: "GET model form fields description to build UI form for EXISTING\
        \ object:\n\n     - value: any - object field value\n     - field_type: str\
        \ - CharField, IntegerField, SomeSerializerField - i.e. fields from a serializer\n\
        \     - ui_element: dict - {type: (\"input\" | \"select\" | \"checkbox\" |\
        \ ...), data_type: (\"string\", \"integer\", \"date\", ...), ...}\n     -\
        \ label: str - field label declared in a serializer field (default NULL)\n\
        \     - field_name: str - field name declared in a serializer field (default\
        \ NULL)\n     - help_text: str - field help text declared in a serializer\
        \ field (default NULL)\n     - required: bool - whether field is required\n\
        \     - read_only: bool - whether field is read only\n     - allow_null: bool\
        \ - whether field is may be null\n     - default: bool - default (initial)\
        \ field value for a new object (default NULL)\n     - choices: array - choices\
        \ to select from [{choice_id1: choice_verbose_name1, ....}] (default NULL)"
      operationId: users-users-id-form-fields:GET
      parameters:
      - description: A unique integer value identifying this user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: ""
      tags:
      - users
      - v1
      x-accepts: application/json
  /api/v1/users/verify-token/:
    post:
      description: Get user data for provided auth_token.
      operationId: users-verify-token:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyAuthTokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyAuthTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyAuthTokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAuthTokenResponse'
          description: ""
        "403":
          content:
            application/json:
              schema:
                type: string
          description: ""
      tags:
      - users
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /rest-auth/login/:
    post:
      description: "Check the credentials and return the REST Token\nif the credentials\
        \ are valid and authenticated.\nCalls Django Auth login method to register\
        \ User ID\nin Django session framework\n\nAccept the following POST parameters:\
        \ username, password\nReturn the REST Framework Token Object's key."
      operationId: rest-auth-login:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: ""
      tags:
      - rest_auth
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /rest-auth/logout/:
    get:
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      operationId: rest-auth-logout:GET
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RestAuthCommonResponse'
                type: array
          description: ""
      tags:
      - rest_auth
      - v1
      x-accepts: application/json
    post:
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      operationId: rest-auth-logout:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties:
                type: object
              type: object
          multipart/form-data:
            schema:
              additionalProperties:
                type: object
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthCommonResponse'
          description: ""
      tags:
      - rest_auth
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /rest-auth/password/change/:
    post:
      description: "Calls Django Auth SetPasswordForm save method.\n\nAccepts the\
        \ following POST parameters: new_password1, new_password2\nReturns the success/fail\
        \ message."
      operationId: rest-auth-password-change:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomPasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomPasswordChange'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthCommonResponse'
          description: ""
      tags:
      - rest_auth
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /rest-auth/password/reset/:
    post:
      description: "Calls Django Auth PasswordResetForm save method.\n\nAccepts the\
        \ following POST parameters: email\nReturns the success/fail message."
      operationId: rest-auth-password-reset:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomPasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomPasswordReset'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthCommonResponse'
          description: ""
      tags:
      - rest_auth
      - v1
      x-content-type: application/json
      x-accepts: application/json
  /rest-auth/password/reset/confirm/:
    post:
      description: "Password reset e-mail link is confirmed, therefore\nthis resets\
        \ the user's password.\n\nAccepts the following POST parameters: token, uid,\n\
        \    new_password1, new_password2\nReturns the success/fail message."
      operationId: rest-auth-password-reset-confirm:POST
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomPasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomPasswordResetConfirm'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthCommonResponse'
          description: ""
      tags:
      - rest_auth
      - v1
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    RestAuthCommonResponse:
      example:
        detail: detail
      properties:
        detail:
          type: string
      required:
      - detail
      type: object
    TextUnitClassification:
      example:
        text_unit__document__description: text_unit__document__description
        text_unit__language: text_unit__language
        text_unit__document__pk: text_unit__document__pk
        user__username: user__username
        text_unit__pk: text_unit__pk
        pk: 0
        text_unit__unit_type: text_unit__unit_type
        class_name: class_name
        class_value: class_value
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        pk:
          readOnly: true
          type: integer
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__language:
          readOnly: true
          type: string
        class_name:
          maxLength: 1024
          type: string
        class_value:
          maxLength: 1024
          type: string
        user__username:
          readOnly: true
          type: string
        timestamp:
          format: date-time
          type: string
      required:
      - class_name
      - class_value
      type: object
    TextUnitClassifier:
      example:
        is_active: true
        name: name
        suggestions: 6
        pk: 0
        version: version
        class_name: class_name
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 1024
          type: string
        version:
          maxLength: 1024
          type: string
        class_name:
          maxLength: 1024
          type: string
        is_active:
          type: boolean
        suggestions:
          readOnly: true
          type: integer
      required:
      - class_name
      - name
      - version
      type: object
    TextUnitClassifierSuggestion:
      example:
        text_unit__document__description: text_unit__document__description
        text_unit__document__pk: text_unit__document__pk
        classifier_run: 2000-01-23T04:56:07.000+00:00
        text_unit__pk: text_unit__pk
        pk: 0
        classifier_confidence: 6.027456183070403
        class_name: class_name
        class_value: class_value
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
      properties:
        pk:
          readOnly: true
          type: integer
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__pk:
          readOnly: true
          type: string
        class_name:
          maxLength: 1024
          type: string
        class_value:
          maxLength: 1024
          type: string
        classifier_run:
          format: date-time
          type: string
        classifier_confidence:
          type: number
      required:
      - class_name
      - class_value
      type: object
    DocumentCluster:
      example:
        cluster_id: 441289069
        using: using
        document_data:
        - name: name
          pk: 5
          document_type: document_type
        - name: name
          pk: 5
          document_type: document_type
        name: name
        description: description
        pk: 0
        created_date: 2000-01-23T04:56:07.000+00:00
        self_name: self_name
        cluster_by: cluster_by
        documents_count: 1
      properties:
        pk:
          readOnly: true
          type: integer
        cluster_id:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        name:
          maxLength: 300
          type: string
        self_name:
          maxLength: 200
          type: string
        description:
          maxLength: 300
          type: string
        cluster_by:
          maxLength: 100
          type: string
        using:
          maxLength: 20
          type: string
        created_date:
          format: date-time
          type: string
        documents_count:
          readOnly: true
          type: integer
        document_data:
          items:
            $ref: '#/components/schemas/DocumentCluster_document_data_inner'
          readOnly: true
          type: array
      required:
      - cluster_by
      - description
      - name
      - self_name
      - using
      type: object
    SimilarityRun:
      example:
        items_count: 1
        project_id: project_id
        feature_source: feature_source
        unit_source: unit_source
        id: 0
        created_date: 2000-01-23T04:56:07.000+00:00
        unit_type: unit_type
        unit_id: 441289069
        created_by: 5
      properties:
        id:
          readOnly: true
          type: integer
        project_id:
          readOnly: true
          type: string
        feature_source:
          maxLength: 50
          nullable: true
          type: string
        unit_source:
          maxLength: 50
          nullable: true
          type: string
        unit_type:
          maxLength: 50
          nullable: true
          type: string
        unit_id:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        items_count:
          type: integer
        created_by:
          nullable: true
          type: integer
        created_date:
          format: date-time
          type: string
      required:
      - items_count
      type: object
    TextUnitCluster:
      example:
        cluster_id: 441289069
        using: using
        name: name
        description: description
        text_unit_count: 1
        text_unit_data:
        - "{}"
        - "{}"
        pk: 0
        created_date: 2000-01-23T04:56:07.000+00:00
        self_name: self_name
        cluster_by: cluster_by
      properties:
        pk:
          readOnly: true
          type: integer
        cluster_id:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        name:
          maxLength: 300
          type: string
        self_name:
          maxLength: 200
          type: string
        description:
          maxLength: 300
          type: string
        cluster_by:
          maxLength: 100
          type: string
        using:
          maxLength: 20
          type: string
        created_date:
          format: date-time
          type: string
        text_unit_count:
          readOnly: true
          type: integer
        text_unit_data:
          items:
            type: object
          readOnly: true
          type: array
      required:
      - cluster_by
      - description
      - name
      - self_name
      - using
      type: object
    DocumentSimilarity:
      example:
        document_a__name: document_a__name
        similarity: similarity
        document_b__name: document_b__name
        run:
          items_count: 1
          project_id: project_id
          feature_source: feature_source
          unit_source: unit_source
          id: 0
          created_date: 2000-01-23T04:56:07.000+00:00
          unit_type: unit_type
          unit_id: 441289069
          created_by: 5
        document_b__pk: document_b__pk
        document_a__pk: document_a__pk
      properties:
        document_a__name:
          readOnly: true
          type: string
        document_a__pk:
          readOnly: true
          type: string
        document_b__name:
          readOnly: true
          type: string
        document_b__pk:
          readOnly: true
          type: string
        similarity:
          format: decimal
          maximum: 1000
          minimum: -1000
          multipleOf: 0.01
          type: string
        run:
          $ref: '#/components/schemas/DocumentSimilarity_run'
      required:
      - similarity
      type: object
    ProjectDocumentSimilarity:
      example:
        document_b_name: document_b_name
        run_id: run_id
        document_a_id: document_a_id
        document_b_id: document_b_id
        similarity: similarity
        document_a_name: document_a_name
        document_b_text: document_b_text
      properties:
        document_a_name:
          type: string
        document_a_id:
          readOnly: true
          type: string
        document_b_name:
          type: string
        document_b_id:
          readOnly: true
          type: string
        document_b_text:
          type: string
        similarity:
          format: decimal
          maximum: 1000
          minimum: -1000
          multipleOf: 0.01
          type: string
        run_id:
          readOnly: true
          type: string
      required:
      - document_a_name
      - document_b_name
      - document_b_text
      - similarity
      type: object
    ProjectDocumentSimilarityResponse:
      example:
        data:
        - document_b_name: document_b_name
          run_id: run_id
          document_a_id: document_a_id
          document_b_id: document_b_id
          similarity: similarity
          document_a_name: document_a_name
          document_b_text: document_b_text
        - document_b_name: document_b_name
          run_id: run_id
          document_a_id: document_a_id
          document_b_id: document_b_id
          similarity: similarity
          document_a_name: document_a_name
          document_b_text: document_b_text
        document_a_id: 0
        document_a_name: document_a_name
        total_records: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectDocumentSimilarityResponse_data_inner'
          type: array
        document_a_id:
          nullable: true
          type: integer
        document_a_name:
          nullable: true
          type: string
        total_records:
          type: integer
      required:
      - data
      type: object
    TextUnitSimilarity:
      example:
        document_a__name: document_a__name
        document_a_id: document_a_id
        document_b_id: document_b_id
        text_unit_a__unit_type: text_unit_a__unit_type
        text_unit_b_id: text_unit_b_id
        run:
          items_count: 1
          project_id: project_id
          feature_source: feature_source
          unit_source: unit_source
          id: 0
          created_date: 2000-01-23T04:56:07.000+00:00
          unit_type: unit_type
          unit_id: 441289069
          created_by: 5
        text_unit_a_id: text_unit_a_id
        text_unit_a__text: text_unit_a__text
        text_unit_a__language: text_unit_a__language
        text_unit_b__unit_type: text_unit_b__unit_type
        text_unit_b__text: text_unit_b__text
        text_unit_b__language: text_unit_b__language
        similarity: similarity
        document_b__name: document_b__name
      properties:
        text_unit_a_id:
          readOnly: true
          type: string
        text_unit_a__unit_type:
          readOnly: true
          type: string
        text_unit_a__language:
          readOnly: true
          type: string
        text_unit_a__text:
          readOnly: true
          type: string
        document_a_id:
          readOnly: true
          type: string
        document_a__name:
          readOnly: true
          type: string
        text_unit_b_id:
          readOnly: true
          type: string
        text_unit_b__unit_type:
          readOnly: true
          type: string
        text_unit_b__language:
          readOnly: true
          type: string
        text_unit_b__text:
          readOnly: true
          type: string
        document_b_id:
          readOnly: true
          type: string
        document_b__name:
          readOnly: true
          type: string
        similarity:
          format: decimal
          maximum: 1000
          minimum: -1000
          multipleOf: 0.01
          type: string
        run:
          $ref: '#/components/schemas/DocumentSimilarity_run'
      required:
      - similarity
      type: object
    SimilarProjectTextUnitsRequest:
      example:
        text_max_length: 0
        text_unit_id: 1
        run_id: 6
        location_start: 5
        selection:
        - "{}"
        - "{}"
        last_run: true
        location_end: 2
        document_id: 5
      properties:
        text_max_length:
          description: "text unit b text max length, 0 to get all text"
          type: integer
        run_id:
          description: run id or text unit id required
          type: integer
        last_run:
          description: run id or last_run or text unit id required
          type: boolean
        text_unit_id:
          description: run id or text unit id required
          type: integer
        document_id:
          description: document ID
          type: integer
        location_start:
          description: start of chosen text block in a Document
          type: integer
        location_end:
          description: end of chosen text block in a Document
          type: integer
        selection:
          description: selection coordinates
          items:
            type: object
          type: array
      type: object
    ProjectTextUnitSimilarity:
      example:
        run_id: run_id
        document_a_id: document_a_id
        document_b_id: document_b_id
        text_unit_b__location_end: text_unit_b__location_end
        text_unit_b_text: text_unit_b_text
        document_a_name: document_a_name
        text_unit_a__unit_type: text_unit_a__unit_type
        text_unit_b_id: text_unit_b_id
        text_unit_a_id: text_unit_a_id
        text_unit_a__location_start: text_unit_a__location_start
        document_b_name: document_b_name
        text_unit_a_text: text_unit_a_text
        similarity: similarity
        text_unit_b__location_start: text_unit_b__location_start
        text_unit_a__location_end: text_unit_a__location_end
      properties:
        document_a_name:
          type: string
        document_a_id:
          readOnly: true
          type: string
        text_unit_a_id:
          readOnly: true
          type: string
        text_unit_a_text:
          type: string
        text_unit_a__unit_type:
          readOnly: true
          type: string
        text_unit_a__location_start:
          readOnly: true
          type: string
        text_unit_a__location_end:
          readOnly: true
          type: string
        document_b_name:
          type: string
        document_b_id:
          readOnly: true
          type: string
        text_unit_b_id:
          readOnly: true
          type: string
        text_unit_b_text:
          type: string
        text_unit_b__location_start:
          readOnly: true
          type: string
        text_unit_b__location_end:
          readOnly: true
          type: string
        similarity:
          format: decimal
          maximum: 1000
          minimum: -1000
          multipleOf: 0.01
          type: string
        run_id:
          readOnly: true
          type: string
      required:
      - document_a_name
      - document_b_name
      - similarity
      - text_unit_a_text
      - text_unit_b_text
      type: object
    PartySimilarity:
      example:
        party_a__description: party_a__description
        party_a__type_abbr: party_a__type_abbr
        party_b__name: party_b__name
        party_a__name: party_a__name
        party_a__pk: party_a__pk
        similarity: similarity
        party_b__pk: party_b__pk
        run:
          items_count: 1
          project_id: project_id
          feature_source: feature_source
          unit_source: unit_source
          id: 0
          created_date: 2000-01-23T04:56:07.000+00:00
          unit_type: unit_type
          unit_id: 441289069
          created_by: 5
        pk: 0
        party_b__type_abbr: party_b__type_abbr
      properties:
        pk:
          readOnly: true
          type: integer
        party_a__name:
          readOnly: true
          type: string
        party_a__description:
          readOnly: true
          type: string
        party_a__pk:
          readOnly: true
          type: string
        party_a__type_abbr:
          readOnly: true
          type: string
        party_b__name:
          readOnly: true
          type: string
        party_b__pk:
          readOnly: true
          type: string
        party_b__type_abbr:
          readOnly: true
          type: string
        similarity:
          format: decimal
          maximum: 1000
          minimum: -1000
          multipleOf: 0.01
          type: string
        run:
          $ref: '#/components/schemas/DocumentSimilarity_run'
      required:
      - similarity
      type: object
    MLModel:
      example:
        is_active: true
        project: 6
        vector_name: vector_name
        language: language
        version: version
        model_path: model_path
        user_modified: true
        text_unit_type: sentence
        default: true
        name: name
        apply_to: document
        target_entity: transformer
        id: 0
        codebase_version: codebase_version
      properties:
        id:
          readOnly: true
          type: integer
        name:
          description: "Model name, may include module parameters"
          maxLength: 1024
          type: string
        version:
          description: Model version
          maxLength: 1024
          type: string
        vector_name:
          maxLength: 1024
          nullable: true
          type: string
        model_path:
          description: "Model path, relative to WebDAV root folder"
          maxLength: 1024
          type: string
        is_active:
          description: Inactive models are ignored
          type: boolean
        default:
          description: The default model is used unless another model is deliberately
            selected
          type: boolean
        apply_to:
          description: Should the model be applied to documents or text units
          enum:
          - document
          - text_unit
          nullable: true
          type: string
        target_entity:
          description: The model class
          enum:
          - transformer
          - classifier
          - contract_type_classifier
          - is_contract
          nullable: true
          type: string
        language:
          description: "Language (ISO 693-1) code, may be omitted"
          maxLength: 12
          nullable: true
          type: string
        text_unit_type:
          description: "Text unit type: sentence or paragraph"
          enum:
          - sentence
          - paragraph
          nullable: true
          type: string
        codebase_version:
          description: ContraxSuite version in which the model was created
          maxLength: 64
          nullable: true
          type: string
        user_modified:
          description: User modified models are not automatically updated
          type: boolean
        project:
          description: Optional project reference
          nullable: true
          type: integer
      required:
      - apply_to
      - language
      - model_path
      - name
      - target_entity
      - version
      type: object
    Transformer:
      example:
        name: name
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        name:
          description: "Model name, may include module parameters"
          maxLength: 1024
          type: string
      required:
      - name
      type: object
    Typeahead:
      example:
        q: q
      properties:
        q:
          type: string
      required:
      - q
      type: object
    Action:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        user__name: user__name
        view_action: view_action
        model_name: model_name
        name: name
        id: 0
        message: message
        user__initials: user__initials
        request_data: "{}"
        object_pk: object_pk
        user_photo_url: user_photo_url
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 50
          type: string
        message:
          nullable: true
          type: string
        view_action:
          maxLength: 50
          nullable: true
          type: string
        object_pk:
          maxLength: 36
          nullable: true
          type: string
        model_name:
          maxLength: 50
          nullable: true
          type: string
        date:
          format: date-time
          readOnly: true
          type: string
        user__name:
          readOnly: true
          type: string
        user__initials:
          readOnly: true
          type: string
        user_photo_url:
          readOnly: true
          type: string
        request_data:
          nullable: true
          type: object
      type: object
    ReviewStatusGroup:
      example:
        code: code
        is_active: true
        name: name
        pk: 0
        order: 19750
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        code:
          maxLength: 100
          nullable: true
          type: string
        order:
          maximum: 32767
          minimum: 0
          type: integer
        is_active:
          type: boolean
      required:
      - name
      - order
      type: object
    ReviewStatusDetail:
      example:
        code: code
        group_data:
          code: code
          is_active: true
          name: name
          pk: 5
          order: 18471
        is_active: true
        name: name
        pk: 0
        order: 19750
        group: 1
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        code:
          maxLength: 100
          nullable: true
          type: string
        order:
          maximum: 32767
          minimum: 0
          type: integer
        group:
          nullable: true
          type: integer
        group_data:
          $ref: '#/components/schemas/ReviewStatusDetail_group_data'
        is_active:
          type: boolean
      required:
      - group_data
      - name
      - order
      type: object
    MenuGroup:
      example:
        public: true
        name: name
        pk: 0
        user: user
        order: 19750
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          description: Menu item group (folder) name.
          maxLength: 100
          type: string
        public:
          type: boolean
        order:
          maximum: 32767
          minimum: 0
          type: integer
        user:
          readOnly: true
          type: string
      required:
      - name
      type: object
    User:
      example:
        is_superuser: true
        is_active: true
        is_staff: true
        initials: initials
        last_name: last_name
        photo: photo
        groups:
        - 6
        - 6
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        permissions: "{}"
        organization: organization
        name: name
        id: 0
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        uid:
          format: uuid
          readOnly: true
          type: string
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
        last_name:
          maxLength: 150
          type: string
        first_name:
          maxLength: 30
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        is_superuser:
          description: Designates that this user has all permissions without explicitly
            assigning them.
          type: boolean
        is_staff:
          description: Designates whether the user can log into this admin site.
          type: boolean
        is_active:
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          type: boolean
        name:
          maxLength: 255
          type: string
        initials:
          maxLength: 2
          type: string
        organization:
          maxLength: 100
          nullable: true
          type: string
        photo:
          readOnly: true
          type: string
        permissions:
          readOnly: true
          type: object
        groups:
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
          items:
            type: integer
          type: array
      required:
      - email
      - username
      type: object
    MenuItem:
      example:
        public: true
        name: name
        pk: 0
        user: user
        url: url
        group: 6
        order: 4803
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          description: Menu item name.
          maxLength: 100
          type: string
        url:
          description: Menu item name.
          maxLength: 200
          type: string
        group:
          nullable: true
          type: integer
        public:
          type: boolean
        order:
          maximum: 32767
          minimum: 0
          type: integer
        user:
          readOnly: true
          type: string
      required:
      - name
      - url
      type: object
    AppVar:
      example:
        name: name
        category: category
        value: "{}"
      properties:
        category:
          maxLength: 100
          type: string
        name:
          maxLength: 100
          type: string
        value:
          nullable: true
          type: object
      required:
      - name
      type: object
    ProjectAppVar:
      example:
        access_type: access_type
        use_system: true
        name: name
        description: description
        category: category
        value: "{}"
        system_value: "{}"
      properties:
        category:
          type: string
        name:
          type: string
        description:
          type: string
        value:
          type: object
        access_type:
          type: string
        use_system:
          type: boolean
        system_value:
          type: object
      required:
      - access_type
      - category
      - description
      - name
      - system_value
      - use_system
      - value
      type: object
    DocumentsForUser:
      example:
        status_name: status_name
        name: name
        project: 6
        pk: 0
        document_type: document_type
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 1024
          nullable: true
          type: string
        document_type:
          nullable: true
          type: string
        project:
          nullable: true
          type: integer
        status_name:
          type: string
      required:
      - status_name
      type: object
    DocumentDownloadZipResponse:
      example:
        task_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        detail: detail
      properties:
        task_id:
          format: uuid
          type: string
        detail:
          type: string
      required:
      - detail
      - task_id
      type: object
    DocumentsForUserResponse:
      example:
        total_documents: 0
        data:
        - status_name: status_name
          name: name
          project: 1
          pk: 6
          document_type: document_type
        - status_name: status_name
          name: name
          project: 1
          pk: 6
          document_type: document_type
      properties:
        total_documents:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/DocumentsForUserResponse_data_inner'
          type: array
      required:
      - data
      - total_documents
      type: object
    DocumentDetail:
      example:
        assign_date: 2000-01-23T04:56:07.000+00:00
        user_permissions: "{}"
        description: description
        created_by_name: created_by_name
        title: title
        created_by_photo: created_by_photo
        status_data:
          code: code
          is_active: true
          name: name
          id: 5
          order: 18471
          group: 2
        available_assignees_data:
        - initials: initials
          name: name
          last_name: last_name
          photo: photo
          pk: 3
          first_name: first_name
          username: username
        - initials: initials
          name: name
          last_name: last_name
          photo: photo
          pk: 3
          first_name: first_name
          username: username
        cluster_id: cluster_id
        page_bounds:
        - - 4.145608029883936
          - 4.145608029883936
        - - 4.145608029883936
          - 4.145608029883936
        created_by_initials: created_by_initials
        modified_by_photo: modified_by_photo
        document_type: document_type
        available_statuses_data:
        - "{}"
        - "{}"
        page_locations:
        - - 2
          - 2
        - - 2
          - 2
        assignee_data:
          initials: initials
          name: name
          last_name: last_name
          photo: photo
          pk: 9
          first_name: first_name
          username: username
        modified_date: 2000-01-23T04:56:07.000+00:00
        file_size: 1294386358
        sections:
        - "{}"
        - "{}"
        field_value_objects: "{}"
        prev_id: 7
        was_opened_in_annotator: true
        folder: folder
        name: name
        modified_by_name: modified_by_name
        modified_by_initials: modified_by_initials
        pk: 0
        created_date: 2000-01-23T04:56:07.000+00:00
        assignee: 7
        position: position
        initial_annotation_id: initial_annotation_id
        documents_count: documents_count
        status: 1
        field_values: "{}"
        next_id: 1
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 1024
          nullable: true
          type: string
        document_type:
          nullable: true
          type: string
        file_size:
          maximum: 2147483647
          minimum: 0
          type: integer
        folder:
          maxLength: 1024
          nullable: true
          type: string
        created_date:
          format: date-time
          nullable: true
          type: string
        modified_date:
          format: date-time
          nullable: true
          type: string
        modified_by_name:
          type: string
        created_by_name:
          type: string
        created_by_initials:
          type: string
        created_by_photo:
          type: string
        modified_by_initials:
          type: string
        modified_by_photo:
          type: string
        status:
          nullable: true
          type: integer
        status_data:
          $ref: '#/components/schemas/DocumentDetail_status_data'
        available_statuses_data:
          items:
            type: object
          readOnly: true
          type: array
        assignee:
          nullable: true
          type: integer
        assign_date:
          format: date-time
          nullable: true
          type: string
        assignee_data:
          $ref: '#/components/schemas/DocumentDetail_assignee_data'
        available_assignees_data:
          items:
            $ref: '#/components/schemas/DocumentDetail_available_assignees_data_inner'
          nullable: true
          type: array
        description:
          nullable: true
          type: string
        title:
          maxLength: 1024
          nullable: true
          type: string
        initial_annotation_id:
          readOnly: true
          type: string
        page_locations:
          items:
            items:
              type: integer
            type: array
          readOnly: true
          type: array
        page_bounds:
          items:
            items:
              type: number
            type: array
          readOnly: true
          type: array
        field_values:
          readOnly: true
          type: object
        field_value_objects:
          readOnly: true
          type: object
        prev_id:
          readOnly: true
          type: integer
        next_id:
          readOnly: true
          type: integer
        position:
          readOnly: true
          type: string
        documents_count:
          readOnly: true
          type: string
        sections:
          items:
            type: object
          readOnly: true
          type: array
        cluster_id:
          readOnly: true
          type: string
        was_opened_in_annotator:
          readOnly: true
          type: boolean
        user_permissions:
          readOnly: true
          type: object
      required:
      - assignee_data
      - available_assignees_data
      - created_by_initials
      - created_by_name
      - created_by_photo
      - modified_by_initials
      - modified_by_name
      - modified_by_photo
      - status_data
      type: object
    DocumentDefinitions:
      example:
        definition: definition
        matches:
        - "{}"
        - "{}"
        descriptions:
        - "{}"
        - "{}"
      properties:
        definition:
          type: string
        matches:
          items:
            type: object
          type: array
        descriptions:
          items:
            type: object
          type: array
      required:
      - definition
      - descriptions
      - matches
      type: object
    DocumentPDFRepr:
      example:
        char_bboxes_list: char_bboxes_list
        pages_list: pages_list
      properties:
        char_bboxes_list:
          readOnly: true
          type: string
        pages_list:
          readOnly: true
          type: string
      type: object
    DocumentNoteDetail:
      example:
        field_id: field_id
        note: note
        selections:
        - "{}"
        - "{}"
        location_start: -1517921766
        location_end: 413233370
        pk: 0
        field_value_id: 2
        document_id: 5
        user:
          initials: initials
          name: name
          last_name: last_name
          photo: photo
          pk: 6
          first_name: first_name
          username: username
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        pk:
          readOnly: true
          type: integer
        note:
          type: string
        timestamp:
          format: date-time
          type: string
        user:
          $ref: '#/components/schemas/DocumentNoteDetail_user'
        location_start:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        location_end:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        document_id:
          type: integer
        field_value_id:
          type: integer
        field_id:
          type: string
        selections:
          items:
            type: object
          readOnly: true
          type: array
      required:
      - document_id
      - note
      type: object
    DocumentFieldList:
      example:
        classifier_init_script: classifier_init_script
        vectorizer_stop_words: vectorizer_stop_words
        metadata: "{}"
        code: code
        allow_values_not_specified_in_choices: true
        description: description
        modified_by__name: modified_by__name
        long_code: long_code
        title: title
        type: address
        value_regexp: value_regexp
        trained_after_documents_number: 1210617418
        unsure_choice_value: unsure_choice_value
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        read_only: true
        depends_on_fields:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        value_aware: true
        requires_text_annotations: true
        created_by__name: created_by__name
        hide_until_python: hide_until_python
        document_type: document_type
        order: 19536
        convert_decimals_to_floats_in_formula_args: true
        dirty: true
        confidence: High
        hide_until_js: hide_until_js
        default_value: "{}"
        value_detection_strategy_name: value_detection_strategy_name
        modified_date: 2000-01-23T04:56:07.000+00:00
        unsure_thresholds_by_value: "{}"
        text_unit_type: sentence
        mlflow_model_uri: mlflow_model_uri
        document_type__title: document_type__title
        display_yes_no: true
        training_finished: true
        mlflow_detect_on_document_level: true
        formula: formula
        value_detection_strategy: disabled
        hidden_always: true
        created_date: 2000-01-23T04:56:07.000+00:00
        category:
          name: name
          id: 0
          order: 441289069
        family:
          code: code
          id: 1
          title: title
        choices:
        - choices
        - choices
        is_value_detection_strategy_disabled: true
      properties:
        uid:
          format: uuid
          readOnly: true
          type: string
        document_type:
          type: string
        document_type__title:
          readOnly: true
          type: string
        code:
          description: "Field codes must be lowercase, should start with \na Latin\
            \ letter, and contain only Latin letters, digits, underscores. Field codes\
            \ must be unique to every Document Type."
          maxLength: 50
          type: string
        long_code:
          maxLength: 150
          type: string
        title:
          maxLength: 100
          type: string
        description:
          nullable: true
          type: string
        type:
          enum:
          - address
          - choice
          - company
          - date
          - date_recurring
          - datetime
          - duration
          - float
          - geography
          - int
          - linked_documents
          - money
          - multi_choice
          - percent
          - person
          - ratio
          - related_info
          - string
          - string_no_word_wrap
          - text
          type: string
        text_unit_type:
          enum:
          - sentence
          - paragraph
          - section
          type: string
        value_detection_strategy:
          enum:
          - disabled
          - use_regexps_only
          - use_formula_only
          - regexp_table
          - text_based_ml_only
          - fields_based_ml_only
          - fields_based_prob_ml_only
          - field_based_regexps
          - mlflow_model
          type: string
        classifier_init_script:
          nullable: true
          type: string
        formula:
          nullable: true
          type: string
        convert_decimals_to_floats_in_formula_args:
          description: "Floating point field values \n    are represented in Python\
            \ Decimal type to avoid rounding problems in machine numbers representations.\
            \ \n    Use this checkbox for converting them to Python float type before\
            \ calculating the formula. \n    Float: 0.1 + 0.2 = 0.30000000000000004.\
            \ Decimal: 0.1 + 0.2 = 0.3."
          type: boolean
        value_regexp:
          description: "This regular expression is run on the sentence \n    found\
            \ by a Field Detector and extracts a specific string value from a Text\
            \ Unit. If the regular expression returns multiple matching groups, then\
            \ the first matching group will be used by the Field. This is only applicable\
            \ to String Fields."
          nullable: true
          type: string
        depends_on_fields:
          items:
            format: uuid
            type: string
          readOnly: true
          type: array
        value_detection_strategy_name:
          readOnly: true
          type: string
        confidence:
          enum:
          - High
          - Medium
          - Low
          nullable: true
          type: string
        requires_text_annotations:
          type: boolean
        read_only:
          type: boolean
        category:
          $ref: '#/components/schemas/DocumentFieldList_category'
        family:
          $ref: '#/components/schemas/DocumentFieldList_family'
        default_value:
          description: "If populated, the Default Value will be displayed for this\
            \ Field if no other value is found by the chosen Value Detection Strategy.\
            \ Leave this form blank to have the Field Value remain empty by default.\
            \ Please wrap entries with quotes, example: “landlord”. This is only applicable\
            \ to Choice and Multi Choice Fields."
          nullable: true
          type: object
        choices:
          items:
            type: string
          readOnly: true
          type: array
        allow_values_not_specified_in_choices:
          type: boolean
        metadata:
          nullable: true
          type: object
        training_finished:
          type: boolean
        dirty:
          type: boolean
        order:
          maximum: 32767
          minimum: 0
          type: integer
        trained_after_documents_number:
          maximum: 2147483647
          minimum: 1
          type: integer
        hidden_always:
          type: boolean
        hide_until_python:
          nullable: true
          type: string
        hide_until_js:
          nullable: true
          type: string
        is_value_detection_strategy_disabled:
          readOnly: true
          type: boolean
        display_yes_no:
          description: "Checking this box will \n    display “Yes” if Related Info\
            \ text is found, and display “No” if no text is found."
          type: boolean
        value_aware:
          readOnly: true
          type: boolean
        created_by__name:
          readOnly: true
          type: string
        modified_by__name:
          readOnly: true
          type: string
        created_date:
          format: date-time
          readOnly: true
          type: string
        modified_date:
          format: date-time
          readOnly: true
          type: string
        vectorizer_stop_words:
          description: "Stop words for vectorizers \n    user in field-based ML field\
            \ detection. These stop words are excluded from going into the feature\
            \ vector part \n    build based on this field. In addition to these words\
            \ the standard sklearn \"english\" word list is used. \n    Format: each\
            \ word on new line"
          nullable: true
          type: string
        unsure_choice_value:
          description: "Makes sense for machine learning \n    strategies with \"\
            Unsure\" category. The strategy will return this value if probabilities\
            \ of all other categories \n    appear lower than the specified threshold."
          maxLength: 256
          nullable: true
          type: string
        unsure_thresholds_by_value:
          description: "Makes sense for machine learning \n    strategies with \"\
            Unsure\" category. The strategy will return concrete result (one of choice\
            \ values) only if \n    the probability of the detected value is greater\
            \ than this threshold. Otherwise the strategy returns None \n    or the\
            \ choice value specified in \"Unsure choice value\" field. Format: { \"\
            value1\": 0.9, \"value2\": 0.5, ...}.\n     Default: 0.9"
          nullable: true
          type: object
        mlflow_model_uri:
          description: "MLFlow model URI \n    understandable by the MLFlow artifact\
            \ downloading routines."
          maxLength: 1024
          nullable: true
          type: string
        mlflow_detect_on_document_level:
          description: "If true - whole \n    document text will be sent to the MLFlow\
            \ model and the field value will be returned for the whole text with no\n\
            \    annotations. If false - each text unit will be sent separately."
          type: boolean
      required:
      - code
      - document_type
      - title
      type: object
    DocumentFieldStatsResponse:
      example:
        todo: 6
        sys_generated_confirm_correct: 1
        total: 0
        deps_on_fields:
        - deps_on_fields
        - deps_on_fields
        code: code
        rejected: 5
        user_generated: 5
        title: title
      properties:
        code:
          type: string
        title:
          type: string
        total:
          type: integer
        todo:
          type: integer
        sys_generated_confirm_correct:
          type: integer
        rejected:
          type: integer
        user_generated:
          type: integer
        deps_on_fields:
          items:
            type: string
          type: array
      required:
      - code
      - deps_on_fields
      - rejected
      - sys_generated_confirm_correct
      - title
      - todo
      - total
      - user_generated
      type: object
    DocumentFieldDetail:
      example:
        classifier_init_script: classifier_init_script
        vectorizer_stop_words: vectorizer_stop_words
        metadata: "{}"
        code: code
        allow_values_not_specified_in_choices: true
        description: description
        modified_by__name: modified_by__name
        long_code: long_code
        title: title
        type: address
        value_regexp: value_regexp
        trained_after_documents_number: 314780941
        unsure_choice_value: unsure_choice_value
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        read_only: true
        depends_on_fields:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        value_aware: true
        requires_text_annotations: true
        created_by__name: created_by__name
        hide_until_python: hide_until_python
        document_type: document_type
        order: 19750
        convert_decimals_to_floats_in_formula_args: true
        dirty: true
        confidence: High
        hide_until_js: hide_until_js
        default_value: "{}"
        value_detection_strategy_name: value_detection_strategy_name
        modified_date: 2000-01-23T04:56:07.000+00:00
        unsure_thresholds_by_value: "{}"
        text_unit_type: sentence
        mlflow_model_uri: mlflow_model_uri
        document_type__title: document_type__title
        display_yes_no: true
        training_finished: true
        mlflow_detect_on_document_level: true
        formula: formula
        value_detection_strategy: disabled
        hidden_always: true
        created_date: 2000-01-23T04:56:07.000+00:00
        category: category
        family: 0
        choices:
        - choices
        - choices
        is_value_detection_strategy_disabled: true
      properties:
        uid:
          format: uuid
          readOnly: true
          type: string
        document_type:
          type: string
        document_type__title:
          readOnly: true
          type: string
        code:
          description: "Field codes must be lowercase, should start with \na Latin\
            \ letter, and contain only Latin letters, digits, underscores. Field codes\
            \ must be unique to every Document Type."
          maxLength: 50
          type: string
        long_code:
          maxLength: 150
          type: string
        title:
          maxLength: 100
          type: string
        description:
          nullable: true
          type: string
        type:
          enum:
          - address
          - choice
          - company
          - date
          - date_recurring
          - datetime
          - duration
          - float
          - geography
          - int
          - linked_documents
          - money
          - multi_choice
          - percent
          - person
          - ratio
          - related_info
          - string
          - string_no_word_wrap
          - text
          type: string
        text_unit_type:
          enum:
          - sentence
          - paragraph
          - section
          type: string
        value_detection_strategy:
          enum:
          - disabled
          - use_regexps_only
          - use_formula_only
          - regexp_table
          - text_based_ml_only
          - fields_based_ml_only
          - fields_based_prob_ml_only
          - field_based_regexps
          - mlflow_model
          type: string
        classifier_init_script:
          nullable: true
          type: string
        formula:
          nullable: true
          type: string
        convert_decimals_to_floats_in_formula_args:
          description: "Floating point field values \n    are represented in Python\
            \ Decimal type to avoid rounding problems in machine numbers representations.\
            \ \n    Use this checkbox for converting them to Python float type before\
            \ calculating the formula. \n    Float: 0.1 + 0.2 = 0.30000000000000004.\
            \ Decimal: 0.1 + 0.2 = 0.3."
          type: boolean
        value_regexp:
          description: "This regular expression is run on the sentence \n    found\
            \ by a Field Detector and extracts a specific string value from a Text\
            \ Unit. If the regular expression returns multiple matching groups, then\
            \ the first matching group will be used by the Field. This is only applicable\
            \ to String Fields."
          nullable: true
          type: string
        depends_on_fields:
          items:
            format: uuid
            type: string
          readOnly: true
          type: array
        value_detection_strategy_name:
          readOnly: true
          type: string
        confidence:
          enum:
          - High
          - Medium
          - Low
          nullable: true
          type: string
        requires_text_annotations:
          type: boolean
        read_only:
          type: boolean
        category:
          readOnly: true
          type: string
        family:
          nullable: true
          type: integer
        default_value:
          description: "If populated, the Default Value will be displayed for this\
            \ Field if no other value is found by the chosen Value Detection Strategy.\
            \ Leave this form blank to have the Field Value remain empty by default.\
            \ Please wrap entries with quotes, example: “landlord”. This is only applicable\
            \ to Choice and Multi Choice Fields."
          nullable: true
          type: object
        choices:
          items:
            type: string
          readOnly: true
          type: array
        allow_values_not_specified_in_choices:
          type: boolean
        metadata:
          nullable: true
          type: object
        training_finished:
          type: boolean
        dirty:
          type: boolean
        order:
          maximum: 32767
          minimum: 0
          type: integer
        trained_after_documents_number:
          maximum: 2147483647
          minimum: 1
          type: integer
        hidden_always:
          type: boolean
        hide_until_python:
          nullable: true
          type: string
        hide_until_js:
          nullable: true
          type: string
        is_value_detection_strategy_disabled:
          readOnly: true
          type: boolean
        display_yes_no:
          description: "Checking this box will \n    display “Yes” if Related Info\
            \ text is found, and display “No” if no text is found."
          type: boolean
        value_aware:
          readOnly: true
          type: boolean
        created_by__name:
          readOnly: true
          type: string
        modified_by__name:
          readOnly: true
          type: string
        created_date:
          format: date-time
          readOnly: true
          type: string
        modified_date:
          format: date-time
          readOnly: true
          type: string
        vectorizer_stop_words:
          description: "Stop words for vectorizers \n    user in field-based ML field\
            \ detection. These stop words are excluded from going into the feature\
            \ vector part \n    build based on this field. In addition to these words\
            \ the standard sklearn \"english\" word list is used. \n    Format: each\
            \ word on new line"
          nullable: true
          type: string
        unsure_choice_value:
          description: "Makes sense for machine learning \n    strategies with \"\
            Unsure\" category. The strategy will return this value if probabilities\
            \ of all other categories \n    appear lower than the specified threshold."
          maxLength: 256
          nullable: true
          type: string
        unsure_thresholds_by_value:
          description: "Makes sense for machine learning \n    strategies with \"\
            Unsure\" category. The strategy will return concrete result (one of choice\
            \ values) only if \n    the probability of the detected value is greater\
            \ than this threshold. Otherwise the strategy returns None \n    or the\
            \ choice value specified in \"Unsure choice value\" field. Format: { \"\
            value1\": 0.9, \"value2\": 0.5, ...}.\n     Default: 0.9"
          nullable: true
          type: object
        mlflow_model_uri:
          description: "MLFlow model URI \n    understandable by the MLFlow artifact\
            \ downloading routines."
          maxLength: 1024
          nullable: true
          type: string
        mlflow_detect_on_document_level:
          description: "If true - whole \n    document text will be sent to the MLFlow\
            \ model and the field value will be returned for the whole text with no\n\
            \    annotations. If false - each text unit will be sent separately."
          type: boolean
      required:
      - code
      - document_type
      - title
      type: object
    DocumentTypeDetail:
      example:
        metadata: "{}"
        code: code
        fields_data:
        - classifier_init_script: classifier_init_script
          vectorizer_stop_words: vectorizer_stop_words
          metadata: "{}"
          code: code
          allow_values_not_specified_in_choices: true
          description: description
          modified_by__name: modified_by__name
          long_code: long_code
          title: title
          type: address
          value_regexp: value_regexp
          trained_after_documents_number: 314780941
          unsure_choice_value: unsure_choice_value
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          read_only: true
          depends_on_fields:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value_aware: true
          requires_text_annotations: true
          created_by__name: created_by__name
          hide_until_python: hide_until_python
          document_type: document_type
          order: 19750
          convert_decimals_to_floats_in_formula_args: true
          dirty: true
          confidence: High
          hide_until_js: hide_until_js
          default_value: "{}"
          value_detection_strategy_name: value_detection_strategy_name
          modified_date: 2000-01-23T04:56:07.000+00:00
          unsure_thresholds_by_value: "{}"
          text_unit_type: sentence
          mlflow_model_uri: mlflow_model_uri
          document_type__title: document_type__title
          display_yes_no: true
          training_finished: true
          mlflow_detect_on_document_level: true
          formula: formula
          value_detection_strategy: disabled
          hidden_always: true
          created_date: 2000-01-23T04:56:07.000+00:00
          category:
            name: name
            id: 0
            order: 441289069
          family: 0
          choices:
          - choices
          - choices
          is_value_detection_strategy_disabled: true
        - classifier_init_script: classifier_init_script
          vectorizer_stop_words: vectorizer_stop_words
          metadata: "{}"
          code: code
          allow_values_not_specified_in_choices: true
          description: description
          modified_by__name: modified_by__name
          long_code: long_code
          title: title
          type: address
          value_regexp: value_regexp
          trained_after_documents_number: 314780941
          unsure_choice_value: unsure_choice_value
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          read_only: true
          depends_on_fields:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value_aware: true
          requires_text_annotations: true
          created_by__name: created_by__name
          hide_until_python: hide_until_python
          document_type: document_type
          order: 19750
          convert_decimals_to_floats_in_formula_args: true
          dirty: true
          confidence: High
          hide_until_js: hide_until_js
          default_value: "{}"
          value_detection_strategy_name: value_detection_strategy_name
          modified_date: 2000-01-23T04:56:07.000+00:00
          unsure_thresholds_by_value: "{}"
          text_unit_type: sentence
          mlflow_model_uri: mlflow_model_uri
          document_type__title: document_type__title
          display_yes_no: true
          training_finished: true
          mlflow_detect_on_document_level: true
          formula: formula
          value_detection_strategy: disabled
          hidden_always: true
          created_date: 2000-01-23T04:56:07.000+00:00
          category:
            name: name
            id: 0
            order: 441289069
          family: 0
          choices:
          - choices
          - choices
          is_value_detection_strategy_disabled: true
        search_fields:
        - search_fields
        - search_fields
        modified_by__name: modified_by__name
        title: title
        modified_date: 2000-01-23T04:56:07.000+00:00
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by__name: created_by__name
        created_date: 2000-01-23T04:56:07.000+00:00
        categories:
        - name: name
          id: 5
          order: -1158723813
        - name: name
          id: 5
          order: -1158723813
        fields_number: 5
        editor_type: save_by_field
        managers:
        - 7
        - 7
      properties:
        uid:
          format: uuid
          readOnly: true
          type: string
        title:
          maxLength: 100
          type: string
        code:
          description: "Field codes must be lowercase, should start with a Latin letter,\
            \ and contain \nonly Latin letters, digits, and underscores."
          maxLength: 50
          type: string
        fields_data:
          items:
            $ref: '#/components/schemas/DocumentTypeDetail_fields_data_inner'
          readOnly: true
          type: array
        search_fields:
          items:
            type: string
          type: array
        editor_type:
          enum:
          - save_by_field
          - save_all_fields_at_once
          type: string
        created_by__name:
          readOnly: true
          type: string
        created_date:
          format: date-time
          readOnly: true
          type: string
        modified_by__name:
          readOnly: true
          type: string
        modified_date:
          format: date-time
          readOnly: true
          type: string
        metadata:
          nullable: true
          type: object
        fields_number:
          type: integer
        categories:
          items:
            $ref: '#/components/schemas/DocumentTypeDetail_categories_inner'
          readOnly: true
          type: array
        managers:
          description: Choose which users can modify this Document Type. Users chosen
            as Managers can be of any System-Level Permission.
          items:
            type: integer
          type: array
      required:
      - code
      - fields_number
      - title
      type: object
    DocumentTypeForStats:
      properties:
        uid:
          format: uuid
          type: string
        code:
          type: string
        title:
          type: string
        fields_count:
          type: integer
        detectors_count:
          type: integer
        hide_until_python_count:
          type: integer
        hidden_always_count:
          type: integer
        hide_until_python_pcnt:
          type: number
        hidden_always_pcnt:
          type: number
        fields_data:
          items:
            type: object
          readOnly: true
          type: array
        detector_disabled_count:
          type: number
        detector_disabled_pcnt:
          type: number
        detector_use_regexps_only_count:
          type: number
        detector_use_regexps_only_pcnt:
          type: number
        detector_use_formula_only_count:
          type: number
        detector_use_formula_only_pcnt:
          type: number
        detector_regexp_table_count:
          type: number
        detector_regexp_table_pcnt:
          type: number
        detector_text_based_ml_only_count:
          type: number
        detector_text_based_ml_only_pcnt:
          type: number
        detector_fields_based_ml_only_count:
          type: number
        detector_fields_based_ml_only_pcnt:
          type: number
        detector_fields_based_prob_ml_only_count:
          type: number
        detector_fields_based_prob_ml_only_pcnt:
          type: number
        detector_field_based_regexps_count:
          type: number
        detector_field_based_regexps_pcnt:
          type: number
        detector_mlflow_model_count:
          type: number
        detector_mlflow_model_pcnt:
          type: number
      required:
      - code
      - detector_disabled_count
      - detector_disabled_pcnt
      - detector_field_based_regexps_count
      - detector_field_based_regexps_pcnt
      - detector_fields_based_ml_only_count
      - detector_fields_based_ml_only_pcnt
      - detector_fields_based_prob_ml_only_count
      - detector_fields_based_prob_ml_only_pcnt
      - detector_mlflow_model_count
      - detector_mlflow_model_pcnt
      - detector_regexp_table_count
      - detector_regexp_table_pcnt
      - detector_text_based_ml_only_count
      - detector_text_based_ml_only_pcnt
      - detector_use_formula_only_count
      - detector_use_formula_only_pcnt
      - detector_use_regexps_only_count
      - detector_use_regexps_only_pcnt
      - detectors_count
      - fields_count
      - hidden_always_count
      - hidden_always_pcnt
      - hide_until_python_count
      - hide_until_python_pcnt
      - title
      - uid
      type: object
    DocumentTypeStats:
      example:
        data:
          code: code
          detector_use_regexps_only_pcnt: 2.027123023002322
          detector_field_based_regexps_count: 9.965781217890562
          detector_disabled_count: 7.061401241503109
          detector_use_formula_only_count: 4.145608029883936
          hidden_always_pcnt: 2.3021358869347655
          detector_mlflow_model_pcnt: 8.762042012749001
          detector_text_based_ml_only_pcnt: 6.84685269835264
          title: title
          hidden_always_count: 5
          detector_fields_based_prob_ml_only_pcnt: 5.025004791520295
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          detector_mlflow_model_count: 6.683562403749608
          detector_text_based_ml_only_count: 1.4894159098541704
          detector_fields_based_prob_ml_only_count: 4.965218492984954
          fields_count: 0
          detector_use_formula_only_pcnt: 7.386281948385884
          hide_until_python_pcnt: 5.637376656633329
          detector_disabled_pcnt: 9.301444243932576
          fields_data:
          - "{}"
          - "{}"
          detector_use_regexps_only_count: 3.616076749251911
          detector_fields_based_ml_only_count: 7.457744773683766
          detector_fields_based_ml_only_pcnt: 1.1730742509559433
          detector_field_based_regexps_pcnt: 9.369310271410669
          hide_until_python_count: 1
          detectors_count: 6
          detector_regexp_table_pcnt: 1.0246457001441578
          detector_regexp_table_count: 1.2315135367772556
        count_of_items: 9
        count_of_filtered_items: 6
      properties:
        data:
          $ref: '#/components/schemas/DocumentTypeStats_data'
        count_of_items:
          type: integer
        count_of_filtered_items:
          type: integer
      required:
      - count_of_filtered_items
      - count_of_items
      - data
      type: object
    DocumentFieldCategoryList:
      example:
        name: name
        export_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 0
        fields:
        - code: code
          id: id
          category: 1
          title: title
          order: 19536
        - code: code
          id: id
          category: 1
          title: title
          order: 19536
        fields_number: 5
        document_type_title: document_type_title
        document_type: document_type
        order: 441289069
      properties:
        id:
          readOnly: true
          type: integer
        document_type:
          nullable: true
          type: string
        document_type_title:
          type: string
        name:
          maxLength: 100
          type: string
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        fields:
          items:
            $ref: '#/components/schemas/DocumentFieldCategoryList_fields_inner'
          type: array
        fields_number:
          type: integer
        export_key:
          format: uuid
          type: string
      required:
      - document_type
      - document_type_title
      - fields
      - fields_number
      - name
      type: object
    DocumentFieldDetectorDetail:
      example:
        exclude_regexps: exclude_regexps
        text_part: FULL
        detect_limit_count: -1803530559
        field__document_type__title: field__document_type__title
        definition_words: definition_words
        field__uid: field__uid
        field__type: field__type
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        detected_value: detected_value
        field: field
        field__code: field__code
        detect_limit_unit: NONE
        include_regexps:
        - include_regexps
        - include_regexps
        category: simple_config
        field__title: field__title
        extraction_hint: TAKE_FIRST
        regexps_pre_process_lower: true
      properties:
        uid:
          format: uuid
          readOnly: true
          type: string
        category:
          description: "Field detector category used for technical needs e.g. for\
            \ determining \nwhich field detectors were created automatically during\
            \ import process."
          enum:
          - simple_config
          nullable: true
          type: string
        field:
          type: string
        field__code:
          readOnly: true
          type: string
        field__title:
          readOnly: true
          type: string
        field__uid:
          readOnly: true
          type: string
        field__type:
          readOnly: true
          type: string
        field__document_type__title:
          readOnly: true
          type: string
        exclude_regexps:
          description: "Enter regular expressions, each on a new line, for text patterns\
            \ \nyou want EXCLUDED. The Field Detector will attempt to skip any Text\
            \ Unit that contains any of the patterns written \nhere, and will move\
            \ on to the next Text Unit. Avoid using “.*” and similar unlimited multipliers,\
            \ as they can crash \nor slow ContraxSuite. Use bounded multipliers for\
            \ variable length matching, like “.{0,100}” or similar. Note that \nExclude\
            \ regexps are checked before Definition words and Include regexps. If\
            \ a Field Detector has Exclude regexps, but \nno Definition words or Include\
            \ regexps, it will not extract any data."
          nullable: true
          type: string
        definition_words:
          description: "Enter words or phrases, each on a new line, that must be present\
            \ \nin the Text Unit. These words must be in the Definitions List. If\
            \ ContraxSuite fails to recognize these words as \ndefinitions, then the\
            \ Field Detector skips and moves to the next Text Unit. If there are Include\
            \ regexps, then the \nField Detector checks against those requirements.\
            \ The Field Detector marks the entire Text Unit as a match. Note that\
            \ \nthe Field Detector checks for definition words after filtering using\
            \ the Exclude regexps."
          nullable: true
          type: string
        include_regexps:
          items:
            type: string
          readOnly: true
          type: array
        regexps_pre_process_lower:
          description: Set 'ignore case' flag for both 'Include regexps' and 'Exclude
            regexps' options.
          type: boolean
        detected_value:
          description: "The string value written here \nwill be assigned to the field\
            \ if the Field Detector positively matches a Text Unit. This is only applicable\
            \ to Choice, \nMultichoice, and String fields, as their respective Field\
            \ Detectors do not extract and display values from the source \ntext."
          maxLength: 256
          nullable: true
          type: string
        extraction_hint:
          description: "Provide additional instruction on which \nspecific values\
            \ should be prioritized for extraction, when multiple values of the same\
            \ type \n(e.g., Company, Person, Geography) are found within the relevant\
            \ detected Text Unit."
          enum:
          - TAKE_FIRST
          - TAKE_SECOND
          - TAKE_LAST
          - TAKE_MIN
          - TAKE_MAX
          nullable: true
          type: string
        text_part:
          description: "Defines which part of the matched Text Unit \nshould be passed\
            \ to the extraction function. Example: In the string \"2019-01-23 is the\
            \ start date and 2019-01-24 is the \nend date,\" if text part = \"Before\
            \ matching substring\" and Include regexp is \"is.{0,100}start\" then\
            \ \"2019-01-23\" will be \nparsed correctly as the start date."
          enum:
          - FULL
          - BEFORE_REGEXP
          - AFTER_REGEXP
          - INSIDE_REGEXP
          type: string
        detect_limit_unit:
          description: "Choose to add an upward limit to the amount of document text\
            \ \n                                             ContraxSuite will search\
            \ for this Document Field. For example, you can choose \n            \
            \                                 to only search the first 10 paragraphs\
            \ of text for the value required (this \n                            \
            \                 often works best for values like “Company,” “Execution\
            \ Date,” or “Parties,”\n                                             all\
            \ of which typically appear in the first few paragraphs of a contract)."
          enum:
          - NONE
          - UNIT
          type: string
        detect_limit_count:
          description: "Specify the maximum \n    range for a bounded search. Field\
            \ detection begins at the top of the document and continues until this\
            \ Nth \n    \"Detect limit unit\" element."
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
      - field
      type: object
    DocumentFieldValue:
      example:
        field_id: field_id
        project: project
        modified_by_id: modified_by_id
        document_id: document_id
        modified_date: 2000-01-23T04:56:07.000+00:00
        field_name: field_name
        python_value: python_value
        document_name: document_name
        modified_by_username: modified_by_username
        project_id: 6
        document_status: document_status
        pk: 0
        value: "{}"
        location_text: location_text
      properties:
        pk:
          readOnly: true
          type: integer
        project_id:
          readOnly: true
          type: integer
        project:
          readOnly: true
          type: string
        document_id:
          readOnly: true
          type: string
        document_name:
          readOnly: true
          type: string
        document_status:
          readOnly: true
          type: string
        field_id:
          readOnly: true
          type: string
        field_name:
          readOnly: true
          type: string
        value:
          nullable: true
          type: object
        python_value:
          readOnly: true
          type: string
        location_text:
          readOnly: true
          type: string
        modified_by_username:
          readOnly: true
          type: string
        modified_by_id:
          readOnly: true
          type: string
        modified_date:
          format: date-time
          readOnly: true
          type: string
      type: object
    DocumentFieldAnnotation:
      example:
        field_id: field_id
        assign_date: 2000-01-23T04:56:07.000+00:00
        status_name: status_name
        modified_by_id: modified_by_id
        project_name: project_name
        document_id: document_id
        modified_date: 2000-01-23T04:56:07.000+00:00
        assignee_name: assignee_name
        field_name: field_name
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        document_name: document_name
        location_start: 314780940
        status_id: 2
        project_id: 6
        document_status: document_status
        location_end: 1280358508
        pk: 0
        value: "{}"
        location_text: location_text
        document_type: document_type
        assignee_id: 5
      properties:
        pk:
          readOnly: true
          type: integer
        uid:
          format: uuid
          readOnly: true
          type: string
        project_id:
          readOnly: true
          type: integer
        project_name:
          readOnly: true
          type: string
        document_id:
          readOnly: true
          type: string
        document_name:
          readOnly: true
          type: string
        document_type:
          readOnly: true
          type: string
        document_status:
          readOnly: true
          type: string
        field_id:
          readOnly: true
          type: string
        field_name:
          readOnly: true
          type: string
        value:
          nullable: true
          type: object
        location_start:
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        location_end:
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        location_text:
          nullable: true
          type: string
        assignee_id:
          type: integer
        assign_date:
          format: date-time
          nullable: true
          type: string
        status_id:
          type: integer
        status_name:
          readOnly: true
          type: string
        assignee_name:
          readOnly: true
          type: string
        modified_by_id:
          readOnly: true
          type: string
        modified_date:
          format: date-time
          readOnly: true
          type: string
      required:
      - assignee_id
      - status_id
      type: object
    FieldAnnotationStatus:
      example:
        is_accepted: true
        code: code
        is_active: true
        name: name
        is_rejected: true
        id: 0
        order: 19750
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        code:
          maxLength: 100
          nullable: true
          type: string
        order:
          maximum: 32767
          minimum: 0
          type: integer
        is_active:
          type: boolean
        is_accepted:
          type: boolean
        is_rejected:
          type: boolean
      required:
      - name
      - order
      type: object
    TextUnitDjangoQL:
      example:
        document_name: document_name
        project_id: project_id
        id: 0
        text: text
        unit_type: unit_type
        project_name: project_name
        document_id: document_id
      properties:
        id:
          readOnly: true
          type: integer
        unit_type:
          maxLength: 128
          type: string
        text:
          nullable: true
          type: string
        project_id:
          readOnly: true
          type: string
        project_name:
          type: string
        document_id:
          readOnly: true
          type: string
        document_name:
          type: string
      required:
      - document_name
      - project_name
      - unit_type
      type: object
    Annotation:
      example:
        location_start: 314780940
        field: field
        document: 6
        modified_by: 5
        location_end: 1280358508
        pk: 0
        modified_date: 2000-01-23T04:56:07.000+00:00
        value: "{}"
        location_text: location_text
      properties:
        pk:
          readOnly: true
          type: integer
        document:
          type: integer
        field:
          type: string
        value:
          nullable: true
          type: object
        location_start:
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        location_end:
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        location_text:
          nullable: true
          type: string
        modified_by:
          nullable: true
          type: integer
        modified_date:
          format: date-time
          readOnly: true
          type: string
      required:
      - document
      - field
      - location_end
      - location_start
      - value
      type: object
    AnnotationInDocument:
      example:
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        location_start: 314780940
        field: field
        document: 6
        modified_by: 5
        location_end: 1280358508
        pk: 0
        modified_date: 2000-01-23T04:56:07.000+00:00
        value: "{}"
        location_text: location_text
      properties:
        pk:
          readOnly: true
          type: integer
        document:
          type: integer
        value:
          nullable: true
          type: object
        field:
          type: string
        location_start:
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        location_end:
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        location_text:
          nullable: true
          type: string
        modified_by:
          nullable: true
          type: integer
        modified_date:
          format: date-time
          readOnly: true
          type: string
        uid:
          format: uuid
          readOnly: true
          type: string
      required:
      - document
      - field
      - location_end
      - location_start
      - value
      type: object
    DumpPUTErrorResponse:
      properties:
        log:
          type: string
        exception:
          type: string
      required:
      - exception
      - log
      type: object
    GeoEntityList:
      example:
        name: name
        alias: alias
        pk: 0
        entity_id: 19750
        priority: -1517921766
        category: category
      properties:
        pk:
          readOnly: true
          type: integer
        entity_id:
          maximum: 32767
          minimum: 0
          type: integer
        name:
          maxLength: 1024
          type: string
        priority:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        category:
          maxLength: 1024
          type: string
        alias:
          readOnly: true
          type: string
      required:
      - category
      - entity_id
      - name
      type: object
    Party:
      example:
        name: name
        description: description
        type_abbr: type_abbr
        pk: 0
        type_label: type_label
        type: type
        type_description: type_description
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 1024
          type: string
        type:
          maxLength: 1024
          nullable: true
          type: string
        type_abbr:
          maxLength: 30
          nullable: true
          type: string
        type_label:
          maxLength: 50
          nullable: true
          type: string
        type_description:
          maxLength: 50
          nullable: true
          type: string
        description:
          nullable: true
          type: string
      required:
      - name
      - type_abbr
      type: object
    TermUsage:
      example:
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1803530559
        term__term: term__term
        text_unit__pk: text_unit__pk
        pk: 6
        text_unit__unit_type: text_unit__unit_type
        text_unit__location_start: text_unit__location_start
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
      properties:
        term__term:
          readOnly: true
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      type: object
    TermTag:
      example:
        name: name
        pk: 0
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
      type: object
    GeoEntityUsage:
      example:
        entity__category: entity__category
        text_unit__document__description: text_unit__document__description
        entity__name: entity__name
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1803530559
        text_unit__pk: text_unit__pk
        pk: 6
        text_unit__unit_type: text_unit__unit_type
        text_unit__location_start: text_unit__location_start
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
      properties:
        entity__name:
          readOnly: true
          type: string
        entity__category:
          readOnly: true
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      type: object
    GeoAliasUsage:
      example:
        alias__locale: alias__locale
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1803530559
        alias__type: alias__type
        text_unit__unit_type: text_unit__unit_type
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
        alias__alias: alias__alias
        text_unit__pk: text_unit__pk
        pk: 6
        alias__entity__name: alias__entity__name
        alias__entity__category: alias__entity__category
        text_unit__location_start: text_unit__location_start
      properties:
        alias__alias:
          readOnly: true
          type: string
        alias__locale:
          readOnly: true
          type: string
        alias__type:
          readOnly: true
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        alias__entity__name:
          readOnly: true
          type: string
        alias__entity__category:
          readOnly: true
          type: string
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      type: object
    PartyUsage:
      example:
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1803530559
        party__type_abbr: party__type_abbr
        text_unit__unit_type: text_unit__unit_type
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
        party__name: party__name
        party__pk: party__pk
        text_unit__pk: text_unit__pk
        pk: 6
        text_unit__location_start: text_unit__location_start
      properties:
        party__name:
          readOnly: true
          type: string
        party__type_abbr:
          readOnly: true
          type: string
        party__pk:
          readOnly: true
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      type: object
    DateUsage:
      example:
        date: 2000-01-23
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1803530559
        text_unit__pk: text_unit__pk
        pk: 6
        text_unit__unit_type: text_unit__unit_type
        text_unit__location_start: text_unit__location_start
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
      properties:
        date:
          format: date
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      required:
      - date
      type: object
    DateUsageTimeline:
      example:
        per_month: false
        document_id: 0
      properties:
        document_id:
          type: integer
        per_month:
          default: false
          type: boolean
      type: object
    DateUsageCalendar:
      example:
        document_id: 0
      properties:
        document_id:
          type: integer
      type: object
    DateDurationUsage:
      example:
        amount: 0.8008281904610115
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        duration_type: duration_type
        text_unit__document__pk: text_unit__document__pk
        count: -1517921766
        text_unit__unit_type: text_unit__unit_type
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
        duration_days: 6.027456183070403
        text_unit__pk: text_unit__pk
        pk: 5
        amount_str: amount_str
        text_unit__location_start: text_unit__location_start
      properties:
        amount:
          nullable: true
          type: number
        amount_str:
          maxLength: 300
          nullable: true
          type: string
        duration_type:
          maxLength: 1024
          nullable: true
          type: string
        duration_days:
          nullable: true
          type: number
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      type: object
    DefinitionUsage:
      example:
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1803530559
        text_unit__pk: text_unit__pk
        definition: definition
        pk: 6
        text_unit__unit_type: text_unit__unit_type
        text_unit__location_start: text_unit__location_start
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
      properties:
        definition:
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      required:
      - definition
      type: object
    CourtUsage:
      example:
        court__alias: court__alias
        text_unit__document__description: text_unit__document__description
        court__name: court__name
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1803530559
        text_unit__pk: text_unit__pk
        pk: 6
        text_unit__unit_type: text_unit__unit_type
        text_unit__location_start: text_unit__location_start
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
      properties:
        court__name:
          readOnly: true
          type: string
        court__alias:
          readOnly: true
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      type: object
    CurrencyUsage:
      example:
        amount: 0.8008281904610115
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        text_unit__unit_type: text_unit__unit_type
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
        usage_type: usage_type
        text_unit__pk: text_unit__pk
        currency: currency
        pk: 6
        amount_str: amount_str
        text_unit__location_start: text_unit__location_start
      properties:
        usage_type:
          maxLength: 1024
          type: string
        currency:
          maxLength: 1024
          type: string
        amount:
          nullable: true
          type: number
        amount_str:
          maxLength: 300
          nullable: true
          type: string
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      required:
      - currency
      - usage_type
      type: object
    RegulationUsage:
      example:
        regulation_name: regulation_name
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1803530559
        regulation_type: regulation_type
        text_unit__unit_type: text_unit__unit_type
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
        entity__name: entity__name
        text_unit__pk: text_unit__pk
        pk: 6
        text_unit__location_start: text_unit__location_start
      properties:
        regulation_type:
          maxLength: 128
          type: string
        regulation_name:
          maxLength: 1024
          type: string
        entity__name:
          readOnly: true
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      required:
      - regulation_name
      - regulation_type
      type: object
    AmountUsage:
      example:
        amount: 0.8008281904610115
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: 441289069
        text_unit__pk: text_unit__pk
        pk: 1
        text_unit__unit_type: text_unit__unit_type
        amount_str: amount_str
        text_unit__location_start: text_unit__location_start
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
      properties:
        amount:
          nullable: true
          type: number
        amount_str:
          maxLength: 300
          nullable: true
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      type: object
    DistanceUsage:
      example:
        amount: 0.8008281904610115
        text_unit__document__description: text_unit__document__description
        distance_type: distance_type
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: 441289069
        text_unit__pk: text_unit__pk
        pk: 1
        text_unit__unit_type: text_unit__unit_type
        text_unit__location_start: text_unit__location_start
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
      properties:
        amount:
          nullable: true
          type: number
        distance_type:
          maxLength: 1024
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      required:
      - distance_type
      type: object
    PercentUsage:
      example:
        amount: 0.8008281904610115
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1517921766
        unit_type: unit_type
        text_unit__unit_type: text_unit__unit_type
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
        total: 6.027456183070403
        text_unit__pk: text_unit__pk
        pk: 5
        text_unit__location_start: text_unit__location_start
      properties:
        amount:
          nullable: true
          type: number
        unit_type:
          maxLength: 1024
          type: string
        total:
          nullable: true
          type: number
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      required:
      - unit_type
      type: object
    RatioUsage:
      example:
        amount: 0.8008281904610115
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: 413233370
        text_unit__unit_type: text_unit__unit_type
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
        total: 1.4658129805029452
        amount2: 6.027456183070403
        text_unit__pk: text_unit__pk
        pk: 5
        text_unit__location_start: text_unit__location_start
      properties:
        amount:
          nullable: true
          type: number
        amount2:
          nullable: true
          type: number
        total:
          nullable: true
          type: number
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      type: object
    CitationUsage:
      example:
        text_unit__document__description: text_unit__document__description
        year: 4803
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        citation_str: citation_str
        count: 413233370
        reporter: reporter
        court: court
        text_unit__unit_type: text_unit__unit_type
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
        volume: 171976544
        reporter_full_name: reporter_full_name
        page2: page2
        text_unit__pk: text_unit__pk
        page: 1294386358
        pk: 5
        text_unit__location_start: text_unit__location_start
      properties:
        volume:
          maximum: 2147483647
          minimum: 0
          type: integer
        reporter:
          maxLength: 1024
          type: string
        reporter_full_name:
          maxLength: 1024
          nullable: true
          type: string
        page:
          maximum: 2147483647
          minimum: 0
          type: integer
        page2:
          maxLength: 1024
          nullable: true
          type: string
        court:
          maxLength: 1024
          nullable: true
          type: string
        year:
          maximum: 32767
          minimum: 0
          nullable: true
          type: integer
        citation_str:
          maxLength: 1024
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      required:
      - citation_str
      - page
      - reporter
      - volume
      type: object
    CopyrightUsage:
      example:
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1803530559
        text_unit__pk: text_unit__pk
        pk: 6
        copyright_str: copyright_str
        text_unit__unit_type: text_unit__unit_type
        text_unit__location_start: text_unit__location_start
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
      properties:
        copyright_str:
          maxLength: 200
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      required:
      - copyright_str
      type: object
    TrademarkUsage:
      example:
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1803530559
        text_unit__pk: text_unit__pk
        trademark: trademark
        pk: 6
        text_unit__unit_type: text_unit__unit_type
        text_unit__location_start: text_unit__location_start
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
      properties:
        trademark:
          maxLength: 200
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      required:
      - trademark
      type: object
    UrlUsage:
      example:
        text_unit__document__description: text_unit__document__description
        text_unit__location_end: text_unit__location_end
        text_unit__document__pk: text_unit__document__pk
        count: -1803530559
        text_unit__pk: text_unit__pk
        pk: 6
        text_unit__unit_type: text_unit__unit_type
        source_url: source_url
        text_unit__location_start: text_unit__location_start
        text_unit__document__name: text_unit__document__name
        text_unit__document__document_type: text_unit__document__document_type
      properties:
        source_url:
          maxLength: 1000
          type: string
        count:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        pk:
          readOnly: true
          type: integer
        text_unit__pk:
          readOnly: true
          type: string
        text_unit__unit_type:
          readOnly: true
          type: string
        text_unit__location_start:
          readOnly: true
          type: string
        text_unit__location_end:
          readOnly: true
          type: string
        text_unit__document__pk:
          readOnly: true
          type: string
        text_unit__document__name:
          readOnly: true
          type: string
        text_unit__document__description:
          readOnly: true
          type: string
        text_unit__document__document_type:
          readOnly: true
          type: string
      required:
      - source_url
      type: object
    WebNotificationDetail:
      properties:
        is_seen:
          type: boolean
        notification:
          $ref: '#/components/schemas/WebNotificationDetail_notification'
      type: object
    TaskQueue:
      example:
        completed_documents:
        - 5
        - 5
        data: data
        documents:
        - 6
        - 6
        description: description
        reviewers_data:
        - pk: 2
          username: username
        - pk: 2
          username: username
        progress: progress
        documents_data:
        - name: name
          description: description
          pk: 1
          document_type: document_type
        - name: name
          description: description
          pk: 1
          document_type: document_type
        pk: 0
        completed_documents_data:
        - name: name
          description: description
          pk: 1
          document_type: document_type
        - name: name
          description: description
          pk: 1
          document_type: document_type
        reviewers:
        - 5
        - 5
      properties:
        pk:
          readOnly: true
          type: integer
        description:
          nullable: true
          type: string
        documents:
          items:
            type: integer
          type: array
        documents_data:
          items:
            $ref: '#/components/schemas/TaskQueue_documents_data_inner'
          readOnly: true
          type: array
        completed_documents:
          items:
            type: integer
          type: array
        completed_documents_data:
          items:
            $ref: '#/components/schemas/TaskQueue_documents_data_inner'
          readOnly: true
          type: array
        reviewers:
          items:
            type: integer
          type: array
        reviewers_data:
          items:
            $ref: '#/components/schemas/TaskQueue_reviewers_data_inner'
          readOnly: true
          type: array
        progress:
          readOnly: true
          type: string
        data:
          readOnly: true
          type: string
      type: object
    ProjectList:
      example:
        type_data:
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          code: code
          title: title
        count_of_documents: 2
        name: name
        pk: 0
        type: type
        status_data:
          code: code
          is_active: true
          name: name
          id: 1
          order: 19536
          group: 5
        status: 6
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        status:
          type: integer
        status_data:
          $ref: '#/components/schemas/ProjectList_status_data'
        type:
          type: string
        type_data:
          $ref: '#/components/schemas/ProjectList_type_data'
        count_of_documents:
          type: integer
      required:
      - count_of_documents
      - name
      - type_data
      type: object
    ProjectStats:
      example:
        document_status_loaded_pcnt: 2.3021358869347655
        clauses_total: 1
        document_status_loaded: 5
        document_status_awaiting_qa: 4
        document_status_completed_pcnt: 1.0246457001441578
        clause_status_unreviewed: 7
        document_status_not_started: 7
        document_status_awaiting_qa_pcnt: 7.386281948385884
        document_status_excluded: 1
        clause_status_accepted: 4
        clause_status_rejected: 9
        document_status_in_review: 3
        document_status_not_started_pcnt: 9.301444243932576
        clause_status_rejected_pcnt: 9.369310271410669
        document_status_in_review_pcnt: 2.027123023002322
        document_status_excluded_pcnt: 6.84685269835264
        project_id: 0
        clause_status_unreviewed_pcnt: 1.1730742509559433
        document_status_completed: 1
        name: name
        documents_total: 6
        avg_ocr_grade: 5
        type_title: type_title
        clause_status_accepted_pcnt: 5.025004791520295
      properties:
        project_id:
          type: integer
        name:
          type: string
        type_title:
          type: string
        documents_total:
          type: integer
        clauses_total:
          type: integer
        avg_ocr_grade:
          nullable: true
          type: integer
        document_status_loaded:
          type: integer
        document_status_loaded_pcnt:
          type: number
        document_status_not_started:
          type: integer
        document_status_not_started_pcnt:
          type: number
        document_status_in_review:
          type: integer
        document_status_in_review_pcnt:
          type: number
        document_status_awaiting_qa:
          type: integer
        document_status_awaiting_qa_pcnt:
          type: number
        document_status_completed:
          type: integer
        document_status_completed_pcnt:
          type: number
        document_status_excluded:
          type: integer
        document_status_excluded_pcnt:
          type: number
        clause_status_unreviewed:
          type: integer
        clause_status_unreviewed_pcnt:
          type: number
        clause_status_accepted:
          type: integer
        clause_status_accepted_pcnt:
          type: number
        clause_status_rejected:
          type: integer
        clause_status_rejected_pcnt:
          type: number
      required:
      - avg_ocr_grade
      - clause_status_accepted
      - clause_status_accepted_pcnt
      - clause_status_rejected
      - clause_status_rejected_pcnt
      - clause_status_unreviewed
      - clause_status_unreviewed_pcnt
      - clauses_total
      - document_status_awaiting_qa
      - document_status_awaiting_qa_pcnt
      - document_status_completed
      - document_status_completed_pcnt
      - document_status_excluded
      - document_status_excluded_pcnt
      - document_status_in_review
      - document_status_in_review_pcnt
      - document_status_loaded
      - document_status_loaded_pcnt
      - document_status_not_started
      - document_status_not_started_pcnt
      - documents_total
      - name
      - project_id
      - type_title
      type: object
    ProjectDetail:
      example:
        text_unit_transformer: 4
        junior_reviewers:
        - 9
        - 9
        junior_reviewers_data:
        - is_superuser: true
          is_active: true
          is_staff: true
          initials: initials
          last_name: last_name
          photo: photo
          groups:
          - 5
          - 5
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissions: "{}"
          organization: organization
          name: name
          id: 5
          first_name: first_name
          email: email
          username: username
        - is_superuser: true
          is_active: true
          is_staff: true
          initials: initials
          last_name: last_name
          photo: photo
          groups:
          - 5
          - 5
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissions: "{}"
          organization: organization
          name: name
          id: 5
          first_name: first_name
          email: email
          username: username
        send_email_notification: true
        super_reviewers_data:
        - is_superuser: true
          is_active: true
          is_staff: true
          initials: initials
          last_name: last_name
          photo: photo
          groups:
          - 5
          - 5
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissions: "{}"
          organization: organization
          name: name
          id: 5
          first_name: first_name
          email: email
          username: username
        - is_superuser: true
          is_active: true
          is_staff: true
          initials: initials
          last_name: last_name
          photo: photo
          groups:
          - 5
          - 5
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissions: "{}"
          organization: organization
          name: name
          id: 5
          first_name: first_name
          email: email
          username: username
        user_permissions: user_permissions
        document_similarity_run_params: document_similarity_run_params
        description: description
        reviewers_data:
        - is_superuser: true
          is_active: true
          is_staff: true
          initials: initials
          last_name: last_name
          photo: photo
          groups:
          - 5
          - 5
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissions: "{}"
          organization: organization
          name: name
          id: 5
          first_name: first_name
          email: email
          username: username
        - is_superuser: true
          is_active: true
          is_staff: true
          initials: initials
          last_name: last_name
          photo: photo
          groups:
          - 5
          - 5
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissions: "{}"
          organization: organization
          name: name
          id: 5
          first_name: first_name
          email: email
          username: username
        owners:
        - 1
        - 1
        created_by_name: created_by_name
        type: type
        status_data:
          code: code
          is_active: true
          name: name
          id: 1
          order: 19536
          group: 5
        document_transformer: 2
        owners_data:
        - is_superuser: true
          is_active: true
          is_staff: true
          initials: initials
          last_name: last_name
          photo: photo
          groups:
          - 5
          - 5
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissions: "{}"
          organization: organization
          name: name
          id: 5
          first_name: first_name
          email: email
          username: username
        - is_superuser: true
          is_active: true
          is_staff: true
          initials: initials
          last_name: last_name
          photo: photo
          groups:
          - 5
          - 5
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissions: "{}"
          organization: organization
          name: name
          id: 5
          first_name: first_name
          email: email
          username: username
        app_vars: app_vars
        super_reviewers:
        - 7
        - 7
        hide_clause_review: true
        term_tags:
        - 3
        - 3
        type_data:
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          code: code
          title: title
        text_unit_similarity_process_allowed: text_unit_similarity_process_allowed
        text_unit_similarity_run_params: text_unit_similarity_run_params
        modified_date: 2000-01-23T04:56:07.000+00:00
        companytype_tags:
        - 7
        - 7
        reviewers:
        - 2
        - 2
        document_similarity_process_allowed: document_similarity_process_allowed
        name: name
        modified_by_name: modified_by_name
        progress: progress
        pk: 0
        created_date: 2000-01-23T04:56:07.000+00:00
        status: 6
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        description:
          nullable: true
          type: string
        created_date:
          format: date-time
          nullable: true
          type: string
        created_by_name:
          type: string
        modified_date:
          format: date-time
          nullable: true
          type: string
        modified_by_name:
          type: string
        send_email_notification:
          type: boolean
        hide_clause_review:
          type: boolean
        status:
          type: integer
        status_data:
          $ref: '#/components/schemas/ProjectList_status_data'
        owners:
          items:
            type: integer
          type: array
        owners_data:
          items:
            $ref: '#/components/schemas/ProjectDetail_owners_data_inner'
          readOnly: true
          type: array
        reviewers:
          items:
            type: integer
          type: array
        reviewers_data:
          items:
            $ref: '#/components/schemas/ProjectDetail_owners_data_inner'
          readOnly: true
          type: array
        super_reviewers:
          items:
            type: integer
          type: array
        super_reviewers_data:
          items:
            $ref: '#/components/schemas/ProjectDetail_owners_data_inner'
          readOnly: true
          type: array
        junior_reviewers:
          items:
            type: integer
          type: array
        junior_reviewers_data:
          items:
            $ref: '#/components/schemas/ProjectDetail_owners_data_inner'
          readOnly: true
          type: array
        type:
          type: string
        type_data:
          $ref: '#/components/schemas/ProjectList_type_data'
        progress:
          readOnly: true
          type: string
        user_permissions:
          readOnly: true
          type: string
        term_tags:
          items:
            type: integer
          type: array
        document_transformer:
          nullable: true
          type: integer
        text_unit_transformer:
          nullable: true
          type: integer
        companytype_tags:
          items:
            type: integer
          type: array
        app_vars:
          readOnly: true
          type: string
        document_similarity_run_params:
          readOnly: true
          type: string
        text_unit_similarity_run_params:
          nullable: true
          readOnly: true
          type: string
        document_similarity_process_allowed:
          readOnly: true
          type: string
        text_unit_similarity_process_allowed:
          readOnly: true
          type: string
      required:
      - created_by_name
      - modified_by_name
      - name
      - type_data
      type: object
    ProjectActiveTasks:
      example:
        locate_companies_in_progress: true
        text_unit_transformer_change_in_progress: true
        tasks:
          user__name: user__name
          description: description
          date_work_start: 2000-01-23T04:56:07.000+00:00
          date_done: 2000-01-23T04:56:07.000+00:00
          verbose_name: verbose_name
          date_start: 2000-01-23T04:56:07.000+00:00
          name: name
          progress: 171976544
          id: id
          work_time: work_time
          worker: worker
          total_time: total_time
          status: FAILURE
        document_transformer_change_in_progress: true
        locate_terms_in_progress: true
      properties:
        tasks:
          $ref: '#/components/schemas/ProjectActiveTasks_tasks'
        document_transformer_change_in_progress:
          type: boolean
        text_unit_transformer_change_in_progress:
          type: boolean
        locate_terms_in_progress:
          type: boolean
        locate_companies_in_progress:
          type: boolean
      required:
      - document_transformer_change_in_progress
      - locate_companies_in_progress
      - locate_terms_in_progress
      - tasks
      - text_unit_transformer_change_in_progress
      type: object
    ProjectAnnotationsAssigneesResponse:
      example:
        annotation_uids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        annotations_count: 6
        assignee_name: assignee_name
        assignee_id: 0
      properties:
        assignee_id:
          type: integer
        assignee_name:
          type: string
        annotations_count:
          type: integer
        annotation_uids:
          items:
            format: uuid
            type: string
          type: array
      required:
      - annotation_uids
      - annotations_count
      - assignee_id
      - assignee_name
      type: object
    ProjectDocumentsAssigneesResponse:
      example:
        document_ids:
        - 1
        - 1
        assignee_name: assignee_name
        documents_count: 6
        assignee_id: 0
      properties:
        assignee_id:
          type: integer
        assignee_name:
          type: string
        documents_count:
          type: integer
        document_ids:
          items:
            type: integer
          type: array
      required:
      - assignee_id
      - assignee_name
      - document_ids
      - documents_count
      type: object
    ProjectProgressResponse:
      example:
        project_has_completed_sessions: true
        other_uncompleted_session_progress: "{}"
        clustering: clustering
        user_uncompleted_session_progress: "{}"
        require_clustering: true
      properties:
        project_has_completed_sessions:
          type: boolean
        user_uncompleted_session_progress:
          nullable: true
          type: object
        other_uncompleted_session_progress:
          nullable: true
          type: object
        clustering:
          type: string
        require_clustering:
          type: boolean
      required:
      - other_uncompleted_session_progress
      - project_has_completed_sessions
      - user_uncompleted_session_progress
      type: object
    TaskLogResponse:
      example:
        filtered_records_count: 6
        records:
          task_name: task_name
          log_level: log_level
          stack_trace: stack_trace
          message: message
          timestamp: 2000-01-23T04:56:07.000+00:00
        current_records_count: 1
        total_records_count: 0
      properties:
        records:
          $ref: '#/components/schemas/TaskLogResponse_records'
        total_records_count:
          type: integer
        filtered_records_count:
          type: integer
        current_records_count:
          type: integer
      required:
      - current_records_count
      - filtered_records_count
      - records
      - total_records_count
      type: object
    ProjectTasks:
      example:
        user__name: user__name
        description: description
        date_work_start: 2000-01-23T04:56:07.000+00:00
        date_done: 2000-01-23T04:56:07.000+00:00
        verbose_name: verbose_name
        date_start: 2000-01-23T04:56:07.000+00:00
        name: name
        progress: 171976544
        id: id
        work_time: work_time
        worker: worker
        total_time: total_time
        status: FAILURE
      properties:
        id:
          maxLength: 255
          type: string
        name:
          maxLength: 100
          nullable: true
          type: string
        verbose_name:
          type: string
        user__name:
          readOnly: true
          type: string
        worker:
          maxLength: 1024
          nullable: true
          type: string
        status:
          enum:
          - FAILURE
          - PENDING
          - RECEIVED
          - RETRY
          - REVOKED
          - STARTED
          - SUCCESS
          nullable: true
          type: string
        progress:
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        description:
          readOnly: true
          type: string
        date_start:
          format: date-time
          type: string
        date_work_start:
          format: date-time
          type: string
        date_done:
          format: date-time
          type: string
        total_time:
          type: string
        work_time:
          type: string
      required:
      - date_done
      - date_start
      - date_work_start
      - total_time
      - verbose_name
      - work_time
      type: object
    ProjectClustering:
      example:
        reason: reason
        metadata: "{}"
        document_clusters:
        - cluster_id: -1517921766
          name: name
          pk: 6
          documents_count: 5
        - cluster_id: -1517921766
          name: name
          pk: 6
          documents_count: 5
        pk: 0
        created_date: 2000-01-23T04:56:07.000+00:00
        project_clusters_documents_count: 5
        status: status
        project_clusters_actions_count: 2
      properties:
        pk:
          readOnly: true
          type: integer
        document_clusters:
          items:
            $ref: '#/components/schemas/ProjectClustering_document_clusters_inner'
          readOnly: true
          type: array
        metadata:
          nullable: true
          type: object
        created_date:
          format: date-time
          readOnly: true
          type: string
        status:
          readOnly: true
          type: string
        reason:
          nullable: true
          type: string
        project_clusters_documents_count:
          type: integer
        project_clusters_actions_count:
          readOnly: true
          type: integer
      required:
      - project_clusters_documents_count
      type: object
    UploadSessionDetail:
      example:
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        is_canceling: is_canceling
        project: 0
        progress: progress
        created_date: 2000-01-23T04:56:07.000+00:00
        completed: true
        created_by:
          pk: 2
          username: username
        document_type: document_type
      properties:
        uid:
          format: uuid
          readOnly: true
          type: string
        project:
          nullable: true
          type: integer
        created_by:
          $ref: '#/components/schemas/TaskQueue_reviewers_data_inner'
        created_date:
          format: date-time
          readOnly: true
          type: string
        document_type:
          readOnly: true
          type: string
        progress:
          readOnly: true
          type: string
        completed:
          nullable: true
          type: boolean
        is_canceling:
          readOnly: true
          type: string
      required:
      - created_by
      type: object
    ProjectUploadSessionProgressResponse:
      example:
        document_tasks_progress_total: 1.4658129805029452
        document_tasks_progress: 6.027456183070403
        project_id: 0
        session_status: session_status
        documents_total_size: 5
      properties:
        project_id:
          type: integer
        document_tasks_progress:
          nullable: true
          type: number
        document_tasks_progress_total:
          nullable: true
          type: number
        documents_total_size:
          type: integer
        session_status:
          nullable: true
          type: string
      required:
      - document_tasks_progress
      - document_tasks_progress_total
      - documents_total_size
      - project_id
      - session_status
      type: object
    ProjectClusteringStatusResponse:
      example:
        document_clusters:
        - "{}"
        - "{}"
        project_clusters_documents_count: 0
        project_clusters_actions_count: 6
        status: status
      properties:
        document_clusters:
          items:
            type: object
          type: array
        project_clusters_documents_count:
          type: integer
        project_clusters_actions_count:
          type: integer
        status:
          nullable: true
          type: string
      required:
      - document_clusters
      - project_clusters_actions_count
      - project_clusters_documents_count
      - status
      type: object
    SimilarityForm:
      example:
        use_idf: true
        search_similar_text_units: true
        similarity_threshold: 0
        project: ""
        search_similar_documents: true
        run_name: run_name
        delete: true
      properties:
        run_name:
          type: string
        search_similar_documents:
          type: boolean
        search_similar_text_units:
          type: boolean
        similarity_threshold:
          default: 75
          nullable: true
          type: integer
        project:
          enum:
          - ""
          - 2
          - 1
          type: string
        use_idf:
          type: boolean
        delete:
          type: boolean
      required:
      - delete
      - project
      - run_name
      - search_similar_documents
      - search_similar_text_units
      - use_idf
      type: object
    SimilarityPOSTObjectResponse:
      example:
        confirm: true
        task_id: task_id
        detail: detail
      properties:
        detail:
          type: string
        task_id:
          type: string
        confirm:
          type: boolean
      required:
      - detail
      type: object
    DocumentSimilarityByFeaturesForm:
      example:
        use_tfidf: true
        feature_source: term
        distance_type: cosine
        item_id: 1
        similarity_threshold: 0
        project: 6
        run_name: run_name
        create_reverse_relations: true
        delete: true
      properties:
        run_name:
          type: string
        similarity_threshold:
          default: 75
          nullable: true
          type: integer
        project:
          type: integer
        feature_source:
          default: term
          enum:
          - date
          - definition
          - duration
          - court
          - currency_name
          - currency_value
          - term
          - party
          - geoentity
          nullable: true
          type: string
        distance_type:
          default: cosine
          enum:
          - braycurtis
          - canberra
          - chebyshev
          - cityblock
          - correlation
          - cosine
          - dice
          - euclidean
          - hamming
          - jaccard
          - jensenshannon
          - kulsinski
          - kulczynski1
          - mahalanobis
          - minkowski
          - rogerstanimoto
          - russellrao
          - seuclidean
          - sokalmichener
          - sokalsneath
          - sqeuclidean
          - yule
          nullable: true
          type: string
        item_id:
          type: integer
        create_reverse_relations:
          type: boolean
        use_tfidf:
          type: boolean
        delete:
          type: boolean
      required:
      - create_reverse_relations
      - delete
      - item_id
      - project
      - run_name
      - use_tfidf
      type: object
    TextUnitSimilarityByFeaturesForm:
      example:
        use_tfidf: true
        feature_source: term
        distance_type: cosine
        item_id: 1
        similarity_threshold: 0
        project: 6
        unit_type: sentence
        run_name: run_name
        create_reverse_relations: true
        delete: true
      properties:
        run_name:
          type: string
        similarity_threshold:
          default: 75
          nullable: true
          type: integer
        project:
          type: integer
        feature_source:
          default: term
          enum:
          - date
          - definition
          - duration
          - court
          - currency_name
          - currency_value
          - term
          - party
          - geoentity
          nullable: true
          type: string
        distance_type:
          default: cosine
          enum:
          - braycurtis
          - canberra
          - chebyshev
          - cityblock
          - correlation
          - cosine
          - dice
          - euclidean
          - hamming
          - jaccard
          - jensenshannon
          - kulsinski
          - kulczynski1
          - mahalanobis
          - minkowski
          - rogerstanimoto
          - russellrao
          - seuclidean
          - sokalmichener
          - sokalsneath
          - sqeuclidean
          - yule
          nullable: true
          type: string
        item_id:
          type: integer
        create_reverse_relations:
          type: boolean
        use_tfidf:
          type: boolean
        delete:
          type: boolean
        unit_type:
          default: sentence
          enum:
          - null
          - sentence
          - paragraph
          nullable: true
          type: string
      required:
      - create_reverse_relations
      - delete
      - item_id
      - project
      - run_name
      - use_tfidf
      type: object
    ProjectDocumentsSimilarityByVectorsForm:
      example:
        use_tfidf: true
        feature_source: vector
        distance_type: cosine
        item_id: 1
        similarity_threshold: 0
        project: 6
        run_name: run_name
        create_reverse_relations: true
        delete: true
      properties:
        run_name:
          type: string
        similarity_threshold:
          default: 75
          nullable: true
          type: integer
        project:
          type: integer
        feature_source:
          default: vector
          nullable: true
          type: string
        distance_type:
          default: cosine
          enum:
          - braycurtis
          - canberra
          - chebyshev
          - cityblock
          - correlation
          - cosine
          - dice
          - euclidean
          - hamming
          - jaccard
          - jensenshannon
          - kulsinski
          - kulczynski1
          - mahalanobis
          - minkowski
          - rogerstanimoto
          - russellrao
          - seuclidean
          - sokalmichener
          - sokalsneath
          - sqeuclidean
          - yule
          nullable: true
          type: string
        item_id:
          type: integer
        create_reverse_relations:
          type: boolean
        use_tfidf:
          type: boolean
        delete:
          type: boolean
      required:
      - create_reverse_relations
      - delete
      - item_id
      - project
      - run_name
      - use_tfidf
      type: object
    ProjectTextUnitsSimilarityByVectorsForm:
      example:
        feature_source: vector
        item_id: 1
        similarity_threshold: 0
        project: 6
        unit_type: sentence
        document_id: 5
        create_reverse_relations: true
        delete: true
        use_tfidf: true
        location_start: 5
        distance_type: cosine
        location_end: 2
        run_name: run_name
      properties:
        run_name:
          type: string
        similarity_threshold:
          default: 75
          nullable: true
          type: integer
        project:
          type: integer
        feature_source:
          default: vector
          nullable: true
          type: string
        distance_type:
          default: cosine
          enum:
          - braycurtis
          - canberra
          - chebyshev
          - cityblock
          - correlation
          - cosine
          - dice
          - euclidean
          - hamming
          - jaccard
          - jensenshannon
          - kulsinski
          - kulczynski1
          - mahalanobis
          - minkowski
          - rogerstanimoto
          - russellrao
          - seuclidean
          - sokalmichener
          - sokalsneath
          - sqeuclidean
          - yule
          nullable: true
          type: string
        item_id:
          type: integer
        create_reverse_relations:
          type: boolean
        use_tfidf:
          type: boolean
        delete:
          type: boolean
        unit_type:
          default: sentence
          enum:
          - null
          - sentence
          - paragraph
          nullable: true
          type: string
        document_id:
          type: integer
        location_start:
          type: integer
        location_end:
          type: integer
      required:
      - create_reverse_relations
      - delete
      - document_id
      - item_id
      - location_end
      - location_start
      - project
      - run_name
      - use_tfidf
      type: object
    PartySimilarityForm:
      example:
        case_sensitive: true
        similarity_type: token_set_ratio
        similarity_threshold: 0
        run_name: run_name
        delete: true
      properties:
        run_name:
          type: string
        case_sensitive:
          type: boolean
        similarity_type:
          default: token_set_ratio
          enum:
          - token_set_ratio
          - token_sort_ratio
          nullable: true
          type: string
        similarity_threshold:
          default: 90
          nullable: true
          type: integer
        delete:
          type: boolean
      required:
      - case_sensitive
      - delete
      - run_name
      type: object
    Task:
      example:
        date_done: 2000-01-23T04:56:07.000+00:00
        duration: duration
        date_start: 2000-01-23T04:56:07.000+00:00
        user__username: user__username
        name: name
        progress: 171976544
        description: description
        pk: pk
        date_work_start: 2000-01-23T04:56:07.000+00:00
        status: FAILURE
        has_error: has_error
      properties:
        pk:
          maxLength: 255
          type: string
        name:
          maxLength: 100
          nullable: true
          type: string
        date_start:
          format: date-time
          type: string
        date_work_start:
          format: date-time
          nullable: true
          type: string
        user__username:
          readOnly: true
          type: string
        date_done:
          format: date-time
          nullable: true
          type: string
        duration:
          readOnly: true
          type: string
        progress:
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        status:
          enum:
          - FAILURE
          - PENDING
          - RECEIVED
          - RETRY
          - REVOKED
          - STARTED
          - SUCCESS
          nullable: true
          type: string
        has_error:
          readOnly: true
          type: string
        description:
          readOnly: true
          type: string
      type: object
    UserStats:
      example:
        clauses_todo_pcnt: 7.386281948385884
        group_name: group_name
        documents_completed: 5
        user_name: user_name
        documents_todo_pcnt: 7.061401241503109
        clauses_assigned: 9
        clauses_completed_pcnt: 4.145608029883936
        clauses_todo: 2
        documents_assigned: 1
        total_projects: 6
        id: 0
        clauses_completed: 3
        documents_todo: 5
        documents_completed_pcnt: 2.3021358869347655
      properties:
        id:
          type: integer
        user_name:
          type: string
        group_name:
          nullable: true
          type: string
        total_projects:
          type: integer
        documents_assigned:
          type: integer
        documents_completed:
          type: integer
        documents_todo:
          type: integer
        documents_completed_pcnt:
          type: number
        documents_todo_pcnt:
          type: number
        clauses_assigned:
          type: integer
        clauses_completed:
          type: integer
        clauses_todo:
          type: integer
        clauses_completed_pcnt:
          type: number
        clauses_todo_pcnt:
          type: number
      required:
      - clauses_assigned
      - clauses_completed
      - clauses_completed_pcnt
      - clauses_todo
      - clauses_todo_pcnt
      - documents_assigned
      - documents_completed
      - documents_completed_pcnt
      - documents_todo
      - documents_todo_pcnt
      - group_name
      - id
      - total_projects
      - user_name
      type: object
    SocialClientList:
      example:
        urls:
          authorize_url: https://openapi-generator.tech
          login_url: https://openapi-generator.tech
          profile_url: https://openapi-generator.tech
          access_token_url: https://openapi-generator.tech
        provider: elevate
        name: name
        client_id: client_id
      properties:
        provider:
          enum:
          - elevate
          - office365
          - google
          - okta
          type: string
        name:
          maxLength: 40
          type: string
        client_id:
          description: "App ID, or consumer key"
          maxLength: 191
          type: string
        urls:
          $ref: '#/components/schemas/SocialClientList_urls'
      required:
      - client_id
      - name
      - provider
      type: object
    Login:
      example:
        password: password
        email: email
        username: username
      properties:
        username:
          type: string
        email:
          format: email
          type: string
        password:
          type: string
      required:
      - password
      type: object
    LoginResponse:
      example:
        user_name: user_name
        user: user
        key: key
      properties:
        key:
          maxLength: 40
          type: string
        user_name:
          readOnly: true
          type: string
        user:
          readOnly: true
          type: string
      required:
      - key
      type: object
    CustomPasswordReset:
      example:
        email: email
      properties:
        email:
          format: email
          type: string
      required:
      - email
      type: object
    CustomPasswordResetConfirm:
      example:
        uid: uid
        new_password1: new_password1
        new_password2: new_password2
        token: token
      properties:
        new_password1:
          maxLength: 128
          type: string
        new_password2:
          maxLength: 128
          type: string
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
      type: object
    CustomPasswordChange:
      example:
        old_password: old_password
        new_password: new_password
      properties:
        old_password:
          maxLength: 128
          type: string
        new_password:
          maxLength: 128
          type: string
      required:
      - new_password
      - old_password
      type: object
    TextUnitClassificationCreate:
      example:
        text_unit_id: 6
        user_id: 1
        pk: 0
        class_name: class_name
        class_value: class_value
      properties:
        pk:
          readOnly: true
          type: integer
        class_name:
          maxLength: 1024
          type: string
        class_value:
          maxLength: 1024
          type: string
        text_unit_id:
          type: integer
        user_id:
          readOnly: true
          type: integer
      required:
      - class_name
      - class_value
      - text_unit_id
      type: object
    ReviewStatus:
      example:
        code: code
        is_active: true
        name: name
        id: 0
        order: 19750
        group: 1
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        code:
          maxLength: 100
          nullable: true
          type: string
        order:
          maximum: 32767
          minimum: 0
          type: integer
        is_active:
          type: boolean
        group:
          nullable: true
          type: integer
      required:
      - name
      - order
      type: object
    MarkUnmarkForDeleteDocumentsRequest:
      example:
        all: true
        document_ids:
        - 6
        - 6
        project_id: 0
      properties:
        all:
          type: boolean
        project_id:
          type: integer
        document_ids:
          items:
            type: integer
          type: array
      required:
      - project_id
      type: object
    MarkUnmarkForDeleteDocumentsResponse:
      example:
        count_deleted: 0
      properties:
        count_deleted:
          type: integer
      required:
      - count_deleted
      type: object
    DocumentSetAnnotatorCoordinatesDifferenceRequest:
      example:
        first_letters:
        - letter: letter
          x: 6.027456183070403
          "y": 1.4658129805029452
        - letter: letter
          x: 6.027456183070403
          "y": 1.4658129805029452
        document_id: 0
      properties:
        document_id:
          type: integer
        first_letters:
          items:
            $ref: '#/components/schemas/DocumentSetAnnotatorCoordinatesDifferenceRequest_first_letters_inner'
          type: array
      required:
      - document_id
      - first_letters
      type: object
    DocumentSetAnnotatorCoordinatesDifferenceResponse:
      example:
        updated: true
      properties:
        updated:
          type: boolean
      required:
      - updated
      type: object
    DocumentNoteCreate:
      example:
        field_id: field_id
        note: note
        selections:
        - "{}"
        - "{}"
        location_start: 441289069
        user_id: user_id
        location_end: -1517921766
        pk: 0
        field_value_id: 5
        document_id: 5
        user:
          initials: initials
          name: name
          last_name: last_name
          photo: photo
          pk: 6
          first_name: first_name
          username: username
        timestamp: 2000-01-23T04:56:07.000+00:00
        username: username
      properties:
        pk:
          readOnly: true
          type: integer
        note:
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        location_start:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        location_end:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        document_id:
          type: integer
        field_value_id:
          type: integer
        field_id:
          type: string
        user_id:
          readOnly: true
          type: string
        username:
          maxLength: 200
          nullable: true
          type: string
        user:
          $ref: '#/components/schemas/DocumentNoteDetail_user'
        selections:
          items:
            type: object
          readOnly: true
          type: array
      required:
      - document_id
      - note
      type: object
    DocumentFieldCreate:
      example:
        classifier_init_script: classifier_init_script
        vectorizer_stop_words: vectorizer_stop_words
        metadata: "{}"
        code: code
        allow_values_not_specified_in_choices: true
        description: description
        long_code: long_code
        title: title
        type: address
        value_regexp: value_regexp
        trained_after_documents_number: 1280358509
        unsure_choice_value: unsure_choice_value
        read_only: true
        depends_on_fields:
        - depends_on_fields
        - depends_on_fields
        requires_text_annotations: true
        hide_until_python: hide_until_python
        document_type: document_type
        order: 4803
        convert_decimals_to_floats_in_formula_args: true
        dirty: true
        confidence: High
        hide_until_js: hide_until_js
        default_value: "{}"
        unsure_thresholds_by_value: "{}"
        warning_message: warning_message
        text_unit_type: sentence
        mlflow_model_uri: mlflow_model_uri
        display_yes_no: true
        training_finished: true
        mlflow_detect_on_document_level: true
        formula: formula
        value_detection_strategy: disabled
        hidden_always: true
        category: 0
        family: 6
        choices: choices
      properties:
        document_type:
          type: string
        code:
          description: "Field codes must be lowercase, should start with \na Latin\
            \ letter, and contain only Latin letters, digits, underscores. Field codes\
            \ must be unique to every Document Type."
          maxLength: 50
          type: string
        long_code:
          maxLength: 150
          readOnly: true
          type: string
        title:
          maxLength: 100
          type: string
        description:
          nullable: true
          type: string
        type:
          enum:
          - address
          - choice
          - company
          - date
          - date_recurring
          - datetime
          - duration
          - float
          - geography
          - int
          - linked_documents
          - money
          - multi_choice
          - percent
          - person
          - ratio
          - related_info
          - string
          - string_no_word_wrap
          - text
          type: string
        text_unit_type:
          enum:
          - sentence
          - paragraph
          - section
          type: string
        value_detection_strategy:
          enum:
          - disabled
          - use_regexps_only
          - use_formula_only
          - regexp_table
          - text_based_ml_only
          - mlflow_model
          type: string
        classifier_init_script:
          description: "Classifier initialization script. Here is how it used: <br\
            \ /><br />def&nbsp;init_classifier_impl(field_code:&nbsp;str,&nbsp;init_script:&nbsp;str):<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;init_script&nbsp;is&nbsp;not&nbsp;None:<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;init_script&nbsp;=&nbsp;init_script.strip()<br\
            \ /><br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;init_script:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;sklearn&nbsp;import&nbsp;tree&nbsp;as&nbsp;sklearn_tree<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;sklearn_tree.DecisionTreeClassifier()<br\
            \ /><br />&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;sklearn&nbsp;import&nbsp;tree&nbsp;as&nbsp;sklearn_tree<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;sklearn&nbsp;import&nbsp;neural_network&nbsp;as&nbsp;sklearn_neural_network<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;sklearn&nbsp;import&nbsp;neighbors&nbsp;as&nbsp;sklearn_neighbors<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;sklearn&nbsp;import&nbsp;svm&nbsp;as&nbsp;sklearn_svm<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;sklearn&nbsp;import&nbsp;gaussian_process&nbsp;as&nbsp;sklearn_gaussian_process<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;sklearn.gaussian_process&nbsp;import&nbsp;kernels&nbsp;as&nbsp;sklearn_gaussian_process_kernels<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;sklearn&nbsp;import&nbsp;ensemble&nbsp;as&nbsp;sklearn_ensemble<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;sklearn&nbsp;import&nbsp;naive_bayes&nbsp;as&nbsp;sklearn_naive_bayes<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;sklearn&nbsp;import&nbsp;discriminant_analysis&nbsp;as&nbsp;sklearn_discriminant_analysis<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;sklearn&nbsp;import&nbsp;linear_model&nbsp;as&nbsp;sklearn_linear_model<br\
            \ /><br />&nbsp;&nbsp;&nbsp;&nbsp;eval_locals&nbsp;=&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sklearn_linear_model':&nbsp;sklearn_linear_model,<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sklearn_tree':&nbsp;sklearn_tree,<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sklearn_neural_network':&nbsp;sklearn_neural_network,<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sklearn_neighbors':&nbsp;sklearn_neighbors,<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sklearn_svm':&nbsp;sklearn_svm,<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sklearn_gaussian_process':&nbsp;sklearn_gaussian_process,<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sklearn_gaussian_process_kernels':&nbsp;sklearn_gaussian_process_kernels,<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sklearn_ensemble':&nbsp;sklearn_ensemble,<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sklearn_naive_bayes':&nbsp;sklearn_naive_bayes,<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'sklearn_discriminant_analysis':&nbsp;sklearn_discriminant_analysis<br\
            \ />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;eval_script('classifier&nbsp;init&nbsp;script&nbsp;of&nbsp;field&nbsp;{0}'.format(field_code),&nbsp;init_script,&nbsp;eval_locals)<br\
            \ />"
          nullable: true
          type: string
        formula:
          nullable: true
          type: string
        convert_decimals_to_floats_in_formula_args:
          description: "Floating point field values \n    are represented in Python\
            \ Decimal type to avoid rounding problems in machine numbers representations.\
            \ \n    Use this checkbox for converting them to Python float type before\
            \ calculating the formula. \n    Float: 0.1 + 0.2 = 0.30000000000000004.\
            \ Decimal: 0.1 + 0.2 = 0.3."
          type: boolean
        value_regexp:
          description: "This regular expression is run on the sentence \n    found\
            \ by a Field Detector and extracts a specific string value from a Text\
            \ Unit. If the regular expression returns multiple matching groups, then\
            \ the first matching group will be used by the Field. This is only applicable\
            \ to String Fields."
          nullable: true
          type: string
        depends_on_fields:
          items:
            type: string
          type: array
        confidence:
          enum:
          - High
          - Medium
          - Low
          nullable: true
          type: string
        requires_text_annotations:
          type: boolean
        read_only:
          type: boolean
        category:
          nullable: true
          type: integer
        family:
          nullable: true
          type: integer
        default_value:
          description: "If populated, the Default Value will be displayed for this\
            \ Field if no other value is found by the chosen Value Detection Strategy.\
            \ Leave this form blank to have the Field Value remain empty by default.\
            \ Please wrap entries with quotes, example: “landlord”. This is only applicable\
            \ to Choice and Multi Choice Fields."
          nullable: true
          type: object
        choices:
          description: Newline-separated choices. A choice cannot contain a comma.
          nullable: true
          type: string
        allow_values_not_specified_in_choices:
          type: boolean
        metadata:
          nullable: true
          type: object
        training_finished:
          type: boolean
        dirty:
          type: boolean
        order:
          maximum: 32767
          minimum: 0
          type: integer
        trained_after_documents_number:
          maximum: 2147483647
          minimum: 1
          type: integer
        hidden_always:
          type: boolean
        hide_until_python:
          description: "        \n            Enter a boolean expression in Python\
            \ syntax. If this Python expression evaluates to True, then this \n  \
            \          Document Field will be displayed in the user interface. Likewise,\
            \ if this Python expression evaluates to \n            False, then this\
            \ Document Field will be hidden from view. Importantly, if a document’\
            s status is set to \n            complete and this Document Field remains\
            \ hidden, then this Document Field’s data will be erased. Similarly, \n\
            \            this Document Field might contain data that a user can not\
            \ review if it is hidden and the document has not \n            been set\
            \ to complete."
          nullable: true
          type: string
        hide_until_js:
          description: "Target expression (\"Hide until python\" expression converted\
            \ to JavaScript syntax for frontend). Allowed operators: +, -, *, /, ===,\
            \ !==, ==, !=, &&, ||, >, <, >=, <=, %"
          nullable: true
          readOnly: true
          type: string
        display_yes_no:
          description: "Checking this box will \n    display “Yes” if Related Info\
            \ text is found, and display “No” if no text is found."
          type: boolean
        vectorizer_stop_words:
          description: "Stop words for vectorizers \n    user in field-based ML field\
            \ detection. These stop words are excluded from going into the feature\
            \ vector part \n    build based on this field. In addition to these words\
            \ the standard sklearn \"english\" word list is used. \n    Format: each\
            \ word on new line"
          nullable: true
          type: string
        unsure_choice_value:
          description: "Makes sense for machine learning \n    strategies with \"\
            Unsure\" category. The strategy will return this value if probabilities\
            \ of all other categories \n    appear lower than the specified threshold."
          maxLength: 256
          nullable: true
          type: string
        unsure_thresholds_by_value:
          description: "Makes sense for machine learning \n    strategies with \"\
            Unsure\" category. The strategy will return concrete result (one of choice\
            \ values) only if \n    the probability of the detected value is greater\
            \ than this threshold. Otherwise the strategy returns None \n    or the\
            \ choice value specified in \"Unsure choice value\" field. Format: { \"\
            value1\": 0.9, \"value2\": 0.5, ...}.\n     Default: 0.9"
          nullable: true
          type: object
        mlflow_model_uri:
          description: "MLFlow model URI \n    understandable by the MLFlow artifact\
            \ downloading routines."
          maxLength: 1024
          nullable: true
          type: string
        mlflow_detect_on_document_level:
          description: "If true - whole \n    document text will be sent to the MLFlow\
            \ model and the field value will be returned for the whole text with no\n\
            \    annotations. If false - each text unit will be sent separately."
          type: boolean
        warning_message:
          readOnly: true
          type: string
      required:
      - code
      - document_type
      - title
      - type
      type: object
    CheckNewDocumentFieldFormulaRequest:
      example:
        depends_on_fields:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        formula: formula
        hide_until_python: hide_until_python
        field_type: field_type
        document_type: document_type
      properties:
        formula:
          type: string
        hide_until_python:
          type: string
        field_type:
          type: string
        document_type:
          type: string
        depends_on_fields:
          items:
            format: uuid
            type: string
          type: array
      required:
      - depends_on_fields
      type: object
    CheckDocumentFieldFormulaRequest:
      example:
        formula: formula
        hide_until_python: hide_until_python
      properties:
        formula:
          type: string
        hide_until_python:
          type: string
      type: object
    CloneDocumentFieldRequest:
      example:
        code: code
        document_type: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        code:
          type: string
        document_type:
          format: uuid
          type: string
      required:
      - code
      - document_type
      type: object
    DocumentTypeCreate:
      example:
        warning_message: warning_message
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        metadata: "{}"
        code: code
        search_fields:
        - search_fields
        - search_fields
        field_code_aliases: "{}"
        categories:
        - name: name
          id: 5
          order: -1158723813
        - name: name
          id: 5
          order: -1158723813
        title: title
        fields:
        - code: code
          id: id
          category: 1
          title: title
          order: 19536
        - code: code
          id: id
          category: 1
          title: title
          order: 19536
        managers:
        - 0
        - 0
        editor_type: save_by_field
      properties:
        uid:
          format: uuid
          readOnly: true
          type: string
        title:
          maxLength: 100
          type: string
        code:
          description: "Field codes must be lowercase, should start with a Latin letter,\
            \ and contain \nonly Latin letters, digits, and underscores."
          maxLength: 50
          type: string
        categories:
          items:
            $ref: '#/components/schemas/DocumentTypeDetail_categories_inner'
          readOnly: true
          type: array
        managers:
          description: Choose which users can modify this Document Type. Users chosen
            as Managers can be of any System-Level Permission.
          items:
            type: integer
          type: array
        fields:
          items:
            $ref: '#/components/schemas/DocumentFieldCategoryList_fields_inner'
          readOnly: true
          type: array
        search_fields:
          items:
            type: string
          type: array
        editor_type:
          enum:
          - save_by_field
          - save_all_fields_at_once
          type: string
        field_code_aliases:
          nullable: true
          type: object
        metadata:
          nullable: true
          type: object
        warning_message:
          readOnly: true
          type: string
      required:
      - code
      - editor_type
      - title
      type: object
    CloneDocumentTypeRequest:
      example:
        code: code
        title: title
      properties:
        code:
          type: string
        title:
          type: string
      required:
      - code
      - title
      type: object
    DocumentFieldCategoryCreate:
      example:
        name: name
        id: 0
        fields:
        - fields
        - fields
        fields_number: 1
        document_type: document_type
        order: 441289069
      properties:
        id:
          readOnly: true
          type: integer
        document_type:
          nullable: true
          type: string
        name:
          maxLength: 100
          type: string
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        fields:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        fields_number:
          readOnly: true
          type: integer
      required:
      - document_type
      - name
      - order
      type: object
    DocumentFieldDetectorCreate:
      example:
        exclude_regexps: exclude_regexps
        text_part: FULL
        detect_limit_count: -1803530559
        definition_words: definition_words
        warning_message: warning_message
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        detected_value: detected_value
        field: field
        detect_limit_unit: NONE
        include_regexps: include_regexps
        category: simple_config
        extraction_hint: TAKE_FIRST
        regexps_pre_process_lower: true
      properties:
        uid:
          format: uuid
          readOnly: true
          type: string
        warning_message:
          readOnly: true
          type: string
        category:
          description: "Field detector category used for technical needs e.g. for\
            \ determining \nwhich field detectors were created automatically during\
            \ import process."
          enum:
          - simple_config
          nullable: true
          type: string
        exclude_regexps:
          description: "Enter regular expressions, each on a new line, for text patterns\
            \ \nyou want EXCLUDED. The Field Detector will attempt to skip any Text\
            \ Unit that contains any of the patterns written \nhere, and will move\
            \ on to the next Text Unit. Avoid using “.*” and similar unlimited multipliers,\
            \ as they can crash \nor slow ContraxSuite. Use bounded multipliers for\
            \ variable length matching, like “.{0,100}” or similar. Note that \nExclude\
            \ regexps are checked before Definition words and Include regexps. If\
            \ a Field Detector has Exclude regexps, but \nno Definition words or Include\
            \ regexps, it will not extract any data."
          nullable: true
          type: string
        definition_words:
          description: "Enter words or phrases, each on a new line, that must be present\
            \ \nin the Text Unit. These words must be in the Definitions List. If\
            \ ContraxSuite fails to recognize these words as \ndefinitions, then the\
            \ Field Detector skips and moves to the next Text Unit. If there are Include\
            \ regexps, then the \nField Detector checks against those requirements.\
            \ The Field Detector marks the entire Text Unit as a match. Note that\
            \ \nthe Field Detector checks for definition words after filtering using\
            \ the Exclude regexps."
          nullable: true
          type: string
        include_regexps:
          description: "Enter regular expressions, each on a new \nline, for text\
            \ patterns you want INCLUDED. The Field Detector will attempt to match\
            \ each of these regular expressions \nwithin a given Text Unit. Avoid\
            \ using “.*” and similar unlimited multipliers, as they can crash or slow\
            \ ContraxSuite. \nUse bounded multipliers for variable length matching,\
            \ like “.{0,100}” or similar. Note that Include regexps are checked \n\
            after both Exclude regexps and Definition words."
          nullable: true
          type: string
        regexps_pre_process_lower:
          description: Set 'ignore case' flag for both 'Include regexps' and 'Exclude
            regexps' options.
          type: boolean
        detected_value:
          description: "The string value written here \nwill be assigned to the field\
            \ if the Field Detector positively matches a Text Unit. This is only applicable\
            \ to Choice, \nMultichoice, and String fields, as their respective Field\
            \ Detectors do not extract and display values from the source \ntext."
          maxLength: 256
          nullable: true
          type: string
        extraction_hint:
          description: "Provide additional instruction on which \nspecific values\
            \ should be prioritized for extraction, when multiple values of the same\
            \ type \n(e.g., Company, Person, Geography) are found within the relevant\
            \ detected Text Unit."
          enum:
          - TAKE_FIRST
          - TAKE_SECOND
          - TAKE_LAST
          - TAKE_MIN
          - TAKE_MAX
          nullable: true
          type: string
        text_part:
          description: "Defines which part of the matched Text Unit \nshould be passed\
            \ to the extraction function. Example: In the string \"2019-01-23 is the\
            \ start date and 2019-01-24 is the \nend date,\" if text part = \"Before\
            \ matching substring\" and Include regexp is \"is.{0,100}start\" then\
            \ \"2019-01-23\" will be \nparsed correctly as the start date."
          enum:
          - FULL
          - BEFORE_REGEXP
          - AFTER_REGEXP
          - INSIDE_REGEXP
          type: string
        detect_limit_unit:
          description: "Choose to add an upward limit to the amount of document text\
            \ \n                                             ContraxSuite will search\
            \ for this Document Field. For example, you can choose \n            \
            \                                 to only search the first 10 paragraphs\
            \ of text for the value required (this \n                            \
            \                 often works best for values like “Company,” “Execution\
            \ Date,” or “Parties,”\n                                             all\
            \ of which typically appear in the first few paragraphs of a contract)."
          enum:
          - NONE
          - UNIT
          type: string
        detect_limit_count:
          description: "Specify the maximum \n    range for a bounded search. Field\
            \ detection begins at the top of the document and continues until this\
            \ Nth \n    \"Detect limit unit\" element."
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        field:
          type: string
      required:
      - detect_limit_count
      - detect_limit_unit
      - field
      - text_part
      type: object
    AnnotationSuggestRequest:
      example:
        field: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        document: 0
        quite: quite
      properties:
        field:
          format: uuid
          type: string
        document:
          type: integer
        quite:
          type: string
      required:
      - document
      - field
      - quite
      type: object
    DumpFixture:
      example:
        app_name: app_name
        model_name: model_name
        indent: 0
        file_name: file_name
        filter_options: "{}"
      properties:
        app_name:
          type: string
        model_name:
          type: string
        file_name:
          type: string
        filter_options:
          type: object
        indent:
          default: 4
          type: integer
      required:
      - app_name
      - file_name
      - model_name
      type: object
    LoadFixture:
      example:
        fixture: fixture
        mode: default
        encoding: utf=8
      properties:
        fixture:
          type: string
        mode:
          default: default
          enum:
          - default
          - shift
          - partial
          - soft
          type: string
        encoding:
          default: utf=8
          maxLength: 10
          type: string
      required:
      - fixture
      type: object
    LoggingAPIViewRequest:
      example:
        records:
        - "{}"
        - "{}"
        queryInfo: "{}"
      properties:
        queryInfo:
          type: object
        records:
          items:
            type: object
          type: array
      required:
      - queryInfo
      - records
      type: object
    MarkForSeenWebNotificationRequest:
      example:
        notification_ids:
        - 0
        - 0
        is_seen: true
      properties:
        notification_ids:
          items:
            type: integer
          type: array
        is_seen:
          type: boolean
      required:
      - is_seen
      - notification_ids
      type: object
    MarkForSeenWebNotificationResponse:
      example:
        count_processed: 0
      properties:
        count_processed:
          type: integer
      required:
      - count_processed
      type: object
    ProjectCreate:
      example:
        send_email_notification: true
        name: name
        description: description
        pk: 0
        type: type
        term_tags:
        - 6
        - 6
        companytype_tags:
        - 1
        - 1
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        description:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        send_email_notification:
          type: boolean
        term_tags:
          items:
            type: integer
          type: array
        companytype_tags:
          items:
            type: integer
          type: array
      required:
      - name
      type: object
    SelectProjectsRequest:
      example:
        project_ids:
        - 0
        - 0
      properties:
        project_ids:
          items:
            type: integer
          type: array
      required:
      - project_ids
      type: object
    SelectProjectsResponse:
      example:
        user_id: 6
        show_warning: true
        saved_filter_id: 0
        project_ids:
        - 1
        - 1
      properties:
        saved_filter_id:
          type: integer
        user_id:
          type: integer
        project_ids:
          items:
            type: integer
          type: array
        show_warning:
          type: boolean
      required:
      - project_ids
      - saved_filter_id
      - show_warning
      - user_id
      type: object
    AssignProjectAnnotationsRequest:
      example:
        all: true
        no_annotation_ids:
        - 1
        - 1
        annotation_ids:
        - 6
        - 6
        assignee_id: 0
      properties:
        assignee_id:
          nullable: true
          type: integer
        all:
          type: boolean
        annotation_ids:
          items:
            type: integer
          type: array
        no_annotation_ids:
          items:
            type: integer
          type: array
      type: object
    CountSuccessResponse:
      example:
        success: 0
      properties:
        success:
          nullable: true
          type: integer
      type: object
    AssignProjectDocumentRequest:
      example:
        document_id: 6
        assignee_id: 0
      properties:
        assignee_id:
          nullable: true
          type: integer
        document_id:
          nullable: true
          type: integer
      type: object
    AssignProjectDocumentsRequest:
      example:
        all: true
        document_ids:
        - 6
        - 6
        no_document_ids:
        - 1
        - 1
        assignee_id: 0
      properties:
        assignee_id:
          nullable: true
          type: integer
        all:
          type: boolean
        document_ids:
          items:
            type: integer
          type: array
        no_document_ids:
          items:
            type: integer
          type: array
      type: object
    CleanupProjectRequest:
      example:
        delete: true
      properties:
        delete:
          type: boolean
      type: object
    DetectProjectFieldValuesRequest:
      example:
        document_ids:
        - 0
        - 0
        do_not_update_modified: true
        do_not_write: true
      properties:
        do_not_update_modified:
          type: boolean
        do_not_write:
          type: boolean
        document_ids:
          items:
            type: integer
          type: array
      type: object
    TaskIdResponse:
      example:
        task_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        task_id:
          format: uuid
          type: string
      required:
      - task_id
      type: object
    LocateItemsRequest:
      example:
        search_in:
        - search_in
        - search_in
        delete_existing: true
        project_id: 0
        selected_tags:
        - selected_tags
        - selected_tags
        items_to_locate:
        - items_to_locate
        - items_to_locate
      properties:
        items_to_locate:
          items:
            type: string
          type: array
        project_id:
          type: integer
        delete_existing:
          type: boolean
        search_in:
          items:
            type: string
          type: array
        selected_tags:
          items:
            type: string
          type: array
      required:
      - items_to_locate
      - project_id
      type: object
    MarkUnmarkForDeleteProjectsRequest:
      example:
        all: true
        remove_all: true
        exclude_document_ids:
        - 0
        - 0
      properties:
        all:
          type: boolean
        remove_all:
          type: boolean
        exclude_document_ids:
          items:
            type: integer
          type: array
      type: object
    MarkUnmarkForDeleteProjectsReponse:
      example:
        count_deleted: 0
      properties:
        count_deleted:
          type: integer
      required:
      - count_deleted
      type: object
    ProjectSearchSimilarDocumentsRequest:
      example:
        use_tfidf: false
        distance_type: cosine
        item_id: 6
        similarity_threshold: 0
        run_name: run_name
        create_reverse_relations: true
        delete: true
      properties:
        run_name:
          type: string
        distance_type:
          default: cosine
          enum:
          - braycurtis
          - canberra
          - chebyshev
          - cityblock
          - correlation
          - cosine
          - dice
          - euclidean
          - hamming
          - jaccard
          - jensenshannon
          - kulsinski
          - kulczynski1
          - mahalanobis
          - minkowski
          - rogerstanimoto
          - russellrao
          - seuclidean
          - sokalmichener
          - sokalsneath
          - sqeuclidean
          - yule
          type: string
        similarity_threshold:
          default: 75
          type: integer
        create_reverse_relations:
          default: true
          type: boolean
        use_tfidf:
          default: false
          type: boolean
        delete:
          default: true
          type: boolean
        item_id:
          type: integer
      type: object
    ProjectSearchSimilarTextUnitsRequest:
      example:
        use_tfidf: false
        location_start: 5
        distance_type: cosine
        item_id: 6
        similarity_threshold: 0
        location_end: 5
        unit_type: sentence
        document_id: 1
        run_name: run_name
        create_reverse_relations: true
        delete: true
      properties:
        run_name:
          type: string
        distance_type:
          default: cosine
          enum:
          - braycurtis
          - canberra
          - chebyshev
          - cityblock
          - correlation
          - cosine
          - dice
          - euclidean
          - hamming
          - jaccard
          - jensenshannon
          - kulsinski
          - kulczynski1
          - mahalanobis
          - minkowski
          - rogerstanimoto
          - russellrao
          - seuclidean
          - sokalmichener
          - sokalsneath
          - sqeuclidean
          - yule
          type: string
        similarity_threshold:
          default: 75
          type: integer
        create_reverse_relations:
          default: true
          type: boolean
        use_tfidf:
          default: false
          type: boolean
        delete:
          default: true
          type: boolean
        item_id:
          type: integer
        unit_type:
          default: sentence
          enum:
          - sentence
          - paragraph
          type: string
        document_id:
          type: integer
        location_start:
          type: integer
        location_end:
          type: integer
      type: object
    SendClusterToProjectRequest:
      example:
        project_id: 6
        cluster_ids:
        - 0
        - 0
      properties:
        cluster_ids:
          items:
            type: integer
          type: array
        project_id:
          type: integer
      required:
      - cluster_ids
      - project_id
      type: object
    SetProjectAnnotationsStatusRequest:
      example:
        all: true
        status_id: 0
        no_annotation_ids:
        - 1
        - 1
        force: true
        annotation_ids:
        - 6
        - 6
      properties:
        status_id:
          nullable: true
          type: integer
        all:
          type: boolean
        annotation_ids:
          items:
            type: integer
          type: array
        no_annotation_ids:
          items:
            type: integer
          type: array
        force:
          type: boolean
      type: object
    SetProjectAnnotationsStatusAsyncResponse:
      properties:
        task_id:
          format: uuid
          type: string
        annotations:
          type: integer
      required:
      - annotations
      - task_id
      type: object
    SetProjectDocumentsStatusRequest:
      example:
        all: true
        document_ids:
        - 6
        - 6
        status_id: 0
        no_document_ids:
        - 1
        - 1
      properties:
        status_id:
          nullable: true
          type: integer
        all:
          type: boolean
        document_ids:
          items:
            type: integer
          type: array
        no_document_ids:
          items:
            type: integer
          type: array
      type: object
    UpdateProjectDocumentsFieldsRequest:
      example:
        all: true
        document_ids:
        - 0
        - 0
        fields_data: "{}"
        no_document_ids:
        - 6
        - 6
        on_existing_value: on_existing_value
      properties:
        all:
          type: boolean
        document_ids:
          items:
            type: integer
          type: array
        no_document_ids:
          items:
            type: integer
          type: array
        fields_data:
          type: object
        on_existing_value:
          type: string
      required:
      - fields_data
      type: object
    UpdateProjectDocumentsFieldsResponse:
      example:
        task_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        inactive_document_names:
        - inactive_document_names
        - inactive_document_names
        inactive_document_ids:
        - 0
        - 0
      properties:
        task_id:
          format: uuid
          type: string
        inactive_document_ids:
          items:
            type: integer
          type: array
        inactive_document_names:
          items:
            type: string
          type: array
      required:
      - inactive_document_ids
      - inactive_document_names
      - task_id
      type: object
    UploadSessionCreate:
      example:
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        project: 0
        review_files: true
        force: true
        upload_files: "{}"
        created_by: 6
      properties:
        uid:
          format: uuid
          readOnly: true
          type: string
        project:
          type: integer
        created_by:
          type: integer
        upload_files:
          readOnly: true
          type: object
        review_files:
          readOnly: true
          type: boolean
        force:
          readOnly: true
          type: boolean
      type: object
    UploadSessionBatchUploadRequest:
      example:
        folder: folder
      properties:
        folder:
          type: string
      required:
      - folder
      type: object
    ProjectUploadSessionFilesResponse:
      example:
        status: status
      properties:
        status:
          type: string
      required:
      - status
      type: object
    ProjectUploadSessionPOSTResponse:
      example:
        status: status
      properties:
        status:
          type: string
      required:
      - status
      type: object
    ClusterProjectRequest:
      example:
        n_clusters: 0
        method: kmeans
        require_confirmation: true
        force: true
        cluster_by: term
      properties:
        n_clusters:
          type: integer
        force:
          type: boolean
        cluster_by:
          enum:
          - term
          - date
          - text
          - definition
          - duration
          - party
          - geoentity
          - currency_name
          - currency_value
          type: string
        method:
          enum:
          - kmeans
          - minibatchkmeans
          - birch
          type: string
        require_confirmation:
          type: boolean
      required:
      - cluster_by
      - method
      - n_clusters
      type: object
    ClusterProjectResponse:
      example:
        task_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        project_clustering_id: 0
      properties:
        task_id:
          format: uuid
          type: string
        project_clustering_id:
          type: integer
      required:
      - project_clustering_id
      - task_id
      type: object
    RawdbDocumentsPOSTRequest:
      example:
        columns: columns
        saved_filters: saved_filters
        filters:
          key: filters
        fmt: fmt
        project_ids: project_ids
        save_filter: true
        ignore_errors: true
        as_zip: true
        limit: 0
        order_by: order_by
        return_reviewed: true
        return_data: true
        associated_text: true
        return_total: true
      properties:
        project_ids:
          type: string
        columns:
          type: string
        associated_text:
          type: boolean
        as_zip:
          type: boolean
        fmt:
          type: string
        limit:
          type: integer
        order_by:
          type: string
        saved_filters:
          type: string
        save_filter:
          type: boolean
        return_reviewed:
          type: boolean
        return_total:
          type: boolean
        return_data:
          type: boolean
        ignore_errors:
          type: boolean
        filters:
          additionalProperties:
            type: string
          type: object
      type: object
    Upload:
      properties:
        id:
          readOnly: true
          type: integer
        guid:
          format: uuid
          type: string
        state:
          maxLength: 50
          type: string
        upload_offset:
          format: int64
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
        upload_length:
          format: int64
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
        upload_metadata:
          type: string
        filename:
          maxLength: 255
          type: string
        temporary_file_path:
          maxLength: 4096
          nullable: true
          type: string
        expires:
          format: date-time
          nullable: true
          type: string
        uploaded_file:
          format: binary
          nullable: true
          type: string
      required:
      - upload_metadata
      type: object
    UserProfile:
      example:
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        initials: initials
        organization: organization
        name: name
        last_name: last_name
        photo: ""
        groups:
        - 0
        - 0
        first_name: first_name
        email: email
        username: username
      properties:
        uid:
          format: uuid
          readOnly: true
          type: string
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          readOnly: true
          type: string
        last_name:
          maxLength: 150
          type: string
        first_name:
          maxLength: 30
          type: string
        name:
          maxLength: 255
          type: string
        initials:
          readOnly: true
          type: string
        photo:
          format: binary
          nullable: true
          type: string
        email:
          format: email
          readOnly: true
          type: string
        organization:
          maxLength: 100
          nullable: true
          type: string
        groups:
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
          items:
            type: integer
          readOnly: true
          type: array
      type: object
    VerifyAuthTokenRequest:
      example:
        auth_token: auth_token
      properties:
        auth_token:
          maxLength: 40
          type: string
      required:
      - auth_token
      type: object
    VerifyAuthTokenResponse:
      example:
        user_name: user_name
        release_version: release_version
        user:
          is_superuser: true
          is_active: true
          is_staff: true
          initials: initials
          last_name: last_name
          photo: photo
          groups:
          - 5
          - 5
          uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissions: "{}"
          organization: organization
          name: name
          id: 5
          first_name: first_name
          email: email
          username: username
        key: key
      properties:
        key:
          type: string
        user_name:
          type: string
        release_version:
          type: string
        user:
          $ref: '#/components/schemas/ProjectDetail_owners_data_inner'
      required:
      - key
      - release_version
      - user
      - user_name
      type: object
    Code:
      example:
        code: code
      properties:
        code:
          type: string
      required:
      - code
      type: object
    SocialLogin:
      example:
        access_token: access_token
        code: code
        id_token: id_token
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
      type: object
    AccessTokenSchema:
      example:
        access_token: access_token
      properties:
        access_token:
          type: string
      required:
      - access_token
      type: object
    DocumentClusterUpdate:
      example:
        name: name
        pk: 0
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 300
          type: string
      required:
      - name
      type: object
    DocumentNoteUpdate:
      example:
        note: note
        selections:
        - "{}"
        - "{}"
      properties:
        note:
          type: string
        selections:
          items:
            type: object
          readOnly: true
          type: array
      required:
      - note
      type: object
    DocumentTypeImportRequest:
      example:
        source_version: source_version
        file: ""
        action: validate
        update_cache: true
      properties:
        file:
          format: binary
          type: string
        update_cache:
          type: boolean
        action:
          enum:
          - validate
          - validate|import
          - import|auto_fix|retain_missing_objects
          - import|auto_fix|remove_missing_objects
          type: string
        source_version:
          type: string
      required:
      - file
      type: object
    DocumentTypeImportResponse:
      example:
        task_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        task_id:
          format: uuid
          type: string
      required:
      - task_id
      type: object
    AnnotationUpdateResponse:
      example:
        document_name: document_name
        location_start: 314780940
        field: field
        document: 6
        modified_by: 5
        project: project
        location_end: 1280358508
        pk: 0
        modified_date: 2000-01-23T04:56:07.000+00:00
        value: "{}"
        location_text: location_text
        field_name: field_name
      properties:
        pk:
          readOnly: true
          type: integer
        document:
          type: integer
        document_name:
          type: string
        field:
          type: string
        field_name:
          type: string
        value:
          nullable: true
          type: object
        project:
          type: string
        location_start:
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        location_end:
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        location_text:
          nullable: true
          type: string
        modified_by:
          nullable: true
          type: integer
        modified_date:
          format: date-time
          readOnly: true
          type: string
      required:
      - document
      - document_name
      - field
      - field_name
      - location_end
      - location_start
      - project
      - value
      type: object
    AnnotationBatchRequest:
      example:
        data: "{}"
        operation_uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        action: delete
        id: 0
      properties:
        operation_uid:
          format: uuid
          type: string
        action:
          enum:
          - delete
          - save
          type: string
        id:
          type: integer
        data:
          type: object
      required:
      - action
      - data
      - id
      - operation_uid
      type: object
    AnnotationBatchResponse:
      example:
        data: "{}"
        operation_uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: status
      properties:
        operation_uid:
          format: uuid
          type: string
        status:
          type: string
        data:
          type: object
      required:
      - data
      - operation_uid
      - status
      type: object
    GeoEntityUpdate:
      example:
        pk: 0
        priority: 441289069
      properties:
        pk:
          readOnly: true
          type: integer
        priority:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
      type: object
    ProjectUpdate:
      example:
        text_unit_transformer: 2
        junior_reviewers:
        - 2
        - 2
        send_email_notification: true
        description: description
        owners:
        - 1
        - 1
        type: type
        companytype_tags:
        - 9
        - 9
        reviewers:
        - 5
        - 5
        document_transformer: 3
        name: name
        super_reviewers:
        - 5
        - 5
        hide_clause_review: true
        pk: 0
        term_tags:
        - 7
        - 7
        status: 6
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        description:
          nullable: true
          type: string
        status:
          type: integer
        send_email_notification:
          type: boolean
        owners:
          items:
            type: integer
          type: array
        reviewers:
          items:
            type: integer
          type: array
        super_reviewers:
          items:
            type: integer
          type: array
        junior_reviewers:
          items:
            type: integer
          type: array
        type:
          type: string
        hide_clause_review:
          type: boolean
        term_tags:
          items:
            type: integer
          type: array
        companytype_tags:
          items:
            type: integer
          type: array
        document_transformer:
          nullable: true
          type: integer
        text_unit_transformer:
          nullable: true
          type: integer
      required:
      - name
      type: object
    UploadSessionUpdate:
      example:
        project: 0
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_date: 2000-01-23T04:56:07.000+00:00
        completed: true
        created_by: 6
      properties:
        pk:
          format: uuid
          readOnly: true
          type: string
        project:
          nullable: true
          type: integer
        created_by:
          nullable: true
          type: integer
        created_date:
          format: date-time
          readOnly: true
          type: string
        completed:
          nullable: true
          type: boolean
      type: object
    UploadSessionDeleteFileRequest:
      example:
        filename: filename
      properties:
        filename:
          type: string
      required:
      - filename
      type: object
    document_documents_download_zip_GET_404_response:
      properties:
        detail:
          type: string
      required:
      - detail
      type: object
    dump_document_config_GET_200_response:
      oneOf:
      - items:
          additionalProperties: true
          type: object
        type: array
      - description: Json file with dumped fixture
        format: binary
        type: string
    project_projects_id_assign_annotations_POST_404_response:
      properties:
        details:
          type: string
      required:
      - details
      type: object
    project_projects_id_set_annotation_status_POST_200_response:
      oneOf:
      - $ref: '#/components/schemas/CountSuccessResponse'
      - $ref: '#/components/schemas/SetProjectAnnotationsStatusAsyncResponse'
    tus_upload_session_upload_session_id_upload_POST_400_response:
      example:
        status: status
      properties:
        status:
          type: string
      type: object
    DocumentCluster_document_data_inner:
      example:
        name: name
        pk: 5
        document_type: document_type
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 1024
          nullable: true
          type: string
        document_type:
          nullable: true
          type: string
      type: object
    DocumentSimilarity_run:
      example:
        items_count: 1
        project_id: project_id
        feature_source: feature_source
        unit_source: unit_source
        id: 0
        created_date: 2000-01-23T04:56:07.000+00:00
        unit_type: unit_type
        unit_id: 441289069
        created_by: 5
      properties:
        id:
          readOnly: true
          type: integer
        project_id:
          readOnly: true
          type: string
        feature_source:
          maxLength: 50
          nullable: true
          type: string
        unit_source:
          maxLength: 50
          nullable: true
          type: string
        unit_type:
          maxLength: 50
          nullable: true
          type: string
        unit_id:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        items_count:
          type: integer
        created_by:
          nullable: true
          type: integer
        created_date:
          format: date-time
          type: string
      readOnly: true
      required:
      - items_count
      type: object
    ProjectDocumentSimilarityResponse_data_inner:
      example:
        document_b_name: document_b_name
        run_id: run_id
        document_a_id: document_a_id
        document_b_id: document_b_id
        similarity: similarity
        document_a_name: document_a_name
        document_b_text: document_b_text
      properties:
        document_a_name:
          type: string
        document_a_id:
          readOnly: true
          type: string
        document_b_name:
          type: string
        document_b_id:
          readOnly: true
          type: string
        document_b_text:
          type: string
        similarity:
          format: decimal
          maximum: 1000
          minimum: -1000
          multipleOf: 0.01
          type: string
        run_id:
          readOnly: true
          type: string
      required:
      - document_a_name
      - document_b_name
      - document_b_text
      - similarity
      type: object
    ReviewStatusDetail_group_data:
      example:
        code: code
        is_active: true
        name: name
        pk: 5
        order: 18471
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        code:
          maxLength: 100
          nullable: true
          type: string
        order:
          maximum: 32767
          minimum: 0
          type: integer
        is_active:
          type: boolean
      required:
      - name
      - order
      type: object
    DocumentsForUserResponse_data_inner:
      example:
        status_name: status_name
        name: name
        project: 1
        pk: 6
        document_type: document_type
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 1024
          nullable: true
          type: string
        document_type:
          nullable: true
          type: string
        project:
          nullable: true
          type: integer
        status_name:
          type: string
      required:
      - status_name
      type: object
    DocumentDetail_status_data:
      example:
        code: code
        is_active: true
        name: name
        id: 5
        order: 18471
        group: 2
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        code:
          maxLength: 100
          nullable: true
          type: string
        order:
          maximum: 32767
          minimum: 0
          type: integer
        is_active:
          type: boolean
        group:
          nullable: true
          type: integer
      required:
      - name
      - order
      type: object
    DocumentDetail_assignee_data:
      example:
        initials: initials
        name: name
        last_name: last_name
        photo: photo
        pk: 9
        first_name: first_name
        username: username
      nullable: true
      properties:
        pk:
          readOnly: true
          type: integer
        first_name:
          maxLength: 30
          type: string
        last_name:
          maxLength: 150
          type: string
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
        photo:
          readOnly: true
          type: string
        name:
          maxLength: 255
          type: string
        initials:
          maxLength: 2
          type: string
      required:
      - username
      type: object
    DocumentDetail_available_assignees_data_inner:
      example:
        initials: initials
        name: name
        last_name: last_name
        photo: photo
        pk: 3
        first_name: first_name
        username: username
      properties:
        pk:
          readOnly: true
          type: integer
        first_name:
          maxLength: 30
          type: string
        last_name:
          maxLength: 150
          type: string
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
        photo:
          readOnly: true
          type: string
        name:
          maxLength: 255
          type: string
        initials:
          maxLength: 2
          type: string
      required:
      - username
      type: object
    DocumentNoteDetail_user:
      example:
        initials: initials
        name: name
        last_name: last_name
        photo: photo
        pk: 6
        first_name: first_name
        username: username
      properties:
        pk:
          readOnly: true
          type: integer
        first_name:
          maxLength: 30
          type: string
        last_name:
          maxLength: 150
          type: string
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
        photo:
          readOnly: true
          type: string
        name:
          maxLength: 255
          type: string
        initials:
          maxLength: 2
          type: string
      readOnly: true
      required:
      - username
      type: object
    DocumentFieldList_category:
      example:
        name: name
        id: 0
        order: 441289069
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      readOnly: true
      required:
      - name
      type: object
    DocumentFieldList_family:
      example:
        code: code
        id: 1
        title: title
      properties:
        id:
          readOnly: true
          type: integer
        code:
          maxLength: 100
          nullable: true
          type: string
        title:
          maxLength: 100
          type: string
      readOnly: true
      required:
      - title
      type: object
    DocumentTypeDetail_fields_data_inner:
      example:
        classifier_init_script: classifier_init_script
        vectorizer_stop_words: vectorizer_stop_words
        metadata: "{}"
        code: code
        allow_values_not_specified_in_choices: true
        description: description
        modified_by__name: modified_by__name
        long_code: long_code
        title: title
        type: address
        value_regexp: value_regexp
        trained_after_documents_number: 314780941
        unsure_choice_value: unsure_choice_value
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        read_only: true
        depends_on_fields:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        value_aware: true
        requires_text_annotations: true
        created_by__name: created_by__name
        hide_until_python: hide_until_python
        document_type: document_type
        order: 19750
        convert_decimals_to_floats_in_formula_args: true
        dirty: true
        confidence: High
        hide_until_js: hide_until_js
        default_value: "{}"
        value_detection_strategy_name: value_detection_strategy_name
        modified_date: 2000-01-23T04:56:07.000+00:00
        unsure_thresholds_by_value: "{}"
        text_unit_type: sentence
        mlflow_model_uri: mlflow_model_uri
        document_type__title: document_type__title
        display_yes_no: true
        training_finished: true
        mlflow_detect_on_document_level: true
        formula: formula
        value_detection_strategy: disabled
        hidden_always: true
        created_date: 2000-01-23T04:56:07.000+00:00
        category:
          name: name
          id: 0
          order: 441289069
        family: 0
        choices:
        - choices
        - choices
        is_value_detection_strategy_disabled: true
      properties:
        uid:
          format: uuid
          readOnly: true
          type: string
        document_type:
          type: string
        document_type__title:
          readOnly: true
          type: string
        code:
          description: "Field codes must be lowercase, should start with \na Latin\
            \ letter, and contain only Latin letters, digits, underscores. Field codes\
            \ must be unique to every Document Type."
          maxLength: 50
          type: string
        long_code:
          maxLength: 150
          type: string
        title:
          maxLength: 100
          type: string
        description:
          nullable: true
          type: string
        type:
          enum:
          - address
          - choice
          - company
          - date
          - date_recurring
          - datetime
          - duration
          - float
          - geography
          - int
          - linked_documents
          - money
          - multi_choice
          - percent
          - person
          - ratio
          - related_info
          - string
          - string_no_word_wrap
          - text
          type: string
        text_unit_type:
          enum:
          - sentence
          - paragraph
          - section
          type: string
        value_detection_strategy:
          enum:
          - disabled
          - use_regexps_only
          - use_formula_only
          - regexp_table
          - text_based_ml_only
          - fields_based_ml_only
          - fields_based_prob_ml_only
          - field_based_regexps
          - mlflow_model
          type: string
        classifier_init_script:
          nullable: true
          type: string
        formula:
          nullable: true
          type: string
        convert_decimals_to_floats_in_formula_args:
          description: "Floating point field values \n    are represented in Python\
            \ Decimal type to avoid rounding problems in machine numbers representations.\
            \ \n    Use this checkbox for converting them to Python float type before\
            \ calculating the formula. \n    Float: 0.1 + 0.2 = 0.30000000000000004.\
            \ Decimal: 0.1 + 0.2 = 0.3."
          type: boolean
        value_regexp:
          description: "This regular expression is run on the sentence \n    found\
            \ by a Field Detector and extracts a specific string value from a Text\
            \ Unit. If the regular expression returns multiple matching groups, then\
            \ the first matching group will be used by the Field. This is only applicable\
            \ to String Fields."
          nullable: true
          type: string
        depends_on_fields:
          items:
            format: uuid
            type: string
          readOnly: true
          type: array
        value_detection_strategy_name:
          readOnly: true
          type: string
        confidence:
          enum:
          - High
          - Medium
          - Low
          nullable: true
          type: string
        requires_text_annotations:
          type: boolean
        read_only:
          type: boolean
        category:
          $ref: '#/components/schemas/DocumentFieldList_category'
        family:
          nullable: true
          type: integer
        default_value:
          description: "If populated, the Default Value will be displayed for this\
            \ Field if no other value is found by the chosen Value Detection Strategy.\
            \ Leave this form blank to have the Field Value remain empty by default.\
            \ Please wrap entries with quotes, example: “landlord”. This is only applicable\
            \ to Choice and Multi Choice Fields."
          nullable: true
          type: object
        choices:
          items:
            type: string
          readOnly: true
          type: array
        allow_values_not_specified_in_choices:
          type: boolean
        metadata:
          nullable: true
          type: object
        training_finished:
          type: boolean
        dirty:
          type: boolean
        order:
          maximum: 32767
          minimum: 0
          type: integer
        trained_after_documents_number:
          maximum: 2147483647
          minimum: 1
          type: integer
        hidden_always:
          type: boolean
        hide_until_python:
          nullable: true
          type: string
        hide_until_js:
          nullable: true
          type: string
        is_value_detection_strategy_disabled:
          readOnly: true
          type: boolean
        display_yes_no:
          description: "Checking this box will \n    display “Yes” if Related Info\
            \ text is found, and display “No” if no text is found."
          type: boolean
        value_aware:
          readOnly: true
          type: boolean
        created_by__name:
          readOnly: true
          type: string
        modified_by__name:
          readOnly: true
          type: string
        created_date:
          format: date-time
          readOnly: true
          type: string
        modified_date:
          format: date-time
          readOnly: true
          type: string
        vectorizer_stop_words:
          description: "Stop words for vectorizers \n    user in field-based ML field\
            \ detection. These stop words are excluded from going into the feature\
            \ vector part \n    build based on this field. In addition to these words\
            \ the standard sklearn \"english\" word list is used. \n    Format: each\
            \ word on new line"
          nullable: true
          type: string
        unsure_choice_value:
          description: "Makes sense for machine learning \n    strategies with \"\
            Unsure\" category. The strategy will return this value if probabilities\
            \ of all other categories \n    appear lower than the specified threshold."
          maxLength: 256
          nullable: true
          type: string
        unsure_thresholds_by_value:
          description: "Makes sense for machine learning \n    strategies with \"\
            Unsure\" category. The strategy will return concrete result (one of choice\
            \ values) only if \n    the probability of the detected value is greater\
            \ than this threshold. Otherwise the strategy returns None \n    or the\
            \ choice value specified in \"Unsure choice value\" field. Format: { \"\
            value1\": 0.9, \"value2\": 0.5, ...}.\n     Default: 0.9"
          nullable: true
          type: object
        mlflow_model_uri:
          description: "MLFlow model URI \n    understandable by the MLFlow artifact\
            \ downloading routines."
          maxLength: 1024
          nullable: true
          type: string
        mlflow_detect_on_document_level:
          description: "If true - whole \n    document text will be sent to the MLFlow\
            \ model and the field value will be returned for the whole text with no\n\
            \    annotations. If false - each text unit will be sent separately."
          type: boolean
      required:
      - code
      - document_type
      - title
      type: object
    DocumentTypeDetail_categories_inner:
      example:
        name: name
        id: 5
        order: -1158723813
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
      - name
      type: object
    DocumentTypeStats_data:
      example:
        code: code
        detector_use_regexps_only_pcnt: 2.027123023002322
        detector_field_based_regexps_count: 9.965781217890562
        detector_disabled_count: 7.061401241503109
        detector_use_formula_only_count: 4.145608029883936
        hidden_always_pcnt: 2.3021358869347655
        detector_mlflow_model_pcnt: 8.762042012749001
        detector_text_based_ml_only_pcnt: 6.84685269835264
        title: title
        hidden_always_count: 5
        detector_fields_based_prob_ml_only_pcnt: 5.025004791520295
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        detector_mlflow_model_count: 6.683562403749608
        detector_text_based_ml_only_count: 1.4894159098541704
        detector_fields_based_prob_ml_only_count: 4.965218492984954
        fields_count: 0
        detector_use_formula_only_pcnt: 7.386281948385884
        hide_until_python_pcnt: 5.637376656633329
        detector_disabled_pcnt: 9.301444243932576
        fields_data:
        - "{}"
        - "{}"
        detector_use_regexps_only_count: 3.616076749251911
        detector_fields_based_ml_only_count: 7.457744773683766
        detector_fields_based_ml_only_pcnt: 1.1730742509559433
        detector_field_based_regexps_pcnt: 9.369310271410669
        hide_until_python_count: 1
        detectors_count: 6
        detector_regexp_table_pcnt: 1.0246457001441578
        detector_regexp_table_count: 1.2315135367772556
      properties:
        uid:
          format: uuid
          type: string
        code:
          type: string
        title:
          type: string
        fields_count:
          type: integer
        detectors_count:
          type: integer
        hide_until_python_count:
          type: integer
        hidden_always_count:
          type: integer
        hide_until_python_pcnt:
          type: number
        hidden_always_pcnt:
          type: number
        fields_data:
          items:
            type: object
          readOnly: true
          type: array
        detector_disabled_count:
          type: number
        detector_disabled_pcnt:
          type: number
        detector_use_regexps_only_count:
          type: number
        detector_use_regexps_only_pcnt:
          type: number
        detector_use_formula_only_count:
          type: number
        detector_use_formula_only_pcnt:
          type: number
        detector_regexp_table_count:
          type: number
        detector_regexp_table_pcnt:
          type: number
        detector_text_based_ml_only_count:
          type: number
        detector_text_based_ml_only_pcnt:
          type: number
        detector_fields_based_ml_only_count:
          type: number
        detector_fields_based_ml_only_pcnt:
          type: number
        detector_fields_based_prob_ml_only_count:
          type: number
        detector_fields_based_prob_ml_only_pcnt:
          type: number
        detector_field_based_regexps_count:
          type: number
        detector_field_based_regexps_pcnt:
          type: number
        detector_mlflow_model_count:
          type: number
        detector_mlflow_model_pcnt:
          type: number
      required:
      - code
      - detector_disabled_count
      - detector_disabled_pcnt
      - detector_field_based_regexps_count
      - detector_field_based_regexps_pcnt
      - detector_fields_based_ml_only_count
      - detector_fields_based_ml_only_pcnt
      - detector_fields_based_prob_ml_only_count
      - detector_fields_based_prob_ml_only_pcnt
      - detector_mlflow_model_count
      - detector_mlflow_model_pcnt
      - detector_regexp_table_count
      - detector_regexp_table_pcnt
      - detector_text_based_ml_only_count
      - detector_text_based_ml_only_pcnt
      - detector_use_formula_only_count
      - detector_use_formula_only_pcnt
      - detector_use_regexps_only_count
      - detector_use_regexps_only_pcnt
      - detectors_count
      - fields_count
      - hidden_always_count
      - hidden_always_pcnt
      - hide_until_python_count
      - hide_until_python_pcnt
      - title
      - uid
      type: object
    DocumentFieldCategoryList_fields_inner:
      example:
        code: code
        id: id
        category: 1
        title: title
        order: 19536
      properties:
        id:
          type: string
        category:
          nullable: true
          type: integer
        code:
          description: "Field codes must be lowercase, should start with \na Latin\
            \ letter, and contain only Latin letters, digits, underscores. Field codes\
            \ must be unique to every Document Type."
          maxLength: 50
          type: string
        title:
          maxLength: 100
          type: string
        order:
          maximum: 32767
          minimum: 0
          type: integer
      required:
      - code
      - id
      - title
      type: object
    WebNotificationDetail_notification:
      properties:
        id:
          readOnly: true
          type: integer
        message_data:
          nullable: true
          type: object
        message_template:
          readOnly: true
          type: string
        created_date:
          format: date-time
          readOnly: true
          type: string
        notification_type:
          description: Notification type
          enum:
          - DOCUMENT_ASSIGNED
          - DOCUMENT_UNASSIGNED
          - CLAUSES_ASSIGNED
          - CLAUSES_UNASSIGNED
          - DOCUMENTS_UPLOADED
          - DOCUMENT_DELETED
          - DOCUMENT_ADDED
          - DOCUMENT_STATUS_CHANGED
          - CLUSTER_IMPORTED
          - FIELD_VALUE_DETECTION_COMPLETED
          - CUSTOM_TERM_SET_SEARCH_FINISHED
          - CUSTOM_COMPANY_TYPE_SEARCH_FINISHED
          - DOCUMENT_SIMILARITY_SEARCH_FINISHED
          - TEXT_UNIT_SIMILARITY_SEARCH_FINISHED
          nullable: true
          type: string
        redirect_link:
          nullable: true
          type: object
      readOnly: true
      type: object
    TaskQueue_documents_data_inner:
      example:
        name: name
        description: description
        pk: 1
        document_type: document_type
      properties:
        pk:
          readOnly: true
          type: integer
        name:
          maxLength: 1024
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        document_type:
          nullable: true
          type: string
      type: object
    TaskQueue_reviewers_data_inner:
      example:
        pk: 2
        username: username
      properties:
        pk:
          readOnly: true
          type: integer
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
      required:
      - username
      type: object
    ProjectList_status_data:
      example:
        code: code
        is_active: true
        name: name
        id: 1
        order: 19536
        group: 5
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 100
          type: string
        code:
          maxLength: 100
          nullable: true
          type: string
        order:
          maximum: 32767
          minimum: 0
          type: integer
        is_active:
          type: boolean
        group:
          nullable: true
          type: integer
      readOnly: true
      required:
      - name
      - order
      type: object
    ProjectList_type_data:
      example:
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        code: code
        title: title
      properties:
        uid:
          format: uuid
          readOnly: true
          type: string
        code:
          description: "Field codes must be lowercase, should start with a Latin letter,\
            \ and contain \nonly Latin letters, digits, and underscores."
          maxLength: 50
          type: string
        title:
          maxLength: 100
          type: string
      required:
      - code
      - title
      type: object
    ProjectDetail_owners_data_inner:
      example:
        is_superuser: true
        is_active: true
        is_staff: true
        initials: initials
        last_name: last_name
        photo: photo
        groups:
        - 5
        - 5
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        permissions: "{}"
        organization: organization
        name: name
        id: 5
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        uid:
          format: uuid
          readOnly: true
          type: string
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
        last_name:
          maxLength: 150
          type: string
        first_name:
          maxLength: 30
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        is_superuser:
          description: Designates that this user has all permissions without explicitly
            assigning them.
          type: boolean
        is_staff:
          description: Designates whether the user can log into this admin site.
          type: boolean
        is_active:
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          type: boolean
        name:
          maxLength: 255
          type: string
        initials:
          maxLength: 2
          type: string
        organization:
          maxLength: 100
          nullable: true
          type: string
        photo:
          readOnly: true
          type: string
        permissions:
          readOnly: true
          type: object
        groups:
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
          items:
            type: integer
          type: array
      required:
      - email
      - username
      type: object
    ProjectActiveTasks_tasks:
      example:
        user__name: user__name
        description: description
        date_work_start: 2000-01-23T04:56:07.000+00:00
        date_done: 2000-01-23T04:56:07.000+00:00
        verbose_name: verbose_name
        date_start: 2000-01-23T04:56:07.000+00:00
        name: name
        progress: 171976544
        id: id
        work_time: work_time
        worker: worker
        total_time: total_time
        status: FAILURE
      properties:
        id:
          maxLength: 255
          type: string
        name:
          maxLength: 100
          nullable: true
          type: string
        verbose_name:
          type: string
        user__name:
          readOnly: true
          type: string
        worker:
          maxLength: 1024
          nullable: true
          type: string
        status:
          enum:
          - FAILURE
          - PENDING
          - RECEIVED
          - RETRY
          - REVOKED
          - STARTED
          - SUCCESS
          nullable: true
          type: string
        progress:
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        description:
          readOnly: true
          type: string
        date_start:
          format: date-time
          type: string
        date_work_start:
          format: date-time
          type: string
        date_done:
          format: date-time
          type: string
        total_time:
          type: string
        work_time:
          type: string
      required:
      - date_done
      - date_start
      - date_work_start
      - total_time
      - verbose_name
      - work_time
      type: object
    TaskLogResponse_records:
      example:
        task_name: task_name
        log_level: log_level
        stack_trace: stack_trace
        message: message
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        task_name:
          type: string
        log_level:
          type: string
        message:
          type: string
        timestamp:
          format: date-time
          type: string
        stack_trace:
          type: string
      required:
      - timestamp
      type: object
    ProjectClustering_document_clusters_inner:
      example:
        cluster_id: -1517921766
        name: name
        pk: 6
        documents_count: 5
      properties:
        pk:
          readOnly: true
          type: integer
        cluster_id:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        name:
          maxLength: 300
          type: string
        documents_count:
          readOnly: true
          type: integer
      required:
      - name
      type: object
    SocialClientList_urls:
      example:
        authorize_url: https://openapi-generator.tech
        login_url: https://openapi-generator.tech
        profile_url: https://openapi-generator.tech
        access_token_url: https://openapi-generator.tech
      properties:
        authorize_url:
          format: uri
          pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:\\.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff\
            0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff\
            -]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          type: string
        access_token_url:
          format: uri
          pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:\\.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff\
            0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff\
            -]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          type: string
        profile_url:
          format: uri
          pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:\\.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff\
            0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff\
            -]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          type: string
        login_url:
          format: uri
          pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:\\.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff\
            0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff\
            -]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          type: string
      readOnly: true
      required:
      - access_token_url
      - authorize_url
      - login_url
      - profile_url
      type: object
    DocumentSetAnnotatorCoordinatesDifferenceRequest_first_letters_inner:
      example:
        letter: letter
        x: 6.027456183070403
        "y": 1.4658129805029452
      properties:
        x:
          type: number
        "y":
          type: number
        letter:
          type: string
      required:
      - letter
      - x
      - "y"
      type: object
  securitySchemes:
    AuthToken:
      in: header
      name: Authorization
      type: apiKey

