/* 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing RawdbApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RawdbApiTests
    {
        private RawdbApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RawdbApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RawdbApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' RawdbApi
            //Assert.IsInstanceOf(typeof(RawdbApi), instance);
        }

        
        /// <summary>
        /// Test RawdbConfigGET
        /// </summary>
        [Test]
        public void RawdbConfigGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RawdbConfigGET();
            //Assert.IsInstanceOf(typeof(Dictionary<string, Object>), response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test RawdbDocumentsDocumentTypeCodeGET
        /// </summary>
        [Test]
        public void RawdbDocumentsDocumentTypeCodeGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string documentTypeCode = null;
            //string projectIds = null;
            //string columns = null;
            //bool? associatedText = null;
            //bool? asZip = null;
            //string fmt = null;
            //int? limit = null;
            //string orderBy = null;
            //string savedFilters = null;
            //bool? saveFilter = null;
            //bool? returnReviewed = null;
            //bool? returnTotal = null;
            //bool? returnData = null;
            //bool? ignoreErrors = null;
            //Dictionary<string, string> filters = null;
            //var response = instance.RawdbDocumentsDocumentTypeCodeGET(documentTypeCode, projectIds, columns, associatedText, asZip, fmt, limit, orderBy, savedFilters, saveFilter, returnReviewed, returnTotal, returnData, ignoreErrors, filters);
            //Assert.IsInstanceOf(typeof(Dictionary<string, Object>), response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test RawdbDocumentsDocumentTypeCodePOST
        /// </summary>
        [Test]
        public void RawdbDocumentsDocumentTypeCodePOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string documentTypeCode = null;
            //RawdbDocumentsPOSTRequest rawdbDocumentsPOSTRequest = null;
            //var response = instance.RawdbDocumentsDocumentTypeCodePOST(documentTypeCode, rawdbDocumentsPOSTRequest);
            //Assert.IsInstanceOf(typeof(Dictionary<string, Object>), response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test RawdbProjectStatsProjectIdGET
        /// </summary>
        [Test]
        public void RawdbProjectStatsProjectIdGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //var response = instance.RawdbProjectStatsProjectIdGET(projectId);
            //Assert.IsInstanceOf(typeof(Dictionary<string, Object>), response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test RawdbSocialAccountsGET
        /// </summary>
        [Test]
        public void RawdbSocialAccountsGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RawdbSocialAccountsGET();
            //Assert.IsInstanceOf(typeof(List<AnyType>), response, "response is List<AnyType>");
        }
        
    }

}
