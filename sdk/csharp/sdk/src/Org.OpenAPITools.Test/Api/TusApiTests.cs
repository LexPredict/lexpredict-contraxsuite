/*
 * Contraxsuite API
 *
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing TusApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TusApiTests
    {
        private TusApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TusApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TusApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' TusApi
            //Assert.IsInstanceOf(typeof(TusApi), instance);
        }

        
        /// <summary>
        /// Test TusUploadSessionUploadSessionIdUploadGuidPATCH
        /// </summary>
        [Test]
        public void TusUploadSessionUploadSessionIdUploadGuidPATCHTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uploadSessionId = null;
            //string guid = null;
            //int uploadOffset = null;
            //string tusResumable = null;
            //bool? force = null;
            //System.IO.Stream body = null;
            //var response = instance.TusUploadSessionUploadSessionIdUploadGuidPATCH(uploadSessionId, guid, uploadOffset, tusResumable, force, body);
            //Assert.IsInstanceOf(typeof(InlineResponse400), response, "response is InlineResponse400");
        }
        
        /// <summary>
        /// Test TusUploadSessionUploadSessionIdUploadPOST
        /// </summary>
        [Test]
        public void TusUploadSessionUploadSessionIdUploadPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uploadSessionId = null;
            //int uploadLength = null;
            //string uploadMetadata = null;
            //string tusResumable = null;
            //bool? force = null;
            //Dictionary<string, Object> requestBody = null;
            //instance.TusUploadSessionUploadSessionIdUploadPOST(uploadSessionId, uploadLength, uploadMetadata, tusResumable, force, requestBody);
            
        }
        
    }

}
