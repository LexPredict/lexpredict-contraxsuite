/*
 * Contraxsuite API
 *
 * Contraxsuite API
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing DumpApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DumpApiTests
    {
        private DumpApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DumpApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DumpApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' DumpApi
            //Assert.IsInstanceOf(typeof(DumpApi), instance);
        }

        
        /// <summary>
        /// Test DumpDocumentConfigGET
        /// </summary>
        [Test]
        public void DumpDocumentConfigGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? download = null;
            //string documentTypeCodes = null;
            //var response = instance.DumpDocumentConfigGET(download, documentTypeCodes);
            //Assert.IsInstanceOf(typeof(OneOfarrayfile), response, "response is OneOfarrayfile");
        }
        
        /// <summary>
        /// Test DumpDocumentConfigPUT
        /// </summary>
        [Test]
        public void DumpDocumentConfigPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<Dictionary<string, Object>> requestBody = null;
            //var response = instance.DumpDocumentConfigPUT(requestBody);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DumpDumpFixturePOST
        /// </summary>
        [Test]
        public void DumpDumpFixturePOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DumpFixture dumpFixture = null;
            //var response = instance.DumpDumpFixturePOST(dumpFixture);
            //Assert.IsInstanceOf(typeof(System.IO.Stream), response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test DumpDumpGET
        /// </summary>
        [Test]
        public void DumpDumpGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? download = null;
            //var response = instance.DumpDumpGET(download);
            //Assert.IsInstanceOf(typeof(OneOfarrayfile), response, "response is OneOfarrayfile");
        }
        
        /// <summary>
        /// Test DumpDumpPUT
        /// </summary>
        [Test]
        public void DumpDumpPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<Dictionary<string, Object>> requestBody = null;
            //var response = instance.DumpDumpPUT(requestBody);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DumpFieldValuesGET
        /// </summary>
        [Test]
        public void DumpFieldValuesGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? download = null;
            //var response = instance.DumpFieldValuesGET(download);
            //Assert.IsInstanceOf(typeof(OneOfarrayfile), response, "response is OneOfarrayfile");
        }
        
        /// <summary>
        /// Test DumpFieldValuesPUT
        /// </summary>
        [Test]
        public void DumpFieldValuesPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<Dictionary<string, Object>> requestBody = null;
            //var response = instance.DumpFieldValuesPUT(requestBody);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DumpLoadFixturePOST
        /// </summary>
        [Test]
        public void DumpLoadFixturePOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LoadFixture loadFixture = null;
            //var response = instance.DumpLoadFixturePOST(loadFixture);
            //Assert.IsInstanceOf(typeof(List<Dictionary<string, Object>>), response, "response is List<Dictionary<string, Object>>");
        }
        
    }

}
