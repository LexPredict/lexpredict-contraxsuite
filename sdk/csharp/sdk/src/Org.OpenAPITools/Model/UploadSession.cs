/* 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// UploadSession
    /// </summary>
    [DataContract]
    public partial class UploadSession :  IEquatable<UploadSession>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UploadSession" /> class.
        /// </summary>
        /// <param name="project">project.</param>
        /// <param name="createdBy">createdBy.</param>
        public UploadSession(int project = default(int), int createdBy = default(int))
        {
            this.Project = project;
            this.CreatedBy = createdBy;
        }
        
        /// <summary>
        /// Gets or Sets Uid
        /// </summary>
        [DataMember(Name="uid", EmitDefaultValue=false)]
        public Guid Uid { get; private set; }

        /// <summary>
        /// Gets or Sets Project
        /// </summary>
        [DataMember(Name="project", EmitDefaultValue=false)]
        public int Project { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name="created_by", EmitDefaultValue=false)]
        public int CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets UploadFiles
        /// </summary>
        [DataMember(Name="upload_files", EmitDefaultValue=false)]
        public Object UploadFiles { get; private set; }

        /// <summary>
        /// Gets or Sets ReviewFiles
        /// </summary>
        [DataMember(Name="review_files", EmitDefaultValue=false)]
        public bool ReviewFiles { get; private set; }

        /// <summary>
        /// Gets or Sets Force
        /// </summary>
        [DataMember(Name="force", EmitDefaultValue=false)]
        public bool Force { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UploadSession {\n");
            sb.Append("  Uid: ").Append(Uid).Append("\n");
            sb.Append("  Project: ").Append(Project).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  UploadFiles: ").Append(UploadFiles).Append("\n");
            sb.Append("  ReviewFiles: ").Append(ReviewFiles).Append("\n");
            sb.Append("  Force: ").Append(Force).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UploadSession);
        }

        /// <summary>
        /// Returns true if UploadSession instances are equal
        /// </summary>
        /// <param name="input">Instance of UploadSession to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UploadSession input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Uid == input.Uid ||
                    (this.Uid != null &&
                    this.Uid.Equals(input.Uid))
                ) && 
                (
                    this.Project == input.Project ||
                    (this.Project != null &&
                    this.Project.Equals(input.Project))
                ) && 
                (
                    this.CreatedBy == input.CreatedBy ||
                    (this.CreatedBy != null &&
                    this.CreatedBy.Equals(input.CreatedBy))
                ) && 
                (
                    this.UploadFiles == input.UploadFiles ||
                    (this.UploadFiles != null &&
                    this.UploadFiles.Equals(input.UploadFiles))
                ) && 
                (
                    this.ReviewFiles == input.ReviewFiles ||
                    (this.ReviewFiles != null &&
                    this.ReviewFiles.Equals(input.ReviewFiles))
                ) && 
                (
                    this.Force == input.Force ||
                    (this.Force != null &&
                    this.Force.Equals(input.Force))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Uid != null)
                    hashCode = hashCode * 59 + this.Uid.GetHashCode();
                if (this.Project != null)
                    hashCode = hashCode * 59 + this.Project.GetHashCode();
                if (this.CreatedBy != null)
                    hashCode = hashCode * 59 + this.CreatedBy.GetHashCode();
                if (this.UploadFiles != null)
                    hashCode = hashCode * 59 + this.UploadFiles.GetHashCode();
                if (this.ReviewFiles != null)
                    hashCode = hashCode * 59 + this.ReviewFiles.GetHashCode();
                if (this.Force != null)
                    hashCode = hashCode * 59 + this.Force.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
