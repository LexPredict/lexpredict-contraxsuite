# coding: utf-8

"""

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class DocumentFieldStatsResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'code': 'str',
        'title': 'str',
        'total': 'int',
        'todo': 'int',
        'sys_generated_confirm_correct': 'int',
        'rejected': 'int',
        'user_generated': 'int',
        'deps_on_fields': 'list[str]'
    }

    attribute_map = {
        'code': 'code',
        'title': 'title',
        'total': 'total',
        'todo': 'todo',
        'sys_generated_confirm_correct': 'sys_generated_confirm_correct',
        'rejected': 'rejected',
        'user_generated': 'user_generated',
        'deps_on_fields': 'deps_on_fields'
    }

    def __init__(self, code=None, title=None, total=None, todo=None, sys_generated_confirm_correct=None, rejected=None, user_generated=None, deps_on_fields=None, local_vars_configuration=None):  # noqa: E501
        """DocumentFieldStatsResponse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._code = None
        self._title = None
        self._total = None
        self._todo = None
        self._sys_generated_confirm_correct = None
        self._rejected = None
        self._user_generated = None
        self._deps_on_fields = None
        self.discriminator = None

        self.code = code
        self.title = title
        self.total = total
        self.todo = todo
        self.sys_generated_confirm_correct = sys_generated_confirm_correct
        self.rejected = rejected
        self.user_generated = user_generated
        self.deps_on_fields = deps_on_fields

    @property
    def code(self):
        """Gets the code of this DocumentFieldStatsResponse.  # noqa: E501


        :return: The code of this DocumentFieldStatsResponse.  # noqa: E501
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this DocumentFieldStatsResponse.


        :param code: The code of this DocumentFieldStatsResponse.  # noqa: E501
        :type code: str
        """
        if self.local_vars_configuration.client_side_validation and code is None:  # noqa: E501
            raise ValueError("Invalid value for `code`, must not be `None`")  # noqa: E501

        self._code = code

    @property
    def title(self):
        """Gets the title of this DocumentFieldStatsResponse.  # noqa: E501


        :return: The title of this DocumentFieldStatsResponse.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this DocumentFieldStatsResponse.


        :param title: The title of this DocumentFieldStatsResponse.  # noqa: E501
        :type title: str
        """
        if self.local_vars_configuration.client_side_validation and title is None:  # noqa: E501
            raise ValueError("Invalid value for `title`, must not be `None`")  # noqa: E501

        self._title = title

    @property
    def total(self):
        """Gets the total of this DocumentFieldStatsResponse.  # noqa: E501


        :return: The total of this DocumentFieldStatsResponse.  # noqa: E501
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this DocumentFieldStatsResponse.


        :param total: The total of this DocumentFieldStatsResponse.  # noqa: E501
        :type total: int
        """
        if self.local_vars_configuration.client_side_validation and total is None:  # noqa: E501
            raise ValueError("Invalid value for `total`, must not be `None`")  # noqa: E501

        self._total = total

    @property
    def todo(self):
        """Gets the todo of this DocumentFieldStatsResponse.  # noqa: E501


        :return: The todo of this DocumentFieldStatsResponse.  # noqa: E501
        :rtype: int
        """
        return self._todo

    @todo.setter
    def todo(self, todo):
        """Sets the todo of this DocumentFieldStatsResponse.


        :param todo: The todo of this DocumentFieldStatsResponse.  # noqa: E501
        :type todo: int
        """
        if self.local_vars_configuration.client_side_validation and todo is None:  # noqa: E501
            raise ValueError("Invalid value for `todo`, must not be `None`")  # noqa: E501

        self._todo = todo

    @property
    def sys_generated_confirm_correct(self):
        """Gets the sys_generated_confirm_correct of this DocumentFieldStatsResponse.  # noqa: E501


        :return: The sys_generated_confirm_correct of this DocumentFieldStatsResponse.  # noqa: E501
        :rtype: int
        """
        return self._sys_generated_confirm_correct

    @sys_generated_confirm_correct.setter
    def sys_generated_confirm_correct(self, sys_generated_confirm_correct):
        """Sets the sys_generated_confirm_correct of this DocumentFieldStatsResponse.


        :param sys_generated_confirm_correct: The sys_generated_confirm_correct of this DocumentFieldStatsResponse.  # noqa: E501
        :type sys_generated_confirm_correct: int
        """
        if self.local_vars_configuration.client_side_validation and sys_generated_confirm_correct is None:  # noqa: E501
            raise ValueError("Invalid value for `sys_generated_confirm_correct`, must not be `None`")  # noqa: E501

        self._sys_generated_confirm_correct = sys_generated_confirm_correct

    @property
    def rejected(self):
        """Gets the rejected of this DocumentFieldStatsResponse.  # noqa: E501


        :return: The rejected of this DocumentFieldStatsResponse.  # noqa: E501
        :rtype: int
        """
        return self._rejected

    @rejected.setter
    def rejected(self, rejected):
        """Sets the rejected of this DocumentFieldStatsResponse.


        :param rejected: The rejected of this DocumentFieldStatsResponse.  # noqa: E501
        :type rejected: int
        """
        if self.local_vars_configuration.client_side_validation and rejected is None:  # noqa: E501
            raise ValueError("Invalid value for `rejected`, must not be `None`")  # noqa: E501

        self._rejected = rejected

    @property
    def user_generated(self):
        """Gets the user_generated of this DocumentFieldStatsResponse.  # noqa: E501


        :return: The user_generated of this DocumentFieldStatsResponse.  # noqa: E501
        :rtype: int
        """
        return self._user_generated

    @user_generated.setter
    def user_generated(self, user_generated):
        """Sets the user_generated of this DocumentFieldStatsResponse.


        :param user_generated: The user_generated of this DocumentFieldStatsResponse.  # noqa: E501
        :type user_generated: int
        """
        if self.local_vars_configuration.client_side_validation and user_generated is None:  # noqa: E501
            raise ValueError("Invalid value for `user_generated`, must not be `None`")  # noqa: E501

        self._user_generated = user_generated

    @property
    def deps_on_fields(self):
        """Gets the deps_on_fields of this DocumentFieldStatsResponse.  # noqa: E501


        :return: The deps_on_fields of this DocumentFieldStatsResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._deps_on_fields

    @deps_on_fields.setter
    def deps_on_fields(self, deps_on_fields):
        """Sets the deps_on_fields of this DocumentFieldStatsResponse.


        :param deps_on_fields: The deps_on_fields of this DocumentFieldStatsResponse.  # noqa: E501
        :type deps_on_fields: list[str]
        """
        if self.local_vars_configuration.client_side_validation and deps_on_fields is None:  # noqa: E501
            raise ValueError("Invalid value for `deps_on_fields`, must not be `None`")  # noqa: E501

        self._deps_on_fields = deps_on_fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DocumentFieldStatsResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DocumentFieldStatsResponse):
            return True

        return self.to_dict() != other.to_dict()
