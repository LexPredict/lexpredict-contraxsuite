# coding: utf-8

"""

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.document_field_detector_detail import DocumentFieldDetectorDetail  # noqa: E501
from openapi_client.rest import ApiException

class TestDocumentFieldDetectorDetail(unittest.TestCase):
    """DocumentFieldDetectorDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DocumentFieldDetectorDetail
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.document_field_detector_detail.DocumentFieldDetectorDetail()  # noqa: E501
        if include_optional :
            return DocumentFieldDetectorDetail(
                uid = '0', 
                category = 'simple_config', 
                field = '0', 
                field__code = '0', 
                field__title = '0', 
                field__uid = '0', 
                field__type = '0', 
                field__document_type__title = '0', 
                exclude_regexps = '0', 
                definition_words = '0', 
                include_regexps = '0', 
                regexps_pre_process_lower = True, 
                detected_value = '0', 
                extraction_hint = 'TAKE_FIRST', 
                text_part = 'FULL'
            )
        else :
            return DocumentFieldDetectorDetail(
                field = '0',
        )

    def testDocumentFieldDetectorDetail(self):
        """Test DocumentFieldDetectorDetail"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
