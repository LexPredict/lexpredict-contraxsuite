# coding: utf-8

"""

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.task_queue import TaskQueue  # noqa: E501
from openapi_client.rest import ApiException

class TestTaskQueue(unittest.TestCase):
    """TaskQueue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TaskQueue
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.task_queue.TaskQueue()  # noqa: E501
        if include_optional :
            return TaskQueue(
                pk = 56, 
                description = '0', 
                documents = [
                    56
                    ], 
                documents_data = [
                    openapi_client.models.task_queue_documents_data.TaskQueue_documents_data(
                        pk = 56, 
                        name = '0', 
                        description = '0', 
                        document_type = '0', )
                    ], 
                completed_documents = [
                    56
                    ], 
                completed_documents_data = [
                    openapi_client.models.task_queue_documents_data.TaskQueue_documents_data(
                        pk = 56, 
                        name = '0', 
                        description = '0', 
                        document_type = '0', )
                    ], 
                reviewers = [
                    56
                    ], 
                reviewers_data = [
                    openapi_client.models.task_queue_reviewers_data.TaskQueue_reviewers_data(
                        pk = 56, 
                        username = 'a', 
                        role = 56, )
                    ], 
                progress = '0', 
                data = '0'
            )
        else :
            return TaskQueue(
        )

    def testTaskQueue(self):
        """Test TaskQueue"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
